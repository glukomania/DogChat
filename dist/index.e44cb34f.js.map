{"mappings":"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","sources":["less.js"],"sourcesContent":["/**\n * Less - Leaner CSS v4.1.2\n * http://lesscss.org\n * \n * Copyright (c) 2009-2021, Alexis Sellier <self@cloudhead.net>\n * Licensed under the Apache-2.0 License.\n *\n * @license Apache-2.0\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.less = factory());\n}(this, (function () { 'use strict';\n\n    // Export a new default each time\n    function defaultOptions () {\n        return {\n            /* Inline Javascript - @plugin still allowed */\n            javascriptEnabled: false,\n            /* Outputs a makefile import dependency list to stdout. */\n            depends: false,\n            /* (DEPRECATED) Compress using less built-in compression.\n             * This does an okay job but does not utilise all the tricks of\n             * dedicated css compression. */\n            compress: false,\n            /* Runs the less parser and just reports errors without any output. */\n            lint: false,\n            /* Sets available include paths.\n             * If the file in an @import rule does not exist at that exact location,\n             * less will look for it at the location(s) passed to this option.\n             * You might use this for instance to specify a path to a library which\n             * you want to be referenced simply and relatively in the less files. */\n            paths: [],\n            /* color output in the terminal */\n            color: true,\n            /* The strictImports controls whether the compiler will allow an @import inside of either\n             * @media blocks or (a later addition) other selector blocks.\n             * See: https://github.com/less/less.js/issues/656 */\n            strictImports: false,\n            /* Allow Imports from Insecure HTTPS Hosts */\n            insecure: false,\n            /* Allows you to add a path to every generated import and url in your css.\n             * This does not affect less import statements that are processed, just ones\n             * that are left in the output css. */\n            rootpath: '',\n            /* By default URLs are kept as-is, so if you import a file in a sub-directory\n             * that references an image, exactly the same URL will be output in the css.\n             * This option allows you to re-write URL's in imported files so that the\n             * URL is always relative to the base imported file */\n            rewriteUrls: false,\n            /* How to process math\n             *   0 always           - eagerly try to solve all operations\n             *   1 parens-division  - require parens for division \"/\"\n             *   2 parens | strict  - require parens for all operations\n             *   3 strict-legacy    - legacy strict behavior (super-strict)\n             */\n            math: 1,\n            /* Without this option, less attempts to guess at the output unit when it does maths. */\n            strictUnits: false,\n            /* Effectively the declaration is put at the top of your base Less file,\n             * meaning it can be used but it also can be overridden if this variable\n             * is defined in the file. */\n            globalVars: null,\n            /* As opposed to the global variable option, this puts the declaration at the\n             * end of your base file, meaning it will override anything defined in your Less file. */\n            modifyVars: null,\n            /* This option allows you to specify a argument to go on to every URL.  */\n            urlArgs: ''\n        };\n    }\n\n    function extractId(href) {\n        return href.replace(/^[a-z-]+:\\/+?[^\\/]+/, '') // Remove protocol & domain\n            .replace(/[\\?\\&]livereload=\\w+/, '') // Remove LiveReload cachebuster\n            .replace(/^\\//, '') // Remove root /\n            .replace(/\\.[a-zA-Z]+$/, '') // Remove simple extension\n            .replace(/[^\\.\\w-]+/g, '-') // Replace illegal characters\n            .replace(/\\./g, ':'); // Replace dots with colons(for valid id)\n    }\n    function addDataAttr(options, tag) {\n        for (var opt in tag.dataset) {\n            if (tag.dataset.hasOwnProperty(opt)) {\n                if (opt === 'env' || opt === 'dumpLineNumbers' || opt === 'rootpath' || opt === 'errorReporting') {\n                    options[opt] = tag.dataset[opt];\n                }\n                else {\n                    try {\n                        options[opt] = JSON.parse(tag.dataset[opt]);\n                    }\n                    catch (_) { }\n                }\n            }\n        }\n    }\n\n    var browser = {\n        createCSS: function (document, styles, sheet) {\n            // Strip the query-string\n            var href = sheet.href || '';\n            // If there is no title set, use the filename, minus the extension\n            var id = \"less:\" + (sheet.title || extractId(href));\n            // If this has already been inserted into the DOM, we may need to replace it\n            var oldStyleNode = document.getElementById(id);\n            var keepOldStyleNode = false;\n            // Create a new stylesheet node for insertion or (if necessary) replacement\n            var styleNode = document.createElement('style');\n            styleNode.setAttribute('type', 'text/css');\n            if (sheet.media) {\n                styleNode.setAttribute('media', sheet.media);\n            }\n            styleNode.id = id;\n            if (!styleNode.styleSheet) {\n                styleNode.appendChild(document.createTextNode(styles));\n                // If new contents match contents of oldStyleNode, don't replace oldStyleNode\n                keepOldStyleNode = (oldStyleNode !== null && oldStyleNode.childNodes.length > 0 && styleNode.childNodes.length > 0 &&\n                    oldStyleNode.firstChild.nodeValue === styleNode.firstChild.nodeValue);\n            }\n            var head = document.getElementsByTagName('head')[0];\n            // If there is no oldStyleNode, just append; otherwise, only append if we need\n            // to replace oldStyleNode with an updated stylesheet\n            if (oldStyleNode === null || keepOldStyleNode === false) {\n                var nextEl = sheet && sheet.nextSibling || null;\n                if (nextEl) {\n                    nextEl.parentNode.insertBefore(styleNode, nextEl);\n                }\n                else {\n                    head.appendChild(styleNode);\n                }\n            }\n            if (oldStyleNode && keepOldStyleNode === false) {\n                oldStyleNode.parentNode.removeChild(oldStyleNode);\n            }\n            // For IE.\n            // This needs to happen *after* the style element is added to the DOM, otherwise IE 7 and 8 may crash.\n            // See http://social.msdn.microsoft.com/Forums/en-US/7e081b65-878a-4c22-8e68-c10d39c2ed32/internet-explorer-crashes-appending-style-element-to-head\n            if (styleNode.styleSheet) {\n                try {\n                    styleNode.styleSheet.cssText = styles;\n                }\n                catch (e) {\n                    throw new Error('Couldn\\'t reassign styleSheet.cssText.');\n                }\n            }\n        },\n        currentScript: function (window) {\n            var document = window.document;\n            return document.currentScript || (function () {\n                var scripts = document.getElementsByTagName('script');\n                return scripts[scripts.length - 1];\n            })();\n        }\n    };\n\n    var addDefaultOptions = (function (window, options) {\n        // use options from the current script tag data attribues\n        addDataAttr(options, browser.currentScript(window));\n        if (options.isFileProtocol === undefined) {\n            options.isFileProtocol = /^(file|(chrome|safari)(-extension)?|resource|qrc|app):/.test(window.location.protocol);\n        }\n        // Load styles asynchronously (default: false)\n        //\n        // This is set to `false` by default, so that the body\n        // doesn't start loading before the stylesheets are parsed.\n        // Setting this to `true` can result in flickering.\n        //\n        options.async = options.async || false;\n        options.fileAsync = options.fileAsync || false;\n        // Interval between watch polls\n        options.poll = options.poll || (options.isFileProtocol ? 1000 : 1500);\n        options.env = options.env || (window.location.hostname == '127.0.0.1' ||\n            window.location.hostname == '0.0.0.0' ||\n            window.location.hostname == 'localhost' ||\n            (window.location.port &&\n                window.location.port.length > 0) ||\n            options.isFileProtocol ? 'development'\n            : 'production');\n        var dumpLineNumbers = /!dumpLineNumbers:(comments|mediaquery|all)/.exec(window.location.hash);\n        if (dumpLineNumbers) {\n            options.dumpLineNumbers = dumpLineNumbers[1];\n        }\n        if (options.useFileCache === undefined) {\n            options.useFileCache = true;\n        }\n        if (options.onReady === undefined) {\n            options.onReady = true;\n        }\n        if (options.relativeUrls) {\n            options.rewriteUrls = 'all';\n        }\n    });\n\n    var logger$1 = {\n        error: function (msg) {\n            this._fireEvent('error', msg);\n        },\n        warn: function (msg) {\n            this._fireEvent('warn', msg);\n        },\n        info: function (msg) {\n            this._fireEvent('info', msg);\n        },\n        debug: function (msg) {\n            this._fireEvent('debug', msg);\n        },\n        addListener: function (listener) {\n            this._listeners.push(listener);\n        },\n        removeListener: function (listener) {\n            for (var i = 0; i < this._listeners.length; i++) {\n                if (this._listeners[i] === listener) {\n                    this._listeners.splice(i, 1);\n                    return;\n                }\n            }\n        },\n        _fireEvent: function (type, msg) {\n            for (var i = 0; i < this._listeners.length; i++) {\n                var logFunction = this._listeners[i][type];\n                if (logFunction) {\n                    logFunction(msg);\n                }\n            }\n        },\n        _listeners: []\n    };\n\n    /**\n     * @todo Document why this abstraction exists, and the relationship between\n     *       environment, file managers, and plugin manager\n     */\n    var Environment = /** @class */ (function () {\n        function Environment(externalEnvironment, fileManagers) {\n            this.fileManagers = fileManagers || [];\n            externalEnvironment = externalEnvironment || {};\n            var optionalFunctions = ['encodeBase64', 'mimeLookup', 'charsetLookup', 'getSourceMapGenerator'];\n            var requiredFunctions = [];\n            var functions = requiredFunctions.concat(optionalFunctions);\n            for (var i = 0; i < functions.length; i++) {\n                var propName = functions[i];\n                var environmentFunc = externalEnvironment[propName];\n                if (environmentFunc) {\n                    this[propName] = environmentFunc.bind(externalEnvironment);\n                }\n                else if (i < requiredFunctions.length) {\n                    this.warn(\"missing required function in environment - \" + propName);\n                }\n            }\n        }\n        Environment.prototype.getFileManager = function (filename, currentDirectory, options, environment, isSync) {\n            if (!filename) {\n                logger$1.warn('getFileManager called with no filename.. Please report this issue. continuing.');\n            }\n            if (currentDirectory == null) {\n                logger$1.warn('getFileManager called with null directory.. Please report this issue. continuing.');\n            }\n            var fileManagers = this.fileManagers;\n            if (options.pluginManager) {\n                fileManagers = [].concat(fileManagers).concat(options.pluginManager.getFileManagers());\n            }\n            for (var i = fileManagers.length - 1; i >= 0; i--) {\n                var fileManager = fileManagers[i];\n                if (fileManager[isSync ? 'supportsSync' : 'supports'](filename, currentDirectory, options, environment)) {\n                    return fileManager;\n                }\n            }\n            return null;\n        };\n        Environment.prototype.addFileManager = function (fileManager) {\n            this.fileManagers.push(fileManager);\n        };\n        Environment.prototype.clearFileManagers = function () {\n            this.fileManagers = [];\n        };\n        return Environment;\n    }());\n\n    var colors = {\n        'aliceblue': '#f0f8ff',\n        'antiquewhite': '#faebd7',\n        'aqua': '#00ffff',\n        'aquamarine': '#7fffd4',\n        'azure': '#f0ffff',\n        'beige': '#f5f5dc',\n        'bisque': '#ffe4c4',\n        'black': '#000000',\n        'blanchedalmond': '#ffebcd',\n        'blue': '#0000ff',\n        'blueviolet': '#8a2be2',\n        'brown': '#a52a2a',\n        'burlywood': '#deb887',\n        'cadetblue': '#5f9ea0',\n        'chartreuse': '#7fff00',\n        'chocolate': '#d2691e',\n        'coral': '#ff7f50',\n        'cornflowerblue': '#6495ed',\n        'cornsilk': '#fff8dc',\n        'crimson': '#dc143c',\n        'cyan': '#00ffff',\n        'darkblue': '#00008b',\n        'darkcyan': '#008b8b',\n        'darkgoldenrod': '#b8860b',\n        'darkgray': '#a9a9a9',\n        'darkgrey': '#a9a9a9',\n        'darkgreen': '#006400',\n        'darkkhaki': '#bdb76b',\n        'darkmagenta': '#8b008b',\n        'darkolivegreen': '#556b2f',\n        'darkorange': '#ff8c00',\n        'darkorchid': '#9932cc',\n        'darkred': '#8b0000',\n        'darksalmon': '#e9967a',\n        'darkseagreen': '#8fbc8f',\n        'darkslateblue': '#483d8b',\n        'darkslategray': '#2f4f4f',\n        'darkslategrey': '#2f4f4f',\n        'darkturquoise': '#00ced1',\n        'darkviolet': '#9400d3',\n        'deeppink': '#ff1493',\n        'deepskyblue': '#00bfff',\n        'dimgray': '#696969',\n        'dimgrey': '#696969',\n        'dodgerblue': '#1e90ff',\n        'firebrick': '#b22222',\n        'floralwhite': '#fffaf0',\n        'forestgreen': '#228b22',\n        'fuchsia': '#ff00ff',\n        'gainsboro': '#dcdcdc',\n        'ghostwhite': '#f8f8ff',\n        'gold': '#ffd700',\n        'goldenrod': '#daa520',\n        'gray': '#808080',\n        'grey': '#808080',\n        'green': '#008000',\n        'greenyellow': '#adff2f',\n        'honeydew': '#f0fff0',\n        'hotpink': '#ff69b4',\n        'indianred': '#cd5c5c',\n        'indigo': '#4b0082',\n        'ivory': '#fffff0',\n        'khaki': '#f0e68c',\n        'lavender': '#e6e6fa',\n        'lavenderblush': '#fff0f5',\n        'lawngreen': '#7cfc00',\n        'lemonchiffon': '#fffacd',\n        'lightblue': '#add8e6',\n        'lightcoral': '#f08080',\n        'lightcyan': '#e0ffff',\n        'lightgoldenrodyellow': '#fafad2',\n        'lightgray': '#d3d3d3',\n        'lightgrey': '#d3d3d3',\n        'lightgreen': '#90ee90',\n        'lightpink': '#ffb6c1',\n        'lightsalmon': '#ffa07a',\n        'lightseagreen': '#20b2aa',\n        'lightskyblue': '#87cefa',\n        'lightslategray': '#778899',\n        'lightslategrey': '#778899',\n        'lightsteelblue': '#b0c4de',\n        'lightyellow': '#ffffe0',\n        'lime': '#00ff00',\n        'limegreen': '#32cd32',\n        'linen': '#faf0e6',\n        'magenta': '#ff00ff',\n        'maroon': '#800000',\n        'mediumaquamarine': '#66cdaa',\n        'mediumblue': '#0000cd',\n        'mediumorchid': '#ba55d3',\n        'mediumpurple': '#9370d8',\n        'mediumseagreen': '#3cb371',\n        'mediumslateblue': '#7b68ee',\n        'mediumspringgreen': '#00fa9a',\n        'mediumturquoise': '#48d1cc',\n        'mediumvioletred': '#c71585',\n        'midnightblue': '#191970',\n        'mintcream': '#f5fffa',\n        'mistyrose': '#ffe4e1',\n        'moccasin': '#ffe4b5',\n        'navajowhite': '#ffdead',\n        'navy': '#000080',\n        'oldlace': '#fdf5e6',\n        'olive': '#808000',\n        'olivedrab': '#6b8e23',\n        'orange': '#ffa500',\n        'orangered': '#ff4500',\n        'orchid': '#da70d6',\n        'palegoldenrod': '#eee8aa',\n        'palegreen': '#98fb98',\n        'paleturquoise': '#afeeee',\n        'palevioletred': '#d87093',\n        'papayawhip': '#ffefd5',\n        'peachpuff': '#ffdab9',\n        'peru': '#cd853f',\n        'pink': '#ffc0cb',\n        'plum': '#dda0dd',\n        'powderblue': '#b0e0e6',\n        'purple': '#800080',\n        'rebeccapurple': '#663399',\n        'red': '#ff0000',\n        'rosybrown': '#bc8f8f',\n        'royalblue': '#4169e1',\n        'saddlebrown': '#8b4513',\n        'salmon': '#fa8072',\n        'sandybrown': '#f4a460',\n        'seagreen': '#2e8b57',\n        'seashell': '#fff5ee',\n        'sienna': '#a0522d',\n        'silver': '#c0c0c0',\n        'skyblue': '#87ceeb',\n        'slateblue': '#6a5acd',\n        'slategray': '#708090',\n        'slategrey': '#708090',\n        'snow': '#fffafa',\n        'springgreen': '#00ff7f',\n        'steelblue': '#4682b4',\n        'tan': '#d2b48c',\n        'teal': '#008080',\n        'thistle': '#d8bfd8',\n        'tomato': '#ff6347',\n        'turquoise': '#40e0d0',\n        'violet': '#ee82ee',\n        'wheat': '#f5deb3',\n        'white': '#ffffff',\n        'whitesmoke': '#f5f5f5',\n        'yellow': '#ffff00',\n        'yellowgreen': '#9acd32'\n    };\n\n    var unitConversions = {\n        length: {\n            'm': 1,\n            'cm': 0.01,\n            'mm': 0.001,\n            'in': 0.0254,\n            'px': 0.0254 / 96,\n            'pt': 0.0254 / 72,\n            'pc': 0.0254 / 72 * 12\n        },\n        duration: {\n            's': 1,\n            'ms': 0.001\n        },\n        angle: {\n            'rad': 1 / (2 * Math.PI),\n            'deg': 1 / 360,\n            'grad': 1 / 400,\n            'turn': 1\n        }\n    };\n\n    var data = { colors: colors, unitConversions: unitConversions };\n\n    /**\n     * The reason why Node is a class and other nodes simply do not extend\n     * from Node (since we're transpiling) is due to this issue:\n     *\n     * https://github.com/less/less.js/issues/3434\n     */\n    var Node = /** @class */ (function () {\n        function Node() {\n            this.parent = null;\n            this.visibilityBlocks = undefined;\n            this.nodeVisible = undefined;\n            this.rootNode = null;\n            this.parsed = null;\n        }\n        Object.defineProperty(Node.prototype, \"currentFileInfo\", {\n            get: function () {\n                return this.fileInfo();\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(Node.prototype, \"index\", {\n            get: function () {\n                return this.getIndex();\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Node.prototype.setParent = function (nodes, parent) {\n            function set(node) {\n                if (node && node instanceof Node) {\n                    node.parent = parent;\n                }\n            }\n            if (Array.isArray(nodes)) {\n                nodes.forEach(set);\n            }\n            else {\n                set(nodes);\n            }\n        };\n        Node.prototype.getIndex = function () {\n            return this._index || (this.parent && this.parent.getIndex()) || 0;\n        };\n        Node.prototype.fileInfo = function () {\n            return this._fileInfo || (this.parent && this.parent.fileInfo()) || {};\n        };\n        Node.prototype.isRulesetLike = function () { return false; };\n        Node.prototype.toCSS = function (context) {\n            var strs = [];\n            this.genCSS(context, {\n                add: function (chunk, fileInfo, index) {\n                    strs.push(chunk);\n                },\n                isEmpty: function () {\n                    return strs.length === 0;\n                }\n            });\n            return strs.join('');\n        };\n        Node.prototype.genCSS = function (context, output) {\n            output.add(this.value);\n        };\n        Node.prototype.accept = function (visitor) {\n            this.value = visitor.visit(this.value);\n        };\n        Node.prototype.eval = function () { return this; };\n        Node.prototype._operate = function (context, op, a, b) {\n            switch (op) {\n                case '+': return a + b;\n                case '-': return a - b;\n                case '*': return a * b;\n                case '/': return a / b;\n            }\n        };\n        Node.prototype.fround = function (context, value) {\n            var precision = context && context.numPrecision;\n            // add \"epsilon\" to ensure numbers like 1.000000005 (represented as 1.000000004999...) are properly rounded:\n            return (precision) ? Number((value + 2e-16).toFixed(precision)) : value;\n        };\n        Node.compare = function (a, b) {\n            /* returns:\n             -1: a < b\n             0: a = b\n             1: a > b\n             and *any* other value for a != b (e.g. undefined, NaN, -2 etc.) */\n            if ((a.compare) &&\n                // for \"symmetric results\" force toCSS-based comparison\n                // of Quoted or Anonymous if either value is one of those\n                !(b.type === 'Quoted' || b.type === 'Anonymous')) {\n                return a.compare(b);\n            }\n            else if (b.compare) {\n                return -b.compare(a);\n            }\n            else if (a.type !== b.type) {\n                return undefined;\n            }\n            a = a.value;\n            b = b.value;\n            if (!Array.isArray(a)) {\n                return a === b ? 0 : undefined;\n            }\n            if (a.length !== b.length) {\n                return undefined;\n            }\n            for (var i = 0; i < a.length; i++) {\n                if (Node.compare(a[i], b[i]) !== 0) {\n                    return undefined;\n                }\n            }\n            return 0;\n        };\n        Node.numericCompare = function (a, b) {\n            return a < b ? -1\n                : a === b ? 0\n                    : a > b ? 1 : undefined;\n        };\n        // Returns true if this node represents root of ast imported by reference\n        Node.prototype.blocksVisibility = function () {\n            if (this.visibilityBlocks == null) {\n                this.visibilityBlocks = 0;\n            }\n            return this.visibilityBlocks !== 0;\n        };\n        Node.prototype.addVisibilityBlock = function () {\n            if (this.visibilityBlocks == null) {\n                this.visibilityBlocks = 0;\n            }\n            this.visibilityBlocks = this.visibilityBlocks + 1;\n        };\n        Node.prototype.removeVisibilityBlock = function () {\n            if (this.visibilityBlocks == null) {\n                this.visibilityBlocks = 0;\n            }\n            this.visibilityBlocks = this.visibilityBlocks - 1;\n        };\n        // Turns on node visibility - if called node will be shown in output regardless\n        // of whether it comes from import by reference or not\n        Node.prototype.ensureVisibility = function () {\n            this.nodeVisible = true;\n        };\n        // Turns off node visibility - if called node will NOT be shown in output regardless\n        // of whether it comes from import by reference or not\n        Node.prototype.ensureInvisibility = function () {\n            this.nodeVisible = false;\n        };\n        // return values:\n        // false - the node must not be visible\n        // true - the node must be visible\n        // undefined or null - the node has the same visibility as its parent\n        Node.prototype.isVisible = function () {\n            return this.nodeVisible;\n        };\n        Node.prototype.visibilityInfo = function () {\n            return {\n                visibilityBlocks: this.visibilityBlocks,\n                nodeVisible: this.nodeVisible\n            };\n        };\n        Node.prototype.copyVisibilityInfo = function (info) {\n            if (!info) {\n                return;\n            }\n            this.visibilityBlocks = info.visibilityBlocks;\n            this.nodeVisible = info.nodeVisible;\n        };\n        return Node;\n    }());\n\n    //\n    // RGB Colors - #ff0014, #eee\n    //\n    var Color = function (rgb, a, originalForm) {\n        var self = this;\n        //\n        // The end goal here, is to parse the arguments\n        // into an integer triplet, such as `128, 255, 0`\n        //\n        // This facilitates operations and conversions.\n        //\n        if (Array.isArray(rgb)) {\n            this.rgb = rgb;\n        }\n        else if (rgb.length >= 6) {\n            this.rgb = [];\n            rgb.match(/.{2}/g).map(function (c, i) {\n                if (i < 3) {\n                    self.rgb.push(parseInt(c, 16));\n                }\n                else {\n                    self.alpha = (parseInt(c, 16)) / 255;\n                }\n            });\n        }\n        else {\n            this.rgb = [];\n            rgb.split('').map(function (c, i) {\n                if (i < 3) {\n                    self.rgb.push(parseInt(c + c, 16));\n                }\n                else {\n                    self.alpha = (parseInt(c + c, 16)) / 255;\n                }\n            });\n        }\n        this.alpha = this.alpha || (typeof a === 'number' ? a : 1);\n        if (typeof originalForm !== 'undefined') {\n            this.value = originalForm;\n        }\n    };\n    Color.prototype = Object.assign(new Node(), {\n        type: 'Color',\n        luma: function () {\n            var r = this.rgb[0] / 255, g = this.rgb[1] / 255, b = this.rgb[2] / 255;\n            r = (r <= 0.03928) ? r / 12.92 : Math.pow(((r + 0.055) / 1.055), 2.4);\n            g = (g <= 0.03928) ? g / 12.92 : Math.pow(((g + 0.055) / 1.055), 2.4);\n            b = (b <= 0.03928) ? b / 12.92 : Math.pow(((b + 0.055) / 1.055), 2.4);\n            return 0.2126 * r + 0.7152 * g + 0.0722 * b;\n        },\n        genCSS: function (context, output) {\n            output.add(this.toCSS(context));\n        },\n        toCSS: function (context, doNotCompress) {\n            var compress = context && context.compress && !doNotCompress;\n            var color;\n            var alpha;\n            var colorFunction;\n            var args = [];\n            // `value` is set if this color was originally\n            // converted from a named color string so we need\n            // to respect this and try to output named color too.\n            alpha = this.fround(context, this.alpha);\n            if (this.value) {\n                if (this.value.indexOf('rgb') === 0) {\n                    if (alpha < 1) {\n                        colorFunction = 'rgba';\n                    }\n                }\n                else if (this.value.indexOf('hsl') === 0) {\n                    if (alpha < 1) {\n                        colorFunction = 'hsla';\n                    }\n                    else {\n                        colorFunction = 'hsl';\n                    }\n                }\n                else {\n                    return this.value;\n                }\n            }\n            else {\n                if (alpha < 1) {\n                    colorFunction = 'rgba';\n                }\n            }\n            switch (colorFunction) {\n                case 'rgba':\n                    args = this.rgb.map(function (c) {\n                        return clamp$1(Math.round(c), 255);\n                    }).concat(clamp$1(alpha, 1));\n                    break;\n                case 'hsla':\n                    args.push(clamp$1(alpha, 1));\n                case 'hsl':\n                    color = this.toHSL();\n                    args = [\n                        this.fround(context, color.h),\n                        this.fround(context, color.s * 100) + \"%\",\n                        this.fround(context, color.l * 100) + \"%\"\n                    ].concat(args);\n            }\n            if (colorFunction) {\n                // Values are capped between `0` and `255`, rounded and zero-padded.\n                return colorFunction + \"(\" + args.join(\",\" + (compress ? '' : ' ')) + \")\";\n            }\n            color = this.toRGB();\n            if (compress) {\n                var splitcolor = color.split('');\n                // Convert color to short format\n                if (splitcolor[1] === splitcolor[2] && splitcolor[3] === splitcolor[4] && splitcolor[5] === splitcolor[6]) {\n                    color = \"#\" + splitcolor[1] + splitcolor[3] + splitcolor[5];\n                }\n            }\n            return color;\n        },\n        //\n        // Operations have to be done per-channel, if not,\n        // channels will spill onto each other. Once we have\n        // our result, in the form of an integer triplet,\n        // we create a new Color node to hold the result.\n        //\n        operate: function (context, op, other) {\n            var rgb = new Array(3);\n            var alpha = this.alpha * (1 - other.alpha) + other.alpha;\n            for (var c = 0; c < 3; c++) {\n                rgb[c] = this._operate(context, op, this.rgb[c], other.rgb[c]);\n            }\n            return new Color(rgb, alpha);\n        },\n        toRGB: function () {\n            return toHex(this.rgb);\n        },\n        toHSL: function () {\n            var r = this.rgb[0] / 255, g = this.rgb[1] / 255, b = this.rgb[2] / 255, a = this.alpha;\n            var max = Math.max(r, g, b), min = Math.min(r, g, b);\n            var h;\n            var s;\n            var l = (max + min) / 2;\n            var d = max - min;\n            if (max === min) {\n                h = s = 0;\n            }\n            else {\n                s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n                switch (max) {\n                    case r:\n                        h = (g - b) / d + (g < b ? 6 : 0);\n                        break;\n                    case g:\n                        h = (b - r) / d + 2;\n                        break;\n                    case b:\n                        h = (r - g) / d + 4;\n                        break;\n                }\n                h /= 6;\n            }\n            return { h: h * 360, s: s, l: l, a: a };\n        },\n        // Adapted from http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript\n        toHSV: function () {\n            var r = this.rgb[0] / 255, g = this.rgb[1] / 255, b = this.rgb[2] / 255, a = this.alpha;\n            var max = Math.max(r, g, b), min = Math.min(r, g, b);\n            var h;\n            var s;\n            var v = max;\n            var d = max - min;\n            if (max === 0) {\n                s = 0;\n            }\n            else {\n                s = d / max;\n            }\n            if (max === min) {\n                h = 0;\n            }\n            else {\n                switch (max) {\n                    case r:\n                        h = (g - b) / d + (g < b ? 6 : 0);\n                        break;\n                    case g:\n                        h = (b - r) / d + 2;\n                        break;\n                    case b:\n                        h = (r - g) / d + 4;\n                        break;\n                }\n                h /= 6;\n            }\n            return { h: h * 360, s: s, v: v, a: a };\n        },\n        toARGB: function () {\n            return toHex([this.alpha * 255].concat(this.rgb));\n        },\n        compare: function (x) {\n            return (x.rgb &&\n                x.rgb[0] === this.rgb[0] &&\n                x.rgb[1] === this.rgb[1] &&\n                x.rgb[2] === this.rgb[2] &&\n                x.alpha === this.alpha) ? 0 : undefined;\n        }\n    });\n    Color.fromKeyword = function (keyword) {\n        var c;\n        var key = keyword.toLowerCase();\n        if (colors.hasOwnProperty(key)) {\n            c = new Color(colors[key].slice(1));\n        }\n        else if (key === 'transparent') {\n            c = new Color([0, 0, 0], 0);\n        }\n        if (c) {\n            c.value = keyword;\n            return c;\n        }\n    };\n    function clamp$1(v, max) {\n        return Math.min(Math.max(v, 0), max);\n    }\n    function toHex(v) {\n        return \"#\" + v.map(function (c) {\n            c = clamp$1(Math.round(c), 255);\n            return (c < 16 ? '0' : '') + c.toString(16);\n        }).join('');\n    }\n\n    var Paren = function (node) {\n        this.value = node;\n    };\n    Paren.prototype = Object.assign(new Node(), {\n        type: 'Paren',\n        genCSS: function (context, output) {\n            output.add('(');\n            this.value.genCSS(context, output);\n            output.add(')');\n        },\n        eval: function (context) {\n            return new Paren(this.value.eval(context));\n        }\n    });\n\n    var _noSpaceCombinators = {\n        '': true,\n        ' ': true,\n        '|': true\n    };\n    var Combinator = function (value) {\n        if (value === ' ') {\n            this.value = ' ';\n            this.emptyOrWhitespace = true;\n        }\n        else {\n            this.value = value ? value.trim() : '';\n            this.emptyOrWhitespace = this.value === '';\n        }\n    };\n    Combinator.prototype = Object.assign(new Node(), {\n        type: 'Combinator',\n        genCSS: function (context, output) {\n            var spaceOrEmpty = (context.compress || _noSpaceCombinators[this.value]) ? '' : ' ';\n            output.add(spaceOrEmpty + this.value + spaceOrEmpty);\n        }\n    });\n\n    var Element = function (combinator, value, isVariable, index, currentFileInfo, visibilityInfo) {\n        this.combinator = combinator instanceof Combinator ?\n            combinator : new Combinator(combinator);\n        if (typeof value === 'string') {\n            this.value = value.trim();\n        }\n        else if (value) {\n            this.value = value;\n        }\n        else {\n            this.value = '';\n        }\n        this.isVariable = isVariable;\n        this._index = index;\n        this._fileInfo = currentFileInfo;\n        this.copyVisibilityInfo(visibilityInfo);\n        this.setParent(this.combinator, this);\n    };\n    Element.prototype = Object.assign(new Node(), {\n        type: 'Element',\n        accept: function (visitor) {\n            var value = this.value;\n            this.combinator = visitor.visit(this.combinator);\n            if (typeof value === 'object') {\n                this.value = visitor.visit(value);\n            }\n        },\n        eval: function (context) {\n            return new Element(this.combinator, this.value.eval ? this.value.eval(context) : this.value, this.isVariable, this.getIndex(), this.fileInfo(), this.visibilityInfo());\n        },\n        clone: function () {\n            return new Element(this.combinator, this.value, this.isVariable, this.getIndex(), this.fileInfo(), this.visibilityInfo());\n        },\n        genCSS: function (context, output) {\n            output.add(this.toCSS(context), this.fileInfo(), this.getIndex());\n        },\n        toCSS: function (context) {\n            context = context || {};\n            var value = this.value;\n            var firstSelector = context.firstSelector;\n            if (value instanceof Paren) {\n                // selector in parens should not be affected by outer selector\n                // flags (breaks only interpolated selectors - see #1973)\n                context.firstSelector = true;\n            }\n            value = value.toCSS ? value.toCSS(context) : value;\n            context.firstSelector = firstSelector;\n            if (value === '' && this.combinator.value.charAt(0) === '&') {\n                return '';\n            }\n            else {\n                return this.combinator.toCSS(context) + value;\n            }\n        }\n    });\n\n    var Math$1 = {\n        ALWAYS: 0,\n        PARENS_DIVISION: 1,\n        PARENS: 2\n        // removed - STRICT_LEGACY: 3\n    };\n    var RewriteUrls = {\n        OFF: 0,\n        LOCAL: 1,\n        ALL: 2\n    };\n\n    /**\n     * Returns the object type of the given payload\n     *\n     * @param {*} payload\n     * @returns {string}\n     */\n    function getType(payload) {\n        return Object.prototype.toString.call(payload).slice(8, -1);\n    }\n    /**\n     * Returns whether the payload is a plain JavaScript object (excluding special classes or objects with other prototypes)\n     *\n     * @param {*} payload\n     * @returns {payload is Record<string, any>}\n     */\n    function isPlainObject(payload) {\n        if (getType(payload) !== 'Object')\n            return false;\n        return payload.constructor === Object && Object.getPrototypeOf(payload) === Object.prototype;\n    }\n    /**\n     * Returns whether the payload is an array\n     *\n     * @param {any} payload\n     * @returns {payload is any[]}\n     */\n    function isArray(payload) {\n        return getType(payload) === 'Array';\n    }\n\n    /*! *****************************************************************************\n    Copyright (c) Microsoft Corporation. All rights reserved.\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\n    this file except in compliance with the License. You may obtain a copy of the\n    License at http://www.apache.org/licenses/LICENSE-2.0\n\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\n    MERCHANTABLITY OR NON-INFRINGEMENT.\n\n    See the Apache Version 2.0 License for specific language governing permissions\n    and limitations under the License.\n    ***************************************************************************** */\n\n    function __spreadArrays() {\n        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n        for (var r = Array(s), k = 0, i = 0; i < il; i++)\n            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n                r[k] = a[j];\n        return r;\n    }\n\n    function assignProp(carry, key, newVal, originalObject, includeNonenumerable) {\n        var propType = {}.propertyIsEnumerable.call(originalObject, key)\n            ? 'enumerable'\n            : 'nonenumerable';\n        if (propType === 'enumerable')\n            carry[key] = newVal;\n        if (includeNonenumerable && propType === 'nonenumerable') {\n            Object.defineProperty(carry, key, {\n                value: newVal,\n                enumerable: false,\n                writable: true,\n                configurable: true,\n            });\n        }\n    }\n    /**\n     * Copy (clone) an object and all its props recursively to get rid of any prop referenced of the original object. Arrays are also cloned, however objects inside arrays are still linked.\n     *\n     * @export\n     * @template T\n     * @param {T} target Target can be anything\n     * @param {Options} [options={}] Options can be `props` or `nonenumerable`\n     * @returns {T} the target with replaced values\n     * @export\n     */\n    function copy(target, options) {\n        if (options === void 0) { options = {}; }\n        if (isArray(target))\n            return target.map(function (i) { return copy(i, options); });\n        if (!isPlainObject(target))\n            return target;\n        var props = Object.getOwnPropertyNames(target);\n        var symbols = Object.getOwnPropertySymbols(target);\n        return __spreadArrays(props, symbols).reduce(function (carry, key) {\n            if (isArray(options.props) && !options.props.includes(key)) {\n                return carry;\n            }\n            var val = target[key];\n            var newVal = copy(val, options);\n            assignProp(carry, key, newVal, target, options.nonenumerable);\n            return carry;\n        }, {});\n    }\n\n    /* jshint proto: true */\n    function getLocation(index, inputStream) {\n        var n = index + 1;\n        var line = null;\n        var column = -1;\n        while (--n >= 0 && inputStream.charAt(n) !== '\\n') {\n            column++;\n        }\n        if (typeof index === 'number') {\n            line = (inputStream.slice(0, index).match(/\\n/g) || '').length;\n        }\n        return {\n            line: line,\n            column: column\n        };\n    }\n    function copyArray(arr) {\n        var i;\n        var length = arr.length;\n        var copy = new Array(length);\n        for (i = 0; i < length; i++) {\n            copy[i] = arr[i];\n        }\n        return copy;\n    }\n    function clone(obj) {\n        var cloned = {};\n        for (var prop in obj) {\n            if (obj.hasOwnProperty(prop)) {\n                cloned[prop] = obj[prop];\n            }\n        }\n        return cloned;\n    }\n    function defaults(obj1, obj2) {\n        var newObj = obj2 || {};\n        if (!obj2._defaults) {\n            newObj = {};\n            var defaults_1 = copy(obj1);\n            newObj._defaults = defaults_1;\n            var cloned = obj2 ? copy(obj2) : {};\n            Object.assign(newObj, defaults_1, cloned);\n        }\n        return newObj;\n    }\n    function copyOptions(obj1, obj2) {\n        if (obj2 && obj2._defaults) {\n            return obj2;\n        }\n        var opts = defaults(obj1, obj2);\n        if (opts.strictMath) {\n            opts.math = Math$1.PARENS;\n        }\n        // Back compat with changed relativeUrls option\n        if (opts.relativeUrls) {\n            opts.rewriteUrls = RewriteUrls.ALL;\n        }\n        if (typeof opts.math === 'string') {\n            switch (opts.math.toLowerCase()) {\n                case 'always':\n                    opts.math = Math$1.ALWAYS;\n                    break;\n                case 'parens-division':\n                    opts.math = Math$1.PARENS_DIVISION;\n                    break;\n                case 'strict':\n                case 'parens':\n                    opts.math = Math$1.PARENS;\n                    break;\n                default:\n                    opts.math = Math$1.PARENS;\n            }\n        }\n        if (typeof opts.rewriteUrls === 'string') {\n            switch (opts.rewriteUrls.toLowerCase()) {\n                case 'off':\n                    opts.rewriteUrls = RewriteUrls.OFF;\n                    break;\n                case 'local':\n                    opts.rewriteUrls = RewriteUrls.LOCAL;\n                    break;\n                case 'all':\n                    opts.rewriteUrls = RewriteUrls.ALL;\n                    break;\n            }\n        }\n        return opts;\n    }\n    function merge(obj1, obj2) {\n        for (var prop in obj2) {\n            if (obj2.hasOwnProperty(prop)) {\n                obj1[prop] = obj2[prop];\n            }\n        }\n        return obj1;\n    }\n    function flattenArray(arr, result) {\n        if (result === void 0) { result = []; }\n        for (var i = 0, length_1 = arr.length; i < length_1; i++) {\n            var value = arr[i];\n            if (Array.isArray(value)) {\n                flattenArray(value, result);\n            }\n            else {\n                if (value !== undefined) {\n                    result.push(value);\n                }\n            }\n        }\n        return result;\n    }\n\n    var utils = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        getLocation: getLocation,\n        copyArray: copyArray,\n        clone: clone,\n        defaults: defaults,\n        copyOptions: copyOptions,\n        merge: merge,\n        flattenArray: flattenArray\n    });\n\n    var anonymousFunc = /(<anonymous>|Function):(\\d+):(\\d+)/;\n    /**\n     * This is a centralized class of any error that could be thrown internally (mostly by the parser).\n     * Besides standard .message it keeps some additional data like a path to the file where the error\n     * occurred along with line and column numbers.\n     *\n     * @class\n     * @extends Error\n     * @type {module.LessError}\n     *\n     * @prop {string} type\n     * @prop {string} filename\n     * @prop {number} index\n     * @prop {number} line\n     * @prop {number} column\n     * @prop {number} callLine\n     * @prop {number} callExtract\n     * @prop {string[]} extract\n     *\n     * @param {Object} e              - An error object to wrap around or just a descriptive object\n     * @param {Object} fileContentMap - An object with file contents in 'contents' property (like importManager) @todo - move to fileManager?\n     * @param {string} [currentFilename]\n     */\n    var LessError = function (e, fileContentMap, currentFilename) {\n        Error.call(this);\n        var filename = e.filename || currentFilename;\n        this.message = e.message;\n        this.stack = e.stack;\n        if (fileContentMap && filename) {\n            var input = fileContentMap.contents[filename];\n            var loc = getLocation(e.index, input);\n            var line = loc.line;\n            var col = loc.column;\n            var callLine = e.call && getLocation(e.call, input).line;\n            var lines = input ? input.split('\\n') : '';\n            this.type = e.type || 'Syntax';\n            this.filename = filename;\n            this.index = e.index;\n            this.line = typeof line === 'number' ? line + 1 : null;\n            this.column = col;\n            if (!this.line && this.stack) {\n                var found = this.stack.match(anonymousFunc);\n                /**\n                 * We have to figure out how this environment stringifies anonymous functions\n                 * so we can correctly map plugin errors.\n                 *\n                 * Note, in Node 8, the output of anonymous funcs varied based on parameters\n                 * being present or not, so we inject dummy params.\n                 */\n                var func = new Function('a', 'throw new Error()');\n                var lineAdjust = 0;\n                try {\n                    func();\n                }\n                catch (e) {\n                    var match = e.stack.match(anonymousFunc);\n                    var line = parseInt(match[2]);\n                    lineAdjust = 1 - line;\n                }\n                if (found) {\n                    if (found[2]) {\n                        this.line = parseInt(found[2]) + lineAdjust;\n                    }\n                    if (found[3]) {\n                        this.column = parseInt(found[3]);\n                    }\n                }\n            }\n            this.callLine = callLine + 1;\n            this.callExtract = lines[callLine];\n            this.extract = [\n                lines[this.line - 2],\n                lines[this.line - 1],\n                lines[this.line]\n            ];\n        }\n    };\n    if (typeof Object.create === 'undefined') {\n        var F = function () { };\n        F.prototype = Error.prototype;\n        LessError.prototype = new F();\n    }\n    else {\n        LessError.prototype = Object.create(Error.prototype);\n    }\n    LessError.prototype.constructor = LessError;\n    /**\n     * An overridden version of the default Object.prototype.toString\n     * which uses additional information to create a helpful message.\n     *\n     * @param {Object} options\n     * @returns {string}\n     */\n    LessError.prototype.toString = function (options) {\n        options = options || {};\n        var message = '';\n        var extract = this.extract || [];\n        var error = [];\n        var stylize = function (str) { return str; };\n        if (options.stylize) {\n            var type = typeof options.stylize;\n            if (type !== 'function') {\n                throw Error(\"options.stylize should be a function, got a \" + type + \"!\");\n            }\n            stylize = options.stylize;\n        }\n        if (this.line !== null) {\n            if (typeof extract[0] === 'string') {\n                error.push(stylize(this.line - 1 + \" \" + extract[0], 'grey'));\n            }\n            if (typeof extract[1] === 'string') {\n                var errorTxt = this.line + \" \";\n                if (extract[1]) {\n                    errorTxt += extract[1].slice(0, this.column) +\n                        stylize(stylize(stylize(extract[1].substr(this.column, 1), 'bold') +\n                            extract[1].slice(this.column + 1), 'red'), 'inverse');\n                }\n                error.push(errorTxt);\n            }\n            if (typeof extract[2] === 'string') {\n                error.push(stylize(this.line + 1 + \" \" + extract[2], 'grey'));\n            }\n            error = error.join('\\n') + stylize('', 'reset') + \"\\n\";\n        }\n        message += stylize(this.type + \"Error: \" + this.message, 'red');\n        if (this.filename) {\n            message += stylize(' in ', 'red') + this.filename;\n        }\n        if (this.line) {\n            message += stylize(\" on line \" + this.line + \", column \" + (this.column + 1) + \":\", 'grey');\n        }\n        message += \"\\n\" + error;\n        if (this.callLine) {\n            message += stylize('from ', 'red') + (this.filename || '') + \"/n\";\n            message += stylize(this.callLine, 'grey') + \" \" + this.callExtract + \"/n\";\n        }\n        return message;\n    };\n\n    var Selector = function (elements, extendList, condition, index, currentFileInfo, visibilityInfo) {\n        this.extendList = extendList;\n        this.condition = condition;\n        this.evaldCondition = !condition;\n        this._index = index;\n        this._fileInfo = currentFileInfo;\n        this.elements = this.getElements(elements);\n        this.mixinElements_ = undefined;\n        this.copyVisibilityInfo(visibilityInfo);\n        this.setParent(this.elements, this);\n    };\n    Selector.prototype = Object.assign(new Node(), {\n        type: 'Selector',\n        accept: function (visitor) {\n            if (this.elements) {\n                this.elements = visitor.visitArray(this.elements);\n            }\n            if (this.extendList) {\n                this.extendList = visitor.visitArray(this.extendList);\n            }\n            if (this.condition) {\n                this.condition = visitor.visit(this.condition);\n            }\n        },\n        createDerived: function (elements, extendList, evaldCondition) {\n            elements = this.getElements(elements);\n            var newSelector = new Selector(elements, extendList || this.extendList, null, this.getIndex(), this.fileInfo(), this.visibilityInfo());\n            newSelector.evaldCondition = (evaldCondition != null) ? evaldCondition : this.evaldCondition;\n            newSelector.mediaEmpty = this.mediaEmpty;\n            return newSelector;\n        },\n        getElements: function (els) {\n            if (!els) {\n                return [new Element('', '&', false, this._index, this._fileInfo)];\n            }\n            if (typeof els === 'string') {\n                this.parse.parseNode(els, ['selector'], this._index, this._fileInfo, function (err, result) {\n                    if (err) {\n                        throw new LessError({\n                            index: err.index,\n                            message: err.message\n                        }, this.parse.imports, this._fileInfo.filename);\n                    }\n                    els = result[0].elements;\n                });\n            }\n            return els;\n        },\n        createEmptySelectors: function () {\n            var el = new Element('', '&', false, this._index, this._fileInfo), sels = [new Selector([el], null, null, this._index, this._fileInfo)];\n            sels[0].mediaEmpty = true;\n            return sels;\n        },\n        match: function (other) {\n            var elements = this.elements;\n            var len = elements.length;\n            var olen;\n            var i;\n            other = other.mixinElements();\n            olen = other.length;\n            if (olen === 0 || len < olen) {\n                return 0;\n            }\n            else {\n                for (i = 0; i < olen; i++) {\n                    if (elements[i].value !== other[i]) {\n                        return 0;\n                    }\n                }\n            }\n            return olen; // return number of matched elements\n        },\n        mixinElements: function () {\n            if (this.mixinElements_) {\n                return this.mixinElements_;\n            }\n            var elements = this.elements.map(function (v) {\n                return v.combinator.value + (v.value.value || v.value);\n            }).join('').match(/[,&#\\*\\.\\w-]([\\w-]|(\\\\.))*/g);\n            if (elements) {\n                if (elements[0] === '&') {\n                    elements.shift();\n                }\n            }\n            else {\n                elements = [];\n            }\n            return (this.mixinElements_ = elements);\n        },\n        isJustParentSelector: function () {\n            return !this.mediaEmpty &&\n                this.elements.length === 1 &&\n                this.elements[0].value === '&' &&\n                (this.elements[0].combinator.value === ' ' || this.elements[0].combinator.value === '');\n        },\n        eval: function (context) {\n            var evaldCondition = this.condition && this.condition.eval(context);\n            var elements = this.elements;\n            var extendList = this.extendList;\n            elements = elements && elements.map(function (e) { return e.eval(context); });\n            extendList = extendList && extendList.map(function (extend) { return extend.eval(context); });\n            return this.createDerived(elements, extendList, evaldCondition);\n        },\n        genCSS: function (context, output) {\n            var i, element;\n            if ((!context || !context.firstSelector) && this.elements[0].combinator.value === '') {\n                output.add(' ', this.fileInfo(), this.getIndex());\n            }\n            for (i = 0; i < this.elements.length; i++) {\n                element = this.elements[i];\n                element.genCSS(context, output);\n            }\n        },\n        getIsOutput: function () {\n            return this.evaldCondition;\n        }\n    });\n\n    var Value = function (value) {\n        if (!value) {\n            throw new Error('Value requires an array argument');\n        }\n        if (!Array.isArray(value)) {\n            this.value = [value];\n        }\n        else {\n            this.value = value;\n        }\n    };\n    Value.prototype = Object.assign(new Node(), {\n        type: 'Value',\n        accept: function (visitor) {\n            if (this.value) {\n                this.value = visitor.visitArray(this.value);\n            }\n        },\n        eval: function (context) {\n            if (this.value.length === 1) {\n                return this.value[0].eval(context);\n            }\n            else {\n                return new Value(this.value.map(function (v) {\n                    return v.eval(context);\n                }));\n            }\n        },\n        genCSS: function (context, output) {\n            var i;\n            for (i = 0; i < this.value.length; i++) {\n                this.value[i].genCSS(context, output);\n                if (i + 1 < this.value.length) {\n                    output.add((context && context.compress) ? ',' : ', ');\n                }\n            }\n        }\n    });\n\n    var Keyword = function (value) {\n        this.value = value;\n    };\n    Keyword.prototype = Object.assign(new Node(), {\n        type: 'Keyword',\n        genCSS: function (context, output) {\n            if (this.value === '%') {\n                throw { type: 'Syntax', message: 'Invalid % without number' };\n            }\n            output.add(this.value);\n        }\n    });\n    Keyword.True = new Keyword('true');\n    Keyword.False = new Keyword('false');\n\n    var Anonymous = function (value, index, currentFileInfo, mapLines, rulesetLike, visibilityInfo) {\n        this.value = value;\n        this._index = index;\n        this._fileInfo = currentFileInfo;\n        this.mapLines = mapLines;\n        this.rulesetLike = (typeof rulesetLike === 'undefined') ? false : rulesetLike;\n        this.allowRoot = true;\n        this.copyVisibilityInfo(visibilityInfo);\n    };\n    Anonymous.prototype = Object.assign(new Node(), {\n        type: 'Anonymous',\n        eval: function () {\n            return new Anonymous(this.value, this._index, this._fileInfo, this.mapLines, this.rulesetLike, this.visibilityInfo());\n        },\n        compare: function (other) {\n            return other.toCSS && this.toCSS() === other.toCSS() ? 0 : undefined;\n        },\n        isRulesetLike: function () {\n            return this.rulesetLike;\n        },\n        genCSS: function (context, output) {\n            this.nodeVisible = Boolean(this.value);\n            if (this.nodeVisible) {\n                output.add(this.value, this._fileInfo, this._index, this.mapLines);\n            }\n        }\n    });\n\n    var MATH$1 = Math$1;\n    function evalName(context, name) {\n        var value = '';\n        var i;\n        var n = name.length;\n        var output = { add: function (s) { value += s; } };\n        for (i = 0; i < n; i++) {\n            name[i].eval(context).genCSS(context, output);\n        }\n        return value;\n    }\n    var Declaration = function (name, value, important, merge, index, currentFileInfo, inline, variable) {\n        this.name = name;\n        this.value = (value instanceof Node) ? value : new Value([value ? new Anonymous(value) : null]);\n        this.important = important ? \" \" + important.trim() : '';\n        this.merge = merge;\n        this._index = index;\n        this._fileInfo = currentFileInfo;\n        this.inline = inline || false;\n        this.variable = (variable !== undefined) ? variable\n            : (name.charAt && (name.charAt(0) === '@'));\n        this.allowRoot = true;\n        this.setParent(this.value, this);\n    };\n    Declaration.prototype = Object.assign(new Node(), {\n        type: 'Declaration',\n        genCSS: function (context, output) {\n            output.add(this.name + (context.compress ? ':' : ': '), this.fileInfo(), this.getIndex());\n            try {\n                this.value.genCSS(context, output);\n            }\n            catch (e) {\n                e.index = this._index;\n                e.filename = this._fileInfo.filename;\n                throw e;\n            }\n            output.add(this.important + ((this.inline || (context.lastRule && context.compress)) ? '' : ';'), this._fileInfo, this._index);\n        },\n        eval: function (context) {\n            var mathBypass = false, prevMath, name = this.name, evaldValue, variable = this.variable;\n            if (typeof name !== 'string') {\n                // expand 'primitive' name directly to get\n                // things faster (~10% for benchmark.less):\n                name = (name.length === 1) && (name[0] instanceof Keyword) ?\n                    name[0].value : evalName(context, name);\n                variable = false; // never treat expanded interpolation as new variable name\n            }\n            // @todo remove when parens-division is default\n            if (name === 'font' && context.math === MATH$1.ALWAYS) {\n                mathBypass = true;\n                prevMath = context.math;\n                context.math = MATH$1.PARENS_DIVISION;\n            }\n            try {\n                context.importantScope.push({});\n                evaldValue = this.value.eval(context);\n                if (!this.variable && evaldValue.type === 'DetachedRuleset') {\n                    throw { message: 'Rulesets cannot be evaluated on a property.',\n                        index: this.getIndex(), filename: this.fileInfo().filename };\n                }\n                var important = this.important;\n                var importantResult = context.importantScope.pop();\n                if (!important && importantResult.important) {\n                    important = importantResult.important;\n                }\n                return new Declaration(name, evaldValue, important, this.merge, this.getIndex(), this.fileInfo(), this.inline, variable);\n            }\n            catch (e) {\n                if (typeof e.index !== 'number') {\n                    e.index = this.getIndex();\n                    e.filename = this.fileInfo().filename;\n                }\n                throw e;\n            }\n            finally {\n                if (mathBypass) {\n                    context.math = prevMath;\n                }\n            }\n        },\n        makeImportant: function () {\n            return new Declaration(this.name, this.value, '!important', this.merge, this.getIndex(), this.fileInfo(), this.inline);\n        }\n    });\n\n    var debugInfo = /** @class */ (function () {\n        function debugInfo(context, ctx, lineSeparator) {\n            var result = '';\n            if (context.dumpLineNumbers && !context.compress) {\n                switch (context.dumpLineNumbers) {\n                    case 'comments':\n                        result = debugInfo.asComment(ctx);\n                        break;\n                    case 'mediaquery':\n                        result = debugInfo.asMediaQuery(ctx);\n                        break;\n                    case 'all':\n                        result = debugInfo.asComment(ctx) + (lineSeparator || '') + debugInfo.asMediaQuery(ctx);\n                        break;\n                }\n            }\n            return result;\n        }\n        debugInfo.asComment = function (ctx) {\n            return \"/* line \" + ctx.debugInfo.lineNumber + \", \" + ctx.debugInfo.fileName + \" */\\n\";\n        };\n        debugInfo.asMediaQuery = function (ctx) {\n            var filenameWithProtocol = ctx.debugInfo.fileName;\n            if (!/^[a-z]+:\\/\\//i.test(filenameWithProtocol)) {\n                filenameWithProtocol = \"file://\" + filenameWithProtocol;\n            }\n            return \"@media -sass-debug-info{filename{font-family:\" + filenameWithProtocol.replace(/([.:\\/\\\\])/g, function (a) {\n                if (a == '\\\\') {\n                    a = '\\/';\n                }\n                return \"\\\\\" + a;\n            }) + \"}line{font-family:\\\\00003\" + ctx.debugInfo.lineNumber + \"}}\\n\";\n        };\n        return debugInfo;\n    }());\n\n    var Comment = function (value, isLineComment, index, currentFileInfo) {\n        this.value = value;\n        this.isLineComment = isLineComment;\n        this._index = index;\n        this._fileInfo = currentFileInfo;\n        this.allowRoot = true;\n    };\n    Comment.prototype = Object.assign(new Node(), {\n        type: 'Comment',\n        genCSS: function (context, output) {\n            if (this.debugInfo) {\n                output.add(debugInfo(context, this), this.fileInfo(), this.getIndex());\n            }\n            output.add(this.value);\n        },\n        isSilent: function (context) {\n            var isCompressed = context.compress && this.value[2] !== '!';\n            return this.isLineComment || isCompressed;\n        }\n    });\n\n    var contexts = {};\n    var copyFromOriginal = function copyFromOriginal(original, destination, propertiesToCopy) {\n        if (!original) {\n            return;\n        }\n        for (var i = 0; i < propertiesToCopy.length; i++) {\n            if (original.hasOwnProperty(propertiesToCopy[i])) {\n                destination[propertiesToCopy[i]] = original[propertiesToCopy[i]];\n            }\n        }\n    };\n    /*\n     parse is used whilst parsing\n     */\n    var parseCopyProperties = [\n        // options\n        'paths',\n        'rewriteUrls',\n        'rootpath',\n        'strictImports',\n        'insecure',\n        'dumpLineNumbers',\n        'compress',\n        'syncImport',\n        'chunkInput',\n        'mime',\n        'useFileCache',\n        // context\n        'processImports',\n        // Used by the import manager to stop multiple import visitors being created.\n        'pluginManager' // Used as the plugin manager for the session\n    ];\n    contexts.Parse = function (options) {\n        copyFromOriginal(options, this, parseCopyProperties);\n        if (typeof this.paths === 'string') {\n            this.paths = [this.paths];\n        }\n    };\n    var evalCopyProperties = [\n        'paths',\n        'compress',\n        'math',\n        'strictUnits',\n        'sourceMap',\n        'importMultiple',\n        'urlArgs',\n        'javascriptEnabled',\n        'pluginManager',\n        'importantScope',\n        'rewriteUrls' // option - whether to adjust URL's to be relative\n    ];\n    contexts.Eval = function (options, frames) {\n        copyFromOriginal(options, this, evalCopyProperties);\n        if (typeof this.paths === 'string') {\n            this.paths = [this.paths];\n        }\n        this.frames = frames || [];\n        this.importantScope = this.importantScope || [];\n    };\n    contexts.Eval.prototype.enterCalc = function () {\n        if (!this.calcStack) {\n            this.calcStack = [];\n        }\n        this.calcStack.push(true);\n        this.inCalc = true;\n    };\n    contexts.Eval.prototype.exitCalc = function () {\n        this.calcStack.pop();\n        if (!this.calcStack.length) {\n            this.inCalc = false;\n        }\n    };\n    contexts.Eval.prototype.inParenthesis = function () {\n        if (!this.parensStack) {\n            this.parensStack = [];\n        }\n        this.parensStack.push(true);\n    };\n    contexts.Eval.prototype.outOfParenthesis = function () {\n        this.parensStack.pop();\n    };\n    contexts.Eval.prototype.inCalc = false;\n    contexts.Eval.prototype.mathOn = true;\n    contexts.Eval.prototype.isMathOn = function (op) {\n        if (!this.mathOn) {\n            return false;\n        }\n        if (op === '/' && this.math !== Math$1.ALWAYS && (!this.parensStack || !this.parensStack.length)) {\n            return false;\n        }\n        if (this.math > Math$1.PARENS_DIVISION) {\n            return this.parensStack && this.parensStack.length;\n        }\n        return true;\n    };\n    contexts.Eval.prototype.pathRequiresRewrite = function (path) {\n        var isRelative = this.rewriteUrls === RewriteUrls.LOCAL ? isPathLocalRelative : isPathRelative;\n        return isRelative(path);\n    };\n    contexts.Eval.prototype.rewritePath = function (path, rootpath) {\n        var newPath;\n        rootpath = rootpath || '';\n        newPath = this.normalizePath(rootpath + path);\n        // If a path was explicit relative and the rootpath was not an absolute path\n        // we must ensure that the new path is also explicit relative.\n        if (isPathLocalRelative(path) &&\n            isPathRelative(rootpath) &&\n            isPathLocalRelative(newPath) === false) {\n            newPath = \"./\" + newPath;\n        }\n        return newPath;\n    };\n    contexts.Eval.prototype.normalizePath = function (path) {\n        var segments = path.split('/').reverse();\n        var segment;\n        path = [];\n        while (segments.length !== 0) {\n            segment = segments.pop();\n            switch (segment) {\n                case '.':\n                    break;\n                case '..':\n                    if ((path.length === 0) || (path[path.length - 1] === '..')) {\n                        path.push(segment);\n                    }\n                    else {\n                        path.pop();\n                    }\n                    break;\n                default:\n                    path.push(segment);\n                    break;\n            }\n        }\n        return path.join('/');\n    };\n    function isPathRelative(path) {\n        return !/^(?:[a-z-]+:|\\/|#)/i.test(path);\n    }\n    function isPathLocalRelative(path) {\n        return path.charAt(0) === '.';\n    }\n    // todo - do the same for the toCSS ?\n\n    function makeRegistry(base) {\n        return {\n            _data: {},\n            add: function (name, func) {\n                // precautionary case conversion, as later querying of\n                // the registry by function-caller uses lower case as well.\n                name = name.toLowerCase();\n                if (this._data.hasOwnProperty(name)) ;\n                this._data[name] = func;\n            },\n            addMultiple: function (functions) {\n                var _this = this;\n                Object.keys(functions).forEach(function (name) {\n                    _this.add(name, functions[name]);\n                });\n            },\n            get: function (name) {\n                return this._data[name] || (base && base.get(name));\n            },\n            getLocalFunctions: function () {\n                return this._data;\n            },\n            inherit: function () {\n                return makeRegistry(this);\n            },\n            create: function (base) {\n                return makeRegistry(base);\n            }\n        };\n    }\n    var functionRegistry = makeRegistry(null);\n\n    var defaultFunc = {\n        eval: function () {\n            var v = this.value_;\n            var e = this.error_;\n            if (e) {\n                throw e;\n            }\n            if (v != null) {\n                return v ? Keyword.True : Keyword.False;\n            }\n        },\n        value: function (v) {\n            this.value_ = v;\n        },\n        error: function (e) {\n            this.error_ = e;\n        },\n        reset: function () {\n            this.value_ = this.error_ = null;\n        }\n    };\n\n    var Ruleset = function (selectors, rules, strictImports, visibilityInfo) {\n        this.selectors = selectors;\n        this.rules = rules;\n        this._lookups = {};\n        this._variables = null;\n        this._properties = null;\n        this.strictImports = strictImports;\n        this.copyVisibilityInfo(visibilityInfo);\n        this.allowRoot = true;\n        this.setParent(this.selectors, this);\n        this.setParent(this.rules, this);\n    };\n    Ruleset.prototype = Object.assign(new Node(), {\n        type: 'Ruleset',\n        isRuleset: true,\n        isRulesetLike: function () { return true; },\n        accept: function (visitor) {\n            if (this.paths) {\n                this.paths = visitor.visitArray(this.paths, true);\n            }\n            else if (this.selectors) {\n                this.selectors = visitor.visitArray(this.selectors);\n            }\n            if (this.rules && this.rules.length) {\n                this.rules = visitor.visitArray(this.rules);\n            }\n        },\n        eval: function (context) {\n            var selectors;\n            var selCnt;\n            var selector;\n            var i;\n            var hasVariable;\n            var hasOnePassingSelector = false;\n            if (this.selectors && (selCnt = this.selectors.length)) {\n                selectors = new Array(selCnt);\n                defaultFunc.error({\n                    type: 'Syntax',\n                    message: 'it is currently only allowed in parametric mixin guards,'\n                });\n                for (i = 0; i < selCnt; i++) {\n                    selector = this.selectors[i].eval(context);\n                    for (var j = 0; j < selector.elements.length; j++) {\n                        if (selector.elements[j].isVariable) {\n                            hasVariable = true;\n                            break;\n                        }\n                    }\n                    selectors[i] = selector;\n                    if (selector.evaldCondition) {\n                        hasOnePassingSelector = true;\n                    }\n                }\n                if (hasVariable) {\n                    var toParseSelectors = new Array(selCnt);\n                    for (i = 0; i < selCnt; i++) {\n                        selector = selectors[i];\n                        toParseSelectors[i] = selector.toCSS(context);\n                    }\n                    this.parse.parseNode(toParseSelectors.join(','), [\"selectors\"], selectors[0].getIndex(), selectors[0].fileInfo(), function (err, result) {\n                        if (result) {\n                            selectors = flattenArray(result);\n                        }\n                    });\n                }\n                defaultFunc.reset();\n            }\n            else {\n                hasOnePassingSelector = true;\n            }\n            var rules = this.rules ? copyArray(this.rules) : null;\n            var ruleset = new Ruleset(selectors, rules, this.strictImports, this.visibilityInfo());\n            var rule;\n            var subRule;\n            ruleset.originalRuleset = this;\n            ruleset.root = this.root;\n            ruleset.firstRoot = this.firstRoot;\n            ruleset.allowImports = this.allowImports;\n            if (this.debugInfo) {\n                ruleset.debugInfo = this.debugInfo;\n            }\n            if (!hasOnePassingSelector) {\n                rules.length = 0;\n            }\n            // inherit a function registry from the frames stack when possible;\n            // otherwise from the global registry\n            ruleset.functionRegistry = (function (frames) {\n                var i = 0;\n                var n = frames.length;\n                var found;\n                for (; i !== n; ++i) {\n                    found = frames[i].functionRegistry;\n                    if (found) {\n                        return found;\n                    }\n                }\n                return functionRegistry;\n            }(context.frames)).inherit();\n            // push the current ruleset to the frames stack\n            var ctxFrames = context.frames;\n            ctxFrames.unshift(ruleset);\n            // currrent selectors\n            var ctxSelectors = context.selectors;\n            if (!ctxSelectors) {\n                context.selectors = ctxSelectors = [];\n            }\n            ctxSelectors.unshift(this.selectors);\n            // Evaluate imports\n            if (ruleset.root || ruleset.allowImports || !ruleset.strictImports) {\n                ruleset.evalImports(context);\n            }\n            // Store the frames around mixin definitions,\n            // so they can be evaluated like closures when the time comes.\n            var rsRules = ruleset.rules;\n            for (i = 0; (rule = rsRules[i]); i++) {\n                if (rule.evalFirst) {\n                    rsRules[i] = rule.eval(context);\n                }\n            }\n            var mediaBlockCount = (context.mediaBlocks && context.mediaBlocks.length) || 0;\n            // Evaluate mixin calls.\n            for (i = 0; (rule = rsRules[i]); i++) {\n                if (rule.type === 'MixinCall') {\n                    /* jshint loopfunc:true */\n                    rules = rule.eval(context).filter(function (r) {\n                        if ((r instanceof Declaration) && r.variable) {\n                            // do not pollute the scope if the variable is\n                            // already there. consider returning false here\n                            // but we need a way to \"return\" variable from mixins\n                            return !(ruleset.variable(r.name));\n                        }\n                        return true;\n                    });\n                    rsRules.splice.apply(rsRules, [i, 1].concat(rules));\n                    i += rules.length - 1;\n                    ruleset.resetCache();\n                }\n                else if (rule.type === 'VariableCall') {\n                    /* jshint loopfunc:true */\n                    rules = rule.eval(context).rules.filter(function (r) {\n                        if ((r instanceof Declaration) && r.variable) {\n                            // do not pollute the scope at all\n                            return false;\n                        }\n                        return true;\n                    });\n                    rsRules.splice.apply(rsRules, [i, 1].concat(rules));\n                    i += rules.length - 1;\n                    ruleset.resetCache();\n                }\n            }\n            // Evaluate everything else\n            for (i = 0; (rule = rsRules[i]); i++) {\n                if (!rule.evalFirst) {\n                    rsRules[i] = rule = rule.eval ? rule.eval(context) : rule;\n                }\n            }\n            // Evaluate everything else\n            for (i = 0; (rule = rsRules[i]); i++) {\n                // for rulesets, check if it is a css guard and can be removed\n                if (rule instanceof Ruleset && rule.selectors && rule.selectors.length === 1) {\n                    // check if it can be folded in (e.g. & where)\n                    if (rule.selectors[0] && rule.selectors[0].isJustParentSelector()) {\n                        rsRules.splice(i--, 1);\n                        for (var j = 0; (subRule = rule.rules[j]); j++) {\n                            if (subRule instanceof Node) {\n                                subRule.copyVisibilityInfo(rule.visibilityInfo());\n                                if (!(subRule instanceof Declaration) || !subRule.variable) {\n                                    rsRules.splice(++i, 0, subRule);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            // Pop the stack\n            ctxFrames.shift();\n            ctxSelectors.shift();\n            if (context.mediaBlocks) {\n                for (i = mediaBlockCount; i < context.mediaBlocks.length; i++) {\n                    context.mediaBlocks[i].bubbleSelectors(selectors);\n                }\n            }\n            return ruleset;\n        },\n        evalImports: function (context) {\n            var rules = this.rules;\n            var i;\n            var importRules;\n            if (!rules) {\n                return;\n            }\n            for (i = 0; i < rules.length; i++) {\n                if (rules[i].type === 'Import') {\n                    importRules = rules[i].eval(context);\n                    if (importRules && (importRules.length || importRules.length === 0)) {\n                        rules.splice.apply(rules, [i, 1].concat(importRules));\n                        i += importRules.length - 1;\n                    }\n                    else {\n                        rules.splice(i, 1, importRules);\n                    }\n                    this.resetCache();\n                }\n            }\n        },\n        makeImportant: function () {\n            var result = new Ruleset(this.selectors, this.rules.map(function (r) {\n                if (r.makeImportant) {\n                    return r.makeImportant();\n                }\n                else {\n                    return r;\n                }\n            }), this.strictImports, this.visibilityInfo());\n            return result;\n        },\n        matchArgs: function (args) {\n            return !args || args.length === 0;\n        },\n        // lets you call a css selector with a guard\n        matchCondition: function (args, context) {\n            var lastSelector = this.selectors[this.selectors.length - 1];\n            if (!lastSelector.evaldCondition) {\n                return false;\n            }\n            if (lastSelector.condition &&\n                !lastSelector.condition.eval(new contexts.Eval(context, context.frames))) {\n                return false;\n            }\n            return true;\n        },\n        resetCache: function () {\n            this._rulesets = null;\n            this._variables = null;\n            this._properties = null;\n            this._lookups = {};\n        },\n        variables: function () {\n            if (!this._variables) {\n                this._variables = !this.rules ? {} : this.rules.reduce(function (hash, r) {\n                    if (r instanceof Declaration && r.variable === true) {\n                        hash[r.name] = r;\n                    }\n                    // when evaluating variables in an import statement, imports have not been eval'd\n                    // so we need to go inside import statements.\n                    // guard against root being a string (in the case of inlined less)\n                    if (r.type === 'Import' && r.root && r.root.variables) {\n                        var vars = r.root.variables();\n                        for (var name_1 in vars) {\n                            if (vars.hasOwnProperty(name_1)) {\n                                hash[name_1] = r.root.variable(name_1);\n                            }\n                        }\n                    }\n                    return hash;\n                }, {});\n            }\n            return this._variables;\n        },\n        properties: function () {\n            if (!this._properties) {\n                this._properties = !this.rules ? {} : this.rules.reduce(function (hash, r) {\n                    if (r instanceof Declaration && r.variable !== true) {\n                        var name_2 = (r.name.length === 1) && (r.name[0] instanceof Keyword) ?\n                            r.name[0].value : r.name;\n                        // Properties don't overwrite as they can merge\n                        if (!hash[\"$\" + name_2]) {\n                            hash[\"$\" + name_2] = [r];\n                        }\n                        else {\n                            hash[\"$\" + name_2].push(r);\n                        }\n                    }\n                    return hash;\n                }, {});\n            }\n            return this._properties;\n        },\n        variable: function (name) {\n            var decl = this.variables()[name];\n            if (decl) {\n                return this.parseValue(decl);\n            }\n        },\n        property: function (name) {\n            var decl = this.properties()[name];\n            if (decl) {\n                return this.parseValue(decl);\n            }\n        },\n        lastDeclaration: function () {\n            for (var i = this.rules.length; i > 0; i--) {\n                var decl = this.rules[i - 1];\n                if (decl instanceof Declaration) {\n                    return this.parseValue(decl);\n                }\n            }\n        },\n        parseValue: function (toParse) {\n            var self = this;\n            function transformDeclaration(decl) {\n                if (decl.value instanceof Anonymous && !decl.parsed) {\n                    if (typeof decl.value.value === 'string') {\n                        this.parse.parseNode(decl.value.value, ['value', 'important'], decl.value.getIndex(), decl.fileInfo(), function (err, result) {\n                            if (err) {\n                                decl.parsed = true;\n                            }\n                            if (result) {\n                                decl.value = result[0];\n                                decl.important = result[1] || '';\n                                decl.parsed = true;\n                            }\n                        });\n                    }\n                    else {\n                        decl.parsed = true;\n                    }\n                    return decl;\n                }\n                else {\n                    return decl;\n                }\n            }\n            if (!Array.isArray(toParse)) {\n                return transformDeclaration.call(self, toParse);\n            }\n            else {\n                var nodes_1 = [];\n                toParse.forEach(function (n) {\n                    nodes_1.push(transformDeclaration.call(self, n));\n                });\n                return nodes_1;\n            }\n        },\n        rulesets: function () {\n            if (!this.rules) {\n                return [];\n            }\n            var filtRules = [];\n            var rules = this.rules;\n            var i;\n            var rule;\n            for (i = 0; (rule = rules[i]); i++) {\n                if (rule.isRuleset) {\n                    filtRules.push(rule);\n                }\n            }\n            return filtRules;\n        },\n        prependRule: function (rule) {\n            var rules = this.rules;\n            if (rules) {\n                rules.unshift(rule);\n            }\n            else {\n                this.rules = [rule];\n            }\n            this.setParent(rule, this);\n        },\n        find: function (selector, self, filter) {\n            self = self || this;\n            var rules = [];\n            var match;\n            var foundMixins;\n            var key = selector.toCSS();\n            if (key in this._lookups) {\n                return this._lookups[key];\n            }\n            this.rulesets().forEach(function (rule) {\n                if (rule !== self) {\n                    for (var j = 0; j < rule.selectors.length; j++) {\n                        match = selector.match(rule.selectors[j]);\n                        if (match) {\n                            if (selector.elements.length > match) {\n                                if (!filter || filter(rule)) {\n                                    foundMixins = rule.find(new Selector(selector.elements.slice(match)), self, filter);\n                                    for (var i = 0; i < foundMixins.length; ++i) {\n                                        foundMixins[i].path.push(rule);\n                                    }\n                                    Array.prototype.push.apply(rules, foundMixins);\n                                }\n                            }\n                            else {\n                                rules.push({ rule: rule, path: [] });\n                            }\n                            break;\n                        }\n                    }\n                }\n            });\n            this._lookups[key] = rules;\n            return rules;\n        },\n        genCSS: function (context, output) {\n            var i;\n            var j;\n            var charsetRuleNodes = [];\n            var ruleNodes = [];\n            var // Line number debugging\n            debugInfo$1;\n            var rule;\n            var path;\n            context.tabLevel = (context.tabLevel || 0);\n            if (!this.root) {\n                context.tabLevel++;\n            }\n            var tabRuleStr = context.compress ? '' : Array(context.tabLevel + 1).join('  ');\n            var tabSetStr = context.compress ? '' : Array(context.tabLevel).join('  ');\n            var sep;\n            var charsetNodeIndex = 0;\n            var importNodeIndex = 0;\n            for (i = 0; (rule = this.rules[i]); i++) {\n                if (rule instanceof Comment) {\n                    if (importNodeIndex === i) {\n                        importNodeIndex++;\n                    }\n                    ruleNodes.push(rule);\n                }\n                else if (rule.isCharset && rule.isCharset()) {\n                    ruleNodes.splice(charsetNodeIndex, 0, rule);\n                    charsetNodeIndex++;\n                    importNodeIndex++;\n                }\n                else if (rule.type === 'Import') {\n                    ruleNodes.splice(importNodeIndex, 0, rule);\n                    importNodeIndex++;\n                }\n                else {\n                    ruleNodes.push(rule);\n                }\n            }\n            ruleNodes = charsetRuleNodes.concat(ruleNodes);\n            // If this is the root node, we don't render\n            // a selector, or {}.\n            if (!this.root) {\n                debugInfo$1 = debugInfo(context, this, tabSetStr);\n                if (debugInfo$1) {\n                    output.add(debugInfo$1);\n                    output.add(tabSetStr);\n                }\n                var paths = this.paths;\n                var pathCnt = paths.length;\n                var pathSubCnt = void 0;\n                sep = context.compress ? ',' : (\",\\n\" + tabSetStr);\n                for (i = 0; i < pathCnt; i++) {\n                    path = paths[i];\n                    if (!(pathSubCnt = path.length)) {\n                        continue;\n                    }\n                    if (i > 0) {\n                        output.add(sep);\n                    }\n                    context.firstSelector = true;\n                    path[0].genCSS(context, output);\n                    context.firstSelector = false;\n                    for (j = 1; j < pathSubCnt; j++) {\n                        path[j].genCSS(context, output);\n                    }\n                }\n                output.add((context.compress ? '{' : ' {\\n') + tabRuleStr);\n            }\n            // Compile rules and rulesets\n            for (i = 0; (rule = ruleNodes[i]); i++) {\n                if (i + 1 === ruleNodes.length) {\n                    context.lastRule = true;\n                }\n                var currentLastRule = context.lastRule;\n                if (rule.isRulesetLike(rule)) {\n                    context.lastRule = false;\n                }\n                if (rule.genCSS) {\n                    rule.genCSS(context, output);\n                }\n                else if (rule.value) {\n                    output.add(rule.value.toString());\n                }\n                context.lastRule = currentLastRule;\n                if (!context.lastRule && rule.isVisible()) {\n                    output.add(context.compress ? '' : (\"\\n\" + tabRuleStr));\n                }\n                else {\n                    context.lastRule = false;\n                }\n            }\n            if (!this.root) {\n                output.add((context.compress ? '}' : \"\\n\" + tabSetStr + \"}\"));\n                context.tabLevel--;\n            }\n            if (!output.isEmpty() && !context.compress && this.firstRoot) {\n                output.add('\\n');\n            }\n        },\n        joinSelectors: function (paths, context, selectors) {\n            for (var s = 0; s < selectors.length; s++) {\n                this.joinSelector(paths, context, selectors[s]);\n            }\n        },\n        joinSelector: function (paths, context, selector) {\n            function createParenthesis(elementsToPak, originalElement) {\n                var replacementParen, j;\n                if (elementsToPak.length === 0) {\n                    replacementParen = new Paren(elementsToPak[0]);\n                }\n                else {\n                    var insideParent = new Array(elementsToPak.length);\n                    for (j = 0; j < elementsToPak.length; j++) {\n                        insideParent[j] = new Element(null, elementsToPak[j], originalElement.isVariable, originalElement._index, originalElement._fileInfo);\n                    }\n                    replacementParen = new Paren(new Selector(insideParent));\n                }\n                return replacementParen;\n            }\n            function createSelector(containedElement, originalElement) {\n                var element, selector;\n                element = new Element(null, containedElement, originalElement.isVariable, originalElement._index, originalElement._fileInfo);\n                selector = new Selector([element]);\n                return selector;\n            }\n            // joins selector path from `beginningPath` with selector path in `addPath`\n            // `replacedElement` contains element that is being replaced by `addPath`\n            // returns concatenated path\n            function addReplacementIntoPath(beginningPath, addPath, replacedElement, originalSelector) {\n                var newSelectorPath, lastSelector, newJoinedSelector;\n                // our new selector path\n                newSelectorPath = [];\n                // construct the joined selector - if & is the first thing this will be empty,\n                // if not newJoinedSelector will be the last set of elements in the selector\n                if (beginningPath.length > 0) {\n                    newSelectorPath = copyArray(beginningPath);\n                    lastSelector = newSelectorPath.pop();\n                    newJoinedSelector = originalSelector.createDerived(copyArray(lastSelector.elements));\n                }\n                else {\n                    newJoinedSelector = originalSelector.createDerived([]);\n                }\n                if (addPath.length > 0) {\n                    // /deep/ is a CSS4 selector - (removed, so should deprecate)\n                    // that is valid without anything in front of it\n                    // so if the & does not have a combinator that is \"\" or \" \" then\n                    // and there is a combinator on the parent, then grab that.\n                    // this also allows + a { & .b { .a & { ... though not sure why you would want to do that\n                    var combinator = replacedElement.combinator;\n                    var parentEl = addPath[0].elements[0];\n                    if (combinator.emptyOrWhitespace && !parentEl.combinator.emptyOrWhitespace) {\n                        combinator = parentEl.combinator;\n                    }\n                    // join the elements so far with the first part of the parent\n                    newJoinedSelector.elements.push(new Element(combinator, parentEl.value, replacedElement.isVariable, replacedElement._index, replacedElement._fileInfo));\n                    newJoinedSelector.elements = newJoinedSelector.elements.concat(addPath[0].elements.slice(1));\n                }\n                // now add the joined selector - but only if it is not empty\n                if (newJoinedSelector.elements.length !== 0) {\n                    newSelectorPath.push(newJoinedSelector);\n                }\n                // put together the parent selectors after the join (e.g. the rest of the parent)\n                if (addPath.length > 1) {\n                    var restOfPath = addPath.slice(1);\n                    restOfPath = restOfPath.map(function (selector) {\n                        return selector.createDerived(selector.elements, []);\n                    });\n                    newSelectorPath = newSelectorPath.concat(restOfPath);\n                }\n                return newSelectorPath;\n            }\n            // joins selector path from `beginningPath` with every selector path in `addPaths` array\n            // `replacedElement` contains element that is being replaced by `addPath`\n            // returns array with all concatenated paths\n            function addAllReplacementsIntoPath(beginningPath, addPaths, replacedElement, originalSelector, result) {\n                var j;\n                for (j = 0; j < beginningPath.length; j++) {\n                    var newSelectorPath = addReplacementIntoPath(beginningPath[j], addPaths, replacedElement, originalSelector);\n                    result.push(newSelectorPath);\n                }\n                return result;\n            }\n            function mergeElementsOnToSelectors(elements, selectors) {\n                var i, sel;\n                if (elements.length === 0) {\n                    return;\n                }\n                if (selectors.length === 0) {\n                    selectors.push([new Selector(elements)]);\n                    return;\n                }\n                for (i = 0; (sel = selectors[i]); i++) {\n                    // if the previous thing in sel is a parent this needs to join on to it\n                    if (sel.length > 0) {\n                        sel[sel.length - 1] = sel[sel.length - 1].createDerived(sel[sel.length - 1].elements.concat(elements));\n                    }\n                    else {\n                        sel.push(new Selector(elements));\n                    }\n                }\n            }\n            // replace all parent selectors inside `inSelector` by content of `context` array\n            // resulting selectors are returned inside `paths` array\n            // returns true if `inSelector` contained at least one parent selector\n            function replaceParentSelector(paths, context, inSelector) {\n                // The paths are [[Selector]]\n                // The first list is a list of comma separated selectors\n                // The inner list is a list of inheritance separated selectors\n                // e.g.\n                // .a, .b {\n                //   .c {\n                //   }\n                // }\n                // == [[.a] [.c]] [[.b] [.c]]\n                //\n                var i, j, k, currentElements, newSelectors, selectorsMultiplied, sel, el, hadParentSelector = false, length, lastSelector;\n                function findNestedSelector(element) {\n                    var maybeSelector;\n                    if (!(element.value instanceof Paren)) {\n                        return null;\n                    }\n                    maybeSelector = element.value.value;\n                    if (!(maybeSelector instanceof Selector)) {\n                        return null;\n                    }\n                    return maybeSelector;\n                }\n                // the elements from the current selector so far\n                currentElements = [];\n                // the current list of new selectors to add to the path.\n                // We will build it up. We initiate it with one empty selector as we \"multiply\" the new selectors\n                // by the parents\n                newSelectors = [\n                    []\n                ];\n                for (i = 0; (el = inSelector.elements[i]); i++) {\n                    // non parent reference elements just get added\n                    if (el.value !== '&') {\n                        var nestedSelector = findNestedSelector(el);\n                        if (nestedSelector != null) {\n                            // merge the current list of non parent selector elements\n                            // on to the current list of selectors to add\n                            mergeElementsOnToSelectors(currentElements, newSelectors);\n                            var nestedPaths = [];\n                            var replaced = void 0;\n                            var replacedNewSelectors = [];\n                            replaced = replaceParentSelector(nestedPaths, context, nestedSelector);\n                            hadParentSelector = hadParentSelector || replaced;\n                            // the nestedPaths array should have only one member - replaceParentSelector does not multiply selectors\n                            for (k = 0; k < nestedPaths.length; k++) {\n                                var replacementSelector = createSelector(createParenthesis(nestedPaths[k], el), el);\n                                addAllReplacementsIntoPath(newSelectors, [replacementSelector], el, inSelector, replacedNewSelectors);\n                            }\n                            newSelectors = replacedNewSelectors;\n                            currentElements = [];\n                        }\n                        else {\n                            currentElements.push(el);\n                        }\n                    }\n                    else {\n                        hadParentSelector = true;\n                        // the new list of selectors to add\n                        selectorsMultiplied = [];\n                        // merge the current list of non parent selector elements\n                        // on to the current list of selectors to add\n                        mergeElementsOnToSelectors(currentElements, newSelectors);\n                        // loop through our current selectors\n                        for (j = 0; j < newSelectors.length; j++) {\n                            sel = newSelectors[j];\n                            // if we don't have any parent paths, the & might be in a mixin so that it can be used\n                            // whether there are parents or not\n                            if (context.length === 0) {\n                                // the combinator used on el should now be applied to the next element instead so that\n                                // it is not lost\n                                if (sel.length > 0) {\n                                    sel[0].elements.push(new Element(el.combinator, '', el.isVariable, el._index, el._fileInfo));\n                                }\n                                selectorsMultiplied.push(sel);\n                            }\n                            else {\n                                // and the parent selectors\n                                for (k = 0; k < context.length; k++) {\n                                    // We need to put the current selectors\n                                    // then join the last selector's elements on to the parents selectors\n                                    var newSelectorPath = addReplacementIntoPath(sel, context[k], el, inSelector);\n                                    // add that to our new set of selectors\n                                    selectorsMultiplied.push(newSelectorPath);\n                                }\n                            }\n                        }\n                        // our new selectors has been multiplied, so reset the state\n                        newSelectors = selectorsMultiplied;\n                        currentElements = [];\n                    }\n                }\n                // if we have any elements left over (e.g. .a& .b == .b)\n                // add them on to all the current selectors\n                mergeElementsOnToSelectors(currentElements, newSelectors);\n                for (i = 0; i < newSelectors.length; i++) {\n                    length = newSelectors[i].length;\n                    if (length > 0) {\n                        paths.push(newSelectors[i]);\n                        lastSelector = newSelectors[i][length - 1];\n                        newSelectors[i][length - 1] = lastSelector.createDerived(lastSelector.elements, inSelector.extendList);\n                    }\n                }\n                return hadParentSelector;\n            }\n            function deriveSelector(visibilityInfo, deriveFrom) {\n                var newSelector = deriveFrom.createDerived(deriveFrom.elements, deriveFrom.extendList, deriveFrom.evaldCondition);\n                newSelector.copyVisibilityInfo(visibilityInfo);\n                return newSelector;\n            }\n            // joinSelector code follows\n            var i, newPaths, hadParentSelector;\n            newPaths = [];\n            hadParentSelector = replaceParentSelector(newPaths, context, selector);\n            if (!hadParentSelector) {\n                if (context.length > 0) {\n                    newPaths = [];\n                    for (i = 0; i < context.length; i++) {\n                        var concatenated = context[i].map(deriveSelector.bind(this, selector.visibilityInfo()));\n                        concatenated.push(selector);\n                        newPaths.push(concatenated);\n                    }\n                }\n                else {\n                    newPaths = [[selector]];\n                }\n            }\n            for (i = 0; i < newPaths.length; i++) {\n                paths.push(newPaths[i]);\n            }\n        }\n    });\n\n    var AtRule = function (name, value, rules, index, currentFileInfo, debugInfo, isRooted, visibilityInfo) {\n        var i;\n        this.name = name;\n        this.value = (value instanceof Node) ? value : (value ? new Anonymous(value) : value);\n        if (rules) {\n            if (Array.isArray(rules)) {\n                this.rules = rules;\n            }\n            else {\n                this.rules = [rules];\n                this.rules[0].selectors = (new Selector([], null, null, index, currentFileInfo)).createEmptySelectors();\n            }\n            for (i = 0; i < this.rules.length; i++) {\n                this.rules[i].allowImports = true;\n            }\n            this.setParent(this.rules, this);\n        }\n        this._index = index;\n        this._fileInfo = currentFileInfo;\n        this.debugInfo = debugInfo;\n        this.isRooted = isRooted || false;\n        this.copyVisibilityInfo(visibilityInfo);\n        this.allowRoot = true;\n    };\n    AtRule.prototype = Object.assign(new Node(), {\n        type: 'AtRule',\n        accept: function (visitor) {\n            var value = this.value, rules = this.rules;\n            if (rules) {\n                this.rules = visitor.visitArray(rules);\n            }\n            if (value) {\n                this.value = visitor.visit(value);\n            }\n        },\n        isRulesetLike: function () {\n            return this.rules || !this.isCharset();\n        },\n        isCharset: function () {\n            return '@charset' === this.name;\n        },\n        genCSS: function (context, output) {\n            var value = this.value, rules = this.rules;\n            output.add(this.name, this.fileInfo(), this.getIndex());\n            if (value) {\n                output.add(' ');\n                value.genCSS(context, output);\n            }\n            if (rules) {\n                this.outputRuleset(context, output, rules);\n            }\n            else {\n                output.add(';');\n            }\n        },\n        eval: function (context) {\n            var mediaPathBackup, mediaBlocksBackup, value = this.value, rules = this.rules;\n            // media stored inside other atrule should not bubble over it\n            // backpup media bubbling information\n            mediaPathBackup = context.mediaPath;\n            mediaBlocksBackup = context.mediaBlocks;\n            // deleted media bubbling information\n            context.mediaPath = [];\n            context.mediaBlocks = [];\n            if (value) {\n                value = value.eval(context);\n            }\n            if (rules) {\n                // assuming that there is only one rule at this point - that is how parser constructs the rule\n                rules = [rules[0].eval(context)];\n                rules[0].root = true;\n            }\n            // restore media bubbling information\n            context.mediaPath = mediaPathBackup;\n            context.mediaBlocks = mediaBlocksBackup;\n            return new AtRule(this.name, value, rules, this.getIndex(), this.fileInfo(), this.debugInfo, this.isRooted, this.visibilityInfo());\n        },\n        variable: function (name) {\n            if (this.rules) {\n                // assuming that there is only one rule at this point - that is how parser constructs the rule\n                return Ruleset.prototype.variable.call(this.rules[0], name);\n            }\n        },\n        find: function () {\n            if (this.rules) {\n                // assuming that there is only one rule at this point - that is how parser constructs the rule\n                return Ruleset.prototype.find.apply(this.rules[0], arguments);\n            }\n        },\n        rulesets: function () {\n            if (this.rules) {\n                // assuming that there is only one rule at this point - that is how parser constructs the rule\n                return Ruleset.prototype.rulesets.apply(this.rules[0]);\n            }\n        },\n        outputRuleset: function (context, output, rules) {\n            var ruleCnt = rules.length;\n            var i;\n            context.tabLevel = (context.tabLevel | 0) + 1;\n            // Compressed\n            if (context.compress) {\n                output.add('{');\n                for (i = 0; i < ruleCnt; i++) {\n                    rules[i].genCSS(context, output);\n                }\n                output.add('}');\n                context.tabLevel--;\n                return;\n            }\n            // Non-compressed\n            var tabSetStr = \"\\n\" + Array(context.tabLevel).join('  '), tabRuleStr = tabSetStr + \"  \";\n            if (!ruleCnt) {\n                output.add(\" {\" + tabSetStr + \"}\");\n            }\n            else {\n                output.add(\" {\" + tabRuleStr);\n                rules[0].genCSS(context, output);\n                for (i = 1; i < ruleCnt; i++) {\n                    output.add(tabRuleStr);\n                    rules[i].genCSS(context, output);\n                }\n                output.add(tabSetStr + \"}\");\n            }\n            context.tabLevel--;\n        }\n    });\n\n    var DetachedRuleset = function (ruleset, frames) {\n        this.ruleset = ruleset;\n        this.frames = frames;\n        this.setParent(this.ruleset, this);\n    };\n    DetachedRuleset.prototype = Object.assign(new Node(), {\n        type: 'DetachedRuleset',\n        evalFirst: true,\n        accept: function (visitor) {\n            this.ruleset = visitor.visit(this.ruleset);\n        },\n        eval: function (context) {\n            var frames = this.frames || copyArray(context.frames);\n            return new DetachedRuleset(this.ruleset, frames);\n        },\n        callEval: function (context) {\n            return this.ruleset.eval(this.frames ? new contexts.Eval(context, this.frames.concat(context.frames)) : context);\n        }\n    });\n\n    var Unit = function (numerator, denominator, backupUnit) {\n        this.numerator = numerator ? copyArray(numerator).sort() : [];\n        this.denominator = denominator ? copyArray(denominator).sort() : [];\n        if (backupUnit) {\n            this.backupUnit = backupUnit;\n        }\n        else if (numerator && numerator.length) {\n            this.backupUnit = numerator[0];\n        }\n    };\n    Unit.prototype = Object.assign(new Node(), {\n        type: 'Unit',\n        clone: function () {\n            return new Unit(copyArray(this.numerator), copyArray(this.denominator), this.backupUnit);\n        },\n        genCSS: function (context, output) {\n            // Dimension checks the unit is singular and throws an error if in strict math mode.\n            var strictUnits = context && context.strictUnits;\n            if (this.numerator.length === 1) {\n                output.add(this.numerator[0]); // the ideal situation\n            }\n            else if (!strictUnits && this.backupUnit) {\n                output.add(this.backupUnit);\n            }\n            else if (!strictUnits && this.denominator.length) {\n                output.add(this.denominator[0]);\n            }\n        },\n        toString: function () {\n            var i, returnStr = this.numerator.join('*');\n            for (i = 0; i < this.denominator.length; i++) {\n                returnStr += \"/\" + this.denominator[i];\n            }\n            return returnStr;\n        },\n        compare: function (other) {\n            return this.is(other.toString()) ? 0 : undefined;\n        },\n        is: function (unitString) {\n            return this.toString().toUpperCase() === unitString.toUpperCase();\n        },\n        isLength: function () {\n            return RegExp('^(px|em|ex|ch|rem|in|cm|mm|pc|pt|ex|vw|vh|vmin|vmax)$', 'gi').test(this.toCSS());\n        },\n        isEmpty: function () {\n            return this.numerator.length === 0 && this.denominator.length === 0;\n        },\n        isSingular: function () {\n            return this.numerator.length <= 1 && this.denominator.length === 0;\n        },\n        map: function (callback) {\n            var i;\n            for (i = 0; i < this.numerator.length; i++) {\n                this.numerator[i] = callback(this.numerator[i], false);\n            }\n            for (i = 0; i < this.denominator.length; i++) {\n                this.denominator[i] = callback(this.denominator[i], true);\n            }\n        },\n        usedUnits: function () {\n            var group;\n            var result = {};\n            var mapUnit;\n            var groupName;\n            mapUnit = function (atomicUnit) {\n                /* jshint loopfunc:true */\n                if (group.hasOwnProperty(atomicUnit) && !result[groupName]) {\n                    result[groupName] = atomicUnit;\n                }\n                return atomicUnit;\n            };\n            for (groupName in unitConversions) {\n                if (unitConversions.hasOwnProperty(groupName)) {\n                    group = unitConversions[groupName];\n                    this.map(mapUnit);\n                }\n            }\n            return result;\n        },\n        cancel: function () {\n            var counter = {};\n            var atomicUnit;\n            var i;\n            for (i = 0; i < this.numerator.length; i++) {\n                atomicUnit = this.numerator[i];\n                counter[atomicUnit] = (counter[atomicUnit] || 0) + 1;\n            }\n            for (i = 0; i < this.denominator.length; i++) {\n                atomicUnit = this.denominator[i];\n                counter[atomicUnit] = (counter[atomicUnit] || 0) - 1;\n            }\n            this.numerator = [];\n            this.denominator = [];\n            for (atomicUnit in counter) {\n                if (counter.hasOwnProperty(atomicUnit)) {\n                    var count = counter[atomicUnit];\n                    if (count > 0) {\n                        for (i = 0; i < count; i++) {\n                            this.numerator.push(atomicUnit);\n                        }\n                    }\n                    else if (count < 0) {\n                        for (i = 0; i < -count; i++) {\n                            this.denominator.push(atomicUnit);\n                        }\n                    }\n                }\n            }\n            this.numerator.sort();\n            this.denominator.sort();\n        }\n    });\n\n    //\n    // A number with a unit\n    //\n    var Dimension = function (value, unit) {\n        this.value = parseFloat(value);\n        if (isNaN(this.value)) {\n            throw new Error('Dimension is not a number.');\n        }\n        this.unit = (unit && unit instanceof Unit) ? unit :\n            new Unit(unit ? [unit] : undefined);\n        this.setParent(this.unit, this);\n    };\n    Dimension.prototype = Object.assign(new Node(), {\n        type: 'Dimension',\n        accept: function (visitor) {\n            this.unit = visitor.visit(this.unit);\n        },\n        eval: function (context) {\n            return this;\n        },\n        toColor: function () {\n            return new Color([this.value, this.value, this.value]);\n        },\n        genCSS: function (context, output) {\n            if ((context && context.strictUnits) && !this.unit.isSingular()) {\n                throw new Error(\"Multiple units in dimension. Correct the units or use the unit function. Bad unit: \" + this.unit.toString());\n            }\n            var value = this.fround(context, this.value);\n            var strValue = String(value);\n            if (value !== 0 && value < 0.000001 && value > -0.000001) {\n                // would be output 1e-6 etc.\n                strValue = value.toFixed(20).replace(/0+$/, '');\n            }\n            if (context && context.compress) {\n                // Zero values doesn't need a unit\n                if (value === 0 && this.unit.isLength()) {\n                    output.add(strValue);\n                    return;\n                }\n                // Float values doesn't need a leading zero\n                if (value > 0 && value < 1) {\n                    strValue = (strValue).substr(1);\n                }\n            }\n            output.add(strValue);\n            this.unit.genCSS(context, output);\n        },\n        // In an operation between two Dimensions,\n        // we default to the first Dimension's unit,\n        // so `1px + 2` will yield `3px`.\n        operate: function (context, op, other) {\n            /* jshint noempty:false */\n            var value = this._operate(context, op, this.value, other.value);\n            var unit = this.unit.clone();\n            if (op === '+' || op === '-') {\n                if (unit.numerator.length === 0 && unit.denominator.length === 0) {\n                    unit = other.unit.clone();\n                    if (this.unit.backupUnit) {\n                        unit.backupUnit = this.unit.backupUnit;\n                    }\n                }\n                else if (other.unit.numerator.length === 0 && unit.denominator.length === 0) ;\n                else {\n                    other = other.convertTo(this.unit.usedUnits());\n                    if (context.strictUnits && other.unit.toString() !== unit.toString()) {\n                        throw new Error(\"Incompatible units. Change the units or use the unit function. \"\n                            + (\"Bad units: '\" + unit.toString() + \"' and '\" + other.unit.toString() + \"'.\"));\n                    }\n                    value = this._operate(context, op, this.value, other.value);\n                }\n            }\n            else if (op === '*') {\n                unit.numerator = unit.numerator.concat(other.unit.numerator).sort();\n                unit.denominator = unit.denominator.concat(other.unit.denominator).sort();\n                unit.cancel();\n            }\n            else if (op === '/') {\n                unit.numerator = unit.numerator.concat(other.unit.denominator).sort();\n                unit.denominator = unit.denominator.concat(other.unit.numerator).sort();\n                unit.cancel();\n            }\n            return new Dimension(value, unit);\n        },\n        compare: function (other) {\n            var a, b;\n            if (!(other instanceof Dimension)) {\n                return undefined;\n            }\n            if (this.unit.isEmpty() || other.unit.isEmpty()) {\n                a = this;\n                b = other;\n            }\n            else {\n                a = this.unify();\n                b = other.unify();\n                if (a.unit.compare(b.unit) !== 0) {\n                    return undefined;\n                }\n            }\n            return Node.numericCompare(a.value, b.value);\n        },\n        unify: function () {\n            return this.convertTo({ length: 'px', duration: 's', angle: 'rad' });\n        },\n        convertTo: function (conversions) {\n            var value = this.value;\n            var unit = this.unit.clone();\n            var i;\n            var groupName;\n            var group;\n            var targetUnit;\n            var derivedConversions = {};\n            var applyUnit;\n            if (typeof conversions === 'string') {\n                for (i in unitConversions) {\n                    if (unitConversions[i].hasOwnProperty(conversions)) {\n                        derivedConversions = {};\n                        derivedConversions[i] = conversions;\n                    }\n                }\n                conversions = derivedConversions;\n            }\n            applyUnit = function (atomicUnit, denominator) {\n                /* jshint loopfunc:true */\n                if (group.hasOwnProperty(atomicUnit)) {\n                    if (denominator) {\n                        value = value / (group[atomicUnit] / group[targetUnit]);\n                    }\n                    else {\n                        value = value * (group[atomicUnit] / group[targetUnit]);\n                    }\n                    return targetUnit;\n                }\n                return atomicUnit;\n            };\n            for (groupName in conversions) {\n                if (conversions.hasOwnProperty(groupName)) {\n                    targetUnit = conversions[groupName];\n                    group = unitConversions[groupName];\n                    unit.map(applyUnit);\n                }\n            }\n            unit.cancel();\n            return new Dimension(value, unit);\n        }\n    });\n\n    var MATH = Math$1;\n    var Operation = function (op, operands, isSpaced) {\n        this.op = op.trim();\n        this.operands = operands;\n        this.isSpaced = isSpaced;\n    };\n    Operation.prototype = Object.assign(new Node(), {\n        type: 'Operation',\n        accept: function (visitor) {\n            this.operands = visitor.visitArray(this.operands);\n        },\n        eval: function (context) {\n            var a = this.operands[0].eval(context), b = this.operands[1].eval(context), op;\n            if (context.isMathOn(this.op)) {\n                op = this.op === './' ? '/' : this.op;\n                if (a instanceof Dimension && b instanceof Color) {\n                    a = a.toColor();\n                }\n                if (b instanceof Dimension && a instanceof Color) {\n                    b = b.toColor();\n                }\n                if (!a.operate || !b.operate) {\n                    if ((a instanceof Operation || b instanceof Operation)\n                        && a.op === '/' && context.math === MATH.PARENS_DIVISION) {\n                        return new Operation(this.op, [a, b], this.isSpaced);\n                    }\n                    throw { type: 'Operation',\n                        message: 'Operation on an invalid type' };\n                }\n                return a.operate(context, op, b);\n            }\n            else {\n                return new Operation(this.op, [a, b], this.isSpaced);\n            }\n        },\n        genCSS: function (context, output) {\n            this.operands[0].genCSS(context, output);\n            if (this.isSpaced) {\n                output.add(' ');\n            }\n            output.add(this.op);\n            if (this.isSpaced) {\n                output.add(' ');\n            }\n            this.operands[1].genCSS(context, output);\n        }\n    });\n\n    /*! *****************************************************************************\n    Copyright (c) Microsoft Corporation.\n\n    Permission to use, copy, modify, and/or distribute this software for any\n    purpose with or without fee is hereby granted.\n\n    THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n    PERFORMANCE OF THIS SOFTWARE.\n    ***************************************************************************** */\n\n    function __spreadArray(to, from, pack) {\n        if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n            if (ar || !(i in from)) {\n                if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n                ar[i] = from[i];\n            }\n        }\n        return to.concat(ar || from);\n    }\n\n    var Expression = function (value, noSpacing) {\n        this.value = value;\n        this.noSpacing = noSpacing;\n        if (!value) {\n            throw new Error('Expression requires an array parameter');\n        }\n    };\n    Expression.prototype = Object.assign(new Node(), {\n        type: 'Expression',\n        accept: function (visitor) {\n            this.value = visitor.visitArray(this.value);\n        },\n        eval: function (context) {\n            var returnValue;\n            var mathOn = context.isMathOn();\n            var inParenthesis = this.parens;\n            var doubleParen = false;\n            if (inParenthesis) {\n                context.inParenthesis();\n            }\n            if (this.value.length > 1) {\n                returnValue = new Expression(this.value.map(function (e) {\n                    if (!e.eval) {\n                        return e;\n                    }\n                    return e.eval(context);\n                }), this.noSpacing);\n            }\n            else if (this.value.length === 1) {\n                if (this.value[0].parens && !this.value[0].parensInOp && !context.inCalc) {\n                    doubleParen = true;\n                }\n                returnValue = this.value[0].eval(context);\n            }\n            else {\n                returnValue = this;\n            }\n            if (inParenthesis) {\n                context.outOfParenthesis();\n            }\n            if (this.parens && this.parensInOp && !mathOn && !doubleParen\n                && (!(returnValue instanceof Dimension))) {\n                returnValue = new Paren(returnValue);\n            }\n            return returnValue;\n        },\n        genCSS: function (context, output) {\n            for (var i = 0; i < this.value.length; i++) {\n                this.value[i].genCSS(context, output);\n                if (!this.noSpacing && i + 1 < this.value.length) {\n                    output.add(' ');\n                }\n            }\n        },\n        throwAwayComments: function () {\n            this.value = this.value.filter(function (v) {\n                return !(v instanceof Comment);\n            });\n        }\n    });\n\n    var functionCaller = /** @class */ (function () {\n        function functionCaller(name, context, index, currentFileInfo) {\n            this.name = name.toLowerCase();\n            this.index = index;\n            this.context = context;\n            this.currentFileInfo = currentFileInfo;\n            this.func = context.frames[0].functionRegistry.get(this.name);\n        }\n        functionCaller.prototype.isValid = function () {\n            return Boolean(this.func);\n        };\n        functionCaller.prototype.call = function (args) {\n            var _this = this;\n            if (!(Array.isArray(args))) {\n                args = [args];\n            }\n            var evalArgs = this.func.evalArgs;\n            if (evalArgs !== false) {\n                args = args.map(function (a) { return a.eval(_this.context); });\n            }\n            var commentFilter = function (item) { return !(item.type === 'Comment'); };\n            // This code is terrible and should be replaced as per this issue...\n            // https://github.com/less/less.js/issues/2477\n            args = args\n                .filter(commentFilter)\n                .map(function (item) {\n                if (item.type === 'Expression') {\n                    var subNodes = item.value.filter(commentFilter);\n                    if (subNodes.length === 1) {\n                        // https://github.com/less/less.js/issues/3616\n                        if (item.parens && subNodes[0].op === '/') {\n                            return item;\n                        }\n                        return subNodes[0];\n                    }\n                    else {\n                        return new Expression(subNodes);\n                    }\n                }\n                return item;\n            });\n            if (evalArgs === false) {\n                return this.func.apply(this, __spreadArray([this.context], args));\n            }\n            return this.func.apply(this, args);\n        };\n        return functionCaller;\n    }());\n\n    //\n    // A function call node.\n    //\n    var Call = function (name, args, index, currentFileInfo) {\n        this.name = name;\n        this.args = args;\n        this.calc = name === 'calc';\n        this._index = index;\n        this._fileInfo = currentFileInfo;\n    };\n    Call.prototype = Object.assign(new Node(), {\n        type: 'Call',\n        accept: function (visitor) {\n            if (this.args) {\n                this.args = visitor.visitArray(this.args);\n            }\n        },\n        //\n        // When evaluating a function call,\n        // we either find the function in the functionRegistry,\n        // in which case we call it, passing the  evaluated arguments,\n        // if this returns null or we cannot find the function, we\n        // simply print it out as it appeared originally [2].\n        //\n        // The reason why we evaluate the arguments, is in the case where\n        // we try to pass a variable to a function, like: `saturate(@color)`.\n        // The function should receive the value, not the variable.\n        //\n        eval: function (context) {\n            var _this = this;\n            /**\n             * Turn off math for calc(), and switch back on for evaluating nested functions\n             */\n            var currentMathContext = context.mathOn;\n            context.mathOn = !this.calc;\n            if (this.calc || context.inCalc) {\n                context.enterCalc();\n            }\n            var exitCalc = function () {\n                if (_this.calc || context.inCalc) {\n                    context.exitCalc();\n                }\n                context.mathOn = currentMathContext;\n            };\n            var result;\n            var funcCaller = new functionCaller(this.name, context, this.getIndex(), this.fileInfo());\n            if (funcCaller.isValid()) {\n                try {\n                    result = funcCaller.call(this.args);\n                    exitCalc();\n                }\n                catch (e) {\n                    if (e.hasOwnProperty('line') && e.hasOwnProperty('column')) {\n                        throw e;\n                    }\n                    throw {\n                        type: e.type || 'Runtime',\n                        message: \"Error evaluating function `\" + this.name + \"`\" + (e.message ? \": \" + e.message : ''),\n                        index: this.getIndex(),\n                        filename: this.fileInfo().filename,\n                        line: e.lineNumber,\n                        column: e.columnNumber\n                    };\n                }\n            }\n            if (result !== null && result !== undefined) {\n                // Results that that are not nodes are cast as Anonymous nodes\n                // Falsy values or booleans are returned as empty nodes\n                if (!(result instanceof Node)) {\n                    if (!result || result === true) {\n                        result = new Anonymous(null);\n                    }\n                    else {\n                        result = new Anonymous(result.toString());\n                    }\n                }\n                result._index = this._index;\n                result._fileInfo = this._fileInfo;\n                return result;\n            }\n            var args = this.args.map(function (a) { return a.eval(context); });\n            exitCalc();\n            return new Call(this.name, args, this.getIndex(), this.fileInfo());\n        },\n        genCSS: function (context, output) {\n            output.add(this.name + \"(\", this.fileInfo(), this.getIndex());\n            for (var i = 0; i < this.args.length; i++) {\n                this.args[i].genCSS(context, output);\n                if (i + 1 < this.args.length) {\n                    output.add(', ');\n                }\n            }\n            output.add(')');\n        }\n    });\n\n    var Variable = function (name, index, currentFileInfo) {\n        this.name = name;\n        this._index = index;\n        this._fileInfo = currentFileInfo;\n    };\n    Variable.prototype = Object.assign(new Node(), {\n        type: 'Variable',\n        eval: function (context) {\n            var variable, name = this.name;\n            if (name.indexOf('@@') === 0) {\n                name = \"@\" + new Variable(name.slice(1), this.getIndex(), this.fileInfo()).eval(context).value;\n            }\n            if (this.evaluating) {\n                throw { type: 'Name',\n                    message: \"Recursive variable definition for \" + name,\n                    filename: this.fileInfo().filename,\n                    index: this.getIndex() };\n            }\n            this.evaluating = true;\n            variable = this.find(context.frames, function (frame) {\n                var v = frame.variable(name);\n                if (v) {\n                    if (v.important) {\n                        var importantScope = context.importantScope[context.importantScope.length - 1];\n                        importantScope.important = v.important;\n                    }\n                    // If in calc, wrap vars in a function call to cascade evaluate args first\n                    if (context.inCalc) {\n                        return (new Call('_SELF', [v.value])).eval(context);\n                    }\n                    else {\n                        return v.value.eval(context);\n                    }\n                }\n            });\n            if (variable) {\n                this.evaluating = false;\n                return variable;\n            }\n            else {\n                throw { type: 'Name',\n                    message: \"variable \" + name + \" is undefined\",\n                    filename: this.fileInfo().filename,\n                    index: this.getIndex() };\n            }\n        },\n        find: function (obj, fun) {\n            for (var i = 0, r = void 0; i < obj.length; i++) {\n                r = fun.call(obj, obj[i]);\n                if (r) {\n                    return r;\n                }\n            }\n            return null;\n        }\n    });\n\n    var Property = function (name, index, currentFileInfo) {\n        this.name = name;\n        this._index = index;\n        this._fileInfo = currentFileInfo;\n    };\n    Property.prototype = Object.assign(new Node(), {\n        type: 'Property',\n        eval: function (context) {\n            var property;\n            var name = this.name;\n            // TODO: shorten this reference\n            var mergeRules = context.pluginManager.less.visitors.ToCSSVisitor.prototype._mergeRules;\n            if (this.evaluating) {\n                throw { type: 'Name',\n                    message: \"Recursive property reference for \" + name,\n                    filename: this.fileInfo().filename,\n                    index: this.getIndex() };\n            }\n            this.evaluating = true;\n            property = this.find(context.frames, function (frame) {\n                var v;\n                var vArr = frame.property(name);\n                if (vArr) {\n                    for (var i = 0; i < vArr.length; i++) {\n                        v = vArr[i];\n                        vArr[i] = new Declaration(v.name, v.value, v.important, v.merge, v.index, v.currentFileInfo, v.inline, v.variable);\n                    }\n                    mergeRules(vArr);\n                    v = vArr[vArr.length - 1];\n                    if (v.important) {\n                        var importantScope = context.importantScope[context.importantScope.length - 1];\n                        importantScope.important = v.important;\n                    }\n                    v = v.value.eval(context);\n                    return v;\n                }\n            });\n            if (property) {\n                this.evaluating = false;\n                return property;\n            }\n            else {\n                throw { type: 'Name',\n                    message: \"Property '\" + name + \"' is undefined\",\n                    filename: this.currentFileInfo.filename,\n                    index: this.index };\n            }\n        },\n        find: function (obj, fun) {\n            for (var i = 0, r = void 0; i < obj.length; i++) {\n                r = fun.call(obj, obj[i]);\n                if (r) {\n                    return r;\n                }\n            }\n            return null;\n        }\n    });\n\n    var Attribute = function (key, op, value) {\n        this.key = key;\n        this.op = op;\n        this.value = value;\n    };\n    Attribute.prototype = Object.assign(new Node(), {\n        type: 'Attribute',\n        eval: function (context) {\n            return new Attribute(this.key.eval ? this.key.eval(context) : this.key, this.op, (this.value && this.value.eval) ? this.value.eval(context) : this.value);\n        },\n        genCSS: function (context, output) {\n            output.add(this.toCSS(context));\n        },\n        toCSS: function (context) {\n            var value = this.key.toCSS ? this.key.toCSS(context) : this.key;\n            if (this.op) {\n                value += this.op;\n                value += (this.value.toCSS ? this.value.toCSS(context) : this.value);\n            }\n            return \"[\" + value + \"]\";\n        }\n    });\n\n    var Quoted = function (str, content, escaped, index, currentFileInfo) {\n        this.escaped = (escaped == null) ? true : escaped;\n        this.value = content || '';\n        this.quote = str.charAt(0);\n        this._index = index;\n        this._fileInfo = currentFileInfo;\n        this.variableRegex = /@\\{([\\w-]+)\\}/g;\n        this.propRegex = /\\$\\{([\\w-]+)\\}/g;\n        this.allowRoot = escaped;\n    };\n    Quoted.prototype = Object.assign(new Node(), {\n        type: 'Quoted',\n        genCSS: function (context, output) {\n            if (!this.escaped) {\n                output.add(this.quote, this.fileInfo(), this.getIndex());\n            }\n            output.add(this.value);\n            if (!this.escaped) {\n                output.add(this.quote);\n            }\n        },\n        containsVariables: function () {\n            return this.value.match(this.variableRegex);\n        },\n        eval: function (context) {\n            var that = this;\n            var value = this.value;\n            var variableReplacement = function (_, name) {\n                var v = new Variable(\"@\" + name, that.getIndex(), that.fileInfo()).eval(context, true);\n                return (v instanceof Quoted) ? v.value : v.toCSS();\n            };\n            var propertyReplacement = function (_, name) {\n                var v = new Property(\"$\" + name, that.getIndex(), that.fileInfo()).eval(context, true);\n                return (v instanceof Quoted) ? v.value : v.toCSS();\n            };\n            function iterativeReplace(value, regexp, replacementFnc) {\n                var evaluatedValue = value;\n                do {\n                    value = evaluatedValue.toString();\n                    evaluatedValue = value.replace(regexp, replacementFnc);\n                } while (value !== evaluatedValue);\n                return evaluatedValue;\n            }\n            value = iterativeReplace(value, this.variableRegex, variableReplacement);\n            value = iterativeReplace(value, this.propRegex, propertyReplacement);\n            return new Quoted(this.quote + value + this.quote, value, this.escaped, this.getIndex(), this.fileInfo());\n        },\n        compare: function (other) {\n            // when comparing quoted strings allow the quote to differ\n            if (other.type === 'Quoted' && !this.escaped && !other.escaped) {\n                return Node.numericCompare(this.value, other.value);\n            }\n            else {\n                return other.toCSS && this.toCSS() === other.toCSS() ? 0 : undefined;\n            }\n        }\n    });\n\n    function escapePath(path) {\n        return path.replace(/[\\(\\)'\"\\s]/g, function (match) { return \"\\\\\" + match; });\n    }\n    var URL = function (val, index, currentFileInfo, isEvald) {\n        this.value = val;\n        this._index = index;\n        this._fileInfo = currentFileInfo;\n        this.isEvald = isEvald;\n    };\n    URL.prototype = Object.assign(new Node(), {\n        type: 'Url',\n        accept: function (visitor) {\n            this.value = visitor.visit(this.value);\n        },\n        genCSS: function (context, output) {\n            output.add('url(');\n            this.value.genCSS(context, output);\n            output.add(')');\n        },\n        eval: function (context) {\n            var val = this.value.eval(context);\n            var rootpath;\n            if (!this.isEvald) {\n                // Add the rootpath if the URL requires a rewrite\n                rootpath = this.fileInfo() && this.fileInfo().rootpath;\n                if (typeof rootpath === 'string' &&\n                    typeof val.value === 'string' &&\n                    context.pathRequiresRewrite(val.value)) {\n                    if (!val.quote) {\n                        rootpath = escapePath(rootpath);\n                    }\n                    val.value = context.rewritePath(val.value, rootpath);\n                }\n                else {\n                    val.value = context.normalizePath(val.value);\n                }\n                // Add url args if enabled\n                if (context.urlArgs) {\n                    if (!val.value.match(/^\\s*data:/)) {\n                        var delimiter = val.value.indexOf('?') === -1 ? '?' : '&';\n                        var urlArgs = delimiter + context.urlArgs;\n                        if (val.value.indexOf('#') !== -1) {\n                            val.value = val.value.replace('#', urlArgs + \"#\");\n                        }\n                        else {\n                            val.value += urlArgs;\n                        }\n                    }\n                }\n            }\n            return new URL(val, this.getIndex(), this.fileInfo(), true);\n        }\n    });\n\n    var Media = function (value, features, index, currentFileInfo, visibilityInfo) {\n        this._index = index;\n        this._fileInfo = currentFileInfo;\n        var selectors = (new Selector([], null, null, this._index, this._fileInfo)).createEmptySelectors();\n        this.features = new Value(features);\n        this.rules = [new Ruleset(selectors, value)];\n        this.rules[0].allowImports = true;\n        this.copyVisibilityInfo(visibilityInfo);\n        this.allowRoot = true;\n        this.setParent(selectors, this);\n        this.setParent(this.features, this);\n        this.setParent(this.rules, this);\n    };\n    Media.prototype = Object.assign(new AtRule(), {\n        type: 'Media',\n        isRulesetLike: function () {\n            return true;\n        },\n        accept: function (visitor) {\n            if (this.features) {\n                this.features = visitor.visit(this.features);\n            }\n            if (this.rules) {\n                this.rules = visitor.visitArray(this.rules);\n            }\n        },\n        genCSS: function (context, output) {\n            output.add('@media ', this._fileInfo, this._index);\n            this.features.genCSS(context, output);\n            this.outputRuleset(context, output, this.rules);\n        },\n        eval: function (context) {\n            if (!context.mediaBlocks) {\n                context.mediaBlocks = [];\n                context.mediaPath = [];\n            }\n            var media = new Media(null, [], this._index, this._fileInfo, this.visibilityInfo());\n            if (this.debugInfo) {\n                this.rules[0].debugInfo = this.debugInfo;\n                media.debugInfo = this.debugInfo;\n            }\n            media.features = this.features.eval(context);\n            context.mediaPath.push(media);\n            context.mediaBlocks.push(media);\n            this.rules[0].functionRegistry = context.frames[0].functionRegistry.inherit();\n            context.frames.unshift(this.rules[0]);\n            media.rules = [this.rules[0].eval(context)];\n            context.frames.shift();\n            context.mediaPath.pop();\n            return context.mediaPath.length === 0 ? media.evalTop(context) :\n                media.evalNested(context);\n        },\n        evalTop: function (context) {\n            var result = this;\n            // Render all dependent Media blocks.\n            if (context.mediaBlocks.length > 1) {\n                var selectors = (new Selector([], null, null, this.getIndex(), this.fileInfo())).createEmptySelectors();\n                result = new Ruleset(selectors, context.mediaBlocks);\n                result.multiMedia = true;\n                result.copyVisibilityInfo(this.visibilityInfo());\n                this.setParent(result, this);\n            }\n            delete context.mediaBlocks;\n            delete context.mediaPath;\n            return result;\n        },\n        evalNested: function (context) {\n            var i;\n            var value;\n            var path = context.mediaPath.concat([this]);\n            // Extract the media-query conditions separated with `,` (OR).\n            for (i = 0; i < path.length; i++) {\n                value = path[i].features instanceof Value ?\n                    path[i].features.value : path[i].features;\n                path[i] = Array.isArray(value) ? value : [value];\n            }\n            // Trace all permutations to generate the resulting media-query.\n            //\n            // (a, b and c) with nested (d, e) ->\n            //    a and d\n            //    a and e\n            //    b and c and d\n            //    b and c and e\n            this.features = new Value(this.permute(path).map(function (path) {\n                path = path.map(function (fragment) { return fragment.toCSS ? fragment : new Anonymous(fragment); });\n                for (i = path.length - 1; i > 0; i--) {\n                    path.splice(i, 0, new Anonymous('and'));\n                }\n                return new Expression(path);\n            }));\n            this.setParent(this.features, this);\n            // Fake a tree-node that doesn't output anything.\n            return new Ruleset([], []);\n        },\n        permute: function (arr) {\n            if (arr.length === 0) {\n                return [];\n            }\n            else if (arr.length === 1) {\n                return arr[0];\n            }\n            else {\n                var result = [];\n                var rest = this.permute(arr.slice(1));\n                for (var i = 0; i < rest.length; i++) {\n                    for (var j = 0; j < arr[0].length; j++) {\n                        result.push([arr[0][j]].concat(rest[i]));\n                    }\n                }\n                return result;\n            }\n        },\n        bubbleSelectors: function (selectors) {\n            if (!selectors) {\n                return;\n            }\n            this.rules = [new Ruleset(copyArray(selectors), [this.rules[0]])];\n            this.setParent(this.rules, this);\n        }\n    });\n\n    //\n    // CSS @import node\n    //\n    // The general strategy here is that we don't want to wait\n    // for the parsing to be completed, before we start importing\n    // the file. That's because in the context of a browser,\n    // most of the time will be spent waiting for the server to respond.\n    //\n    // On creation, we push the import path to our import queue, though\n    // `import,push`, we also pass it a callback, which it'll call once\n    // the file has been fetched, and parsed.\n    //\n    var Import = function (path, features, options, index, currentFileInfo, visibilityInfo) {\n        this.options = options;\n        this._index = index;\n        this._fileInfo = currentFileInfo;\n        this.path = path;\n        this.features = features;\n        this.allowRoot = true;\n        if (this.options.less !== undefined || this.options.inline) {\n            this.css = !this.options.less || this.options.inline;\n        }\n        else {\n            var pathValue = this.getPath();\n            if (pathValue && /[#\\.\\&\\?]css([\\?;].*)?$/.test(pathValue)) {\n                this.css = true;\n            }\n        }\n        this.copyVisibilityInfo(visibilityInfo);\n        this.setParent(this.features, this);\n        this.setParent(this.path, this);\n    };\n    Import.prototype = Object.assign(new Node(), {\n        type: 'Import',\n        accept: function (visitor) {\n            if (this.features) {\n                this.features = visitor.visit(this.features);\n            }\n            this.path = visitor.visit(this.path);\n            if (!this.options.isPlugin && !this.options.inline && this.root) {\n                this.root = visitor.visit(this.root);\n            }\n        },\n        genCSS: function (context, output) {\n            if (this.css && this.path._fileInfo.reference === undefined) {\n                output.add('@import ', this._fileInfo, this._index);\n                this.path.genCSS(context, output);\n                if (this.features) {\n                    output.add(' ');\n                    this.features.genCSS(context, output);\n                }\n                output.add(';');\n            }\n        },\n        getPath: function () {\n            return (this.path instanceof URL) ?\n                this.path.value.value : this.path.value;\n        },\n        isVariableImport: function () {\n            var path = this.path;\n            if (path instanceof URL) {\n                path = path.value;\n            }\n            if (path instanceof Quoted) {\n                return path.containsVariables();\n            }\n            return true;\n        },\n        evalForImport: function (context) {\n            var path = this.path;\n            if (path instanceof URL) {\n                path = path.value;\n            }\n            return new Import(path.eval(context), this.features, this.options, this._index, this._fileInfo, this.visibilityInfo());\n        },\n        evalPath: function (context) {\n            var path = this.path.eval(context);\n            var fileInfo = this._fileInfo;\n            if (!(path instanceof URL)) {\n                // Add the rootpath if the URL requires a rewrite\n                var pathValue = path.value;\n                if (fileInfo &&\n                    pathValue &&\n                    context.pathRequiresRewrite(pathValue)) {\n                    path.value = context.rewritePath(pathValue, fileInfo.rootpath);\n                }\n                else {\n                    path.value = context.normalizePath(path.value);\n                }\n            }\n            return path;\n        },\n        eval: function (context) {\n            var result = this.doEval(context);\n            if (this.options.reference || this.blocksVisibility()) {\n                if (result.length || result.length === 0) {\n                    result.forEach(function (node) {\n                        node.addVisibilityBlock();\n                    });\n                }\n                else {\n                    result.addVisibilityBlock();\n                }\n            }\n            return result;\n        },\n        doEval: function (context) {\n            var ruleset;\n            var registry;\n            var features = this.features && this.features.eval(context);\n            if (this.options.isPlugin) {\n                if (this.root && this.root.eval) {\n                    try {\n                        this.root.eval(context);\n                    }\n                    catch (e) {\n                        e.message = 'Plugin error during evaluation';\n                        throw new LessError(e, this.root.imports, this.root.filename);\n                    }\n                }\n                registry = context.frames[0] && context.frames[0].functionRegistry;\n                if (registry && this.root && this.root.functions) {\n                    registry.addMultiple(this.root.functions);\n                }\n                return [];\n            }\n            if (this.skip) {\n                if (typeof this.skip === 'function') {\n                    this.skip = this.skip();\n                }\n                if (this.skip) {\n                    return [];\n                }\n            }\n            if (this.options.inline) {\n                var contents = new Anonymous(this.root, 0, {\n                    filename: this.importedFilename,\n                    reference: this.path._fileInfo && this.path._fileInfo.reference\n                }, true, true);\n                return this.features ? new Media([contents], this.features.value) : [contents];\n            }\n            else if (this.css) {\n                var newImport = new Import(this.evalPath(context), features, this.options, this._index);\n                if (!newImport.css && this.error) {\n                    throw this.error;\n                }\n                return newImport;\n            }\n            else if (this.root) {\n                ruleset = new Ruleset(null, copyArray(this.root.rules));\n                ruleset.evalImports(context);\n                return this.features ? new Media(ruleset.rules, this.features.value) : ruleset.rules;\n            }\n            else {\n                return [];\n            }\n        }\n    });\n\n    var JsEvalNode = function () { };\n    JsEvalNode.prototype = Object.assign(new Node(), {\n        evaluateJavaScript: function (expression, context) {\n            var result;\n            var that = this;\n            var evalContext = {};\n            if (!context.javascriptEnabled) {\n                throw { message: 'Inline JavaScript is not enabled. Is it set in your options?',\n                    filename: this.fileInfo().filename,\n                    index: this.getIndex() };\n            }\n            expression = expression.replace(/@\\{([\\w-]+)\\}/g, function (_, name) {\n                return that.jsify(new Variable(\"@\" + name, that.getIndex(), that.fileInfo()).eval(context));\n            });\n            try {\n                expression = new Function(\"return (\" + expression + \")\");\n            }\n            catch (e) {\n                throw { message: \"JavaScript evaluation error: \" + e.message + \" from `\" + expression + \"`\",\n                    filename: this.fileInfo().filename,\n                    index: this.getIndex() };\n            }\n            var variables = context.frames[0].variables();\n            for (var k in variables) {\n                if (variables.hasOwnProperty(k)) {\n                    /* jshint loopfunc:true */\n                    evalContext[k.slice(1)] = {\n                        value: variables[k].value,\n                        toJS: function () {\n                            return this.value.eval(context).toCSS();\n                        }\n                    };\n                }\n            }\n            try {\n                result = expression.call(evalContext);\n            }\n            catch (e) {\n                throw { message: \"JavaScript evaluation error: '\" + e.name + \": \" + e.message.replace(/[\"]/g, '\\'') + \"'\",\n                    filename: this.fileInfo().filename,\n                    index: this.getIndex() };\n            }\n            return result;\n        },\n        jsify: function (obj) {\n            if (Array.isArray(obj.value) && (obj.value.length > 1)) {\n                return \"[\" + obj.value.map(function (v) { return v.toCSS(); }).join(', ') + \"]\";\n            }\n            else {\n                return obj.toCSS();\n            }\n        }\n    });\n\n    var JavaScript = function (string, escaped, index, currentFileInfo) {\n        this.escaped = escaped;\n        this.expression = string;\n        this._index = index;\n        this._fileInfo = currentFileInfo;\n    };\n    JavaScript.prototype = Object.assign(new JsEvalNode(), {\n        type: 'JavaScript',\n        eval: function (context) {\n            var result = this.evaluateJavaScript(this.expression, context);\n            var type = typeof result;\n            if (type === 'number' && !isNaN(result)) {\n                return new Dimension(result);\n            }\n            else if (type === 'string') {\n                return new Quoted(\"\\\"\" + result + \"\\\"\", result, this.escaped, this._index);\n            }\n            else if (Array.isArray(result)) {\n                return new Anonymous(result.join(', '));\n            }\n            else {\n                return new Anonymous(result);\n            }\n        }\n    });\n\n    var Assignment = function (key, val) {\n        this.key = key;\n        this.value = val;\n    };\n    Assignment.prototype = Object.assign(new Node(), {\n        type: 'Assignment',\n        accept: function (visitor) {\n            this.value = visitor.visit(this.value);\n        },\n        eval: function (context) {\n            if (this.value.eval) {\n                return new Assignment(this.key, this.value.eval(context));\n            }\n            return this;\n        },\n        genCSS: function (context, output) {\n            output.add(this.key + \"=\");\n            if (this.value.genCSS) {\n                this.value.genCSS(context, output);\n            }\n            else {\n                output.add(this.value);\n            }\n        }\n    });\n\n    var Condition = function (op, l, r, i, negate) {\n        this.op = op.trim();\n        this.lvalue = l;\n        this.rvalue = r;\n        this._index = i;\n        this.negate = negate;\n    };\n    Condition.prototype = Object.assign(new Node(), {\n        type: 'Condition',\n        accept: function (visitor) {\n            this.lvalue = visitor.visit(this.lvalue);\n            this.rvalue = visitor.visit(this.rvalue);\n        },\n        eval: function (context) {\n            var result = (function (op, a, b) {\n                switch (op) {\n                    case 'and': return a && b;\n                    case 'or': return a || b;\n                    default:\n                        switch (Node.compare(a, b)) {\n                            case -1:\n                                return op === '<' || op === '=<' || op === '<=';\n                            case 0:\n                                return op === '=' || op === '>=' || op === '=<' || op === '<=';\n                            case 1:\n                                return op === '>' || op === '>=';\n                            default:\n                                return false;\n                        }\n                }\n            })(this.op, this.lvalue.eval(context), this.rvalue.eval(context));\n            return this.negate ? !result : result;\n        }\n    });\n\n    var UnicodeDescriptor = function (value) {\n        this.value = value;\n    };\n    UnicodeDescriptor.prototype = Object.assign(new Node(), {\n        type: 'UnicodeDescriptor'\n    });\n\n    var Negative = function (node) {\n        this.value = node;\n    };\n    Negative.prototype = Object.assign(new Node(), {\n        type: 'Negative',\n        genCSS: function (context, output) {\n            output.add('-');\n            this.value.genCSS(context, output);\n        },\n        eval: function (context) {\n            if (context.isMathOn()) {\n                return (new Operation('*', [new Dimension(-1), this.value])).eval(context);\n            }\n            return new Negative(this.value.eval(context));\n        }\n    });\n\n    var Extend = function (selector, option, index, currentFileInfo, visibilityInfo) {\n        this.selector = selector;\n        this.option = option;\n        this.object_id = Extend.next_id++;\n        this.parent_ids = [this.object_id];\n        this._index = index;\n        this._fileInfo = currentFileInfo;\n        this.copyVisibilityInfo(visibilityInfo);\n        this.allowRoot = true;\n        switch (option) {\n            case 'all':\n                this.allowBefore = true;\n                this.allowAfter = true;\n                break;\n            default:\n                this.allowBefore = false;\n                this.allowAfter = false;\n                break;\n        }\n        this.setParent(this.selector, this);\n    };\n    Extend.prototype = Object.assign(new Node(), {\n        type: 'Extend',\n        accept: function (visitor) {\n            this.selector = visitor.visit(this.selector);\n        },\n        eval: function (context) {\n            return new Extend(this.selector.eval(context), this.option, this.getIndex(), this.fileInfo(), this.visibilityInfo());\n        },\n        clone: function (context) {\n            return new Extend(this.selector, this.option, this.getIndex(), this.fileInfo(), this.visibilityInfo());\n        },\n        // it concatenates (joins) all selectors in selector array\n        findSelfSelectors: function (selectors) {\n            var selfElements = [], i, selectorElements;\n            for (i = 0; i < selectors.length; i++) {\n                selectorElements = selectors[i].elements;\n                // duplicate the logic in genCSS function inside the selector node.\n                // future TODO - move both logics into the selector joiner visitor\n                if (i > 0 && selectorElements.length && selectorElements[0].combinator.value === '') {\n                    selectorElements[0].combinator.value = ' ';\n                }\n                selfElements = selfElements.concat(selectors[i].elements);\n            }\n            this.selfSelectors = [new Selector(selfElements)];\n            this.selfSelectors[0].copyVisibilityInfo(this.visibilityInfo());\n        }\n    });\n    Extend.next_id = 0;\n\n    var VariableCall = function (variable, index, currentFileInfo) {\n        this.variable = variable;\n        this._index = index;\n        this._fileInfo = currentFileInfo;\n        this.allowRoot = true;\n    };\n    VariableCall.prototype = Object.assign(new Node(), {\n        type: 'VariableCall',\n        eval: function (context) {\n            var rules;\n            var detachedRuleset = new Variable(this.variable, this.getIndex(), this.fileInfo()).eval(context);\n            var error = new LessError({ message: \"Could not evaluate variable call \" + this.variable });\n            if (!detachedRuleset.ruleset) {\n                if (detachedRuleset.rules) {\n                    rules = detachedRuleset;\n                }\n                else if (Array.isArray(detachedRuleset)) {\n                    rules = new Ruleset('', detachedRuleset);\n                }\n                else if (Array.isArray(detachedRuleset.value)) {\n                    rules = new Ruleset('', detachedRuleset.value);\n                }\n                else {\n                    throw error;\n                }\n                detachedRuleset = new DetachedRuleset(rules);\n            }\n            if (detachedRuleset.ruleset) {\n                return detachedRuleset.callEval(context);\n            }\n            throw error;\n        }\n    });\n\n    var NamespaceValue = function (ruleCall, lookups, index, fileInfo) {\n        this.value = ruleCall;\n        this.lookups = lookups;\n        this._index = index;\n        this._fileInfo = fileInfo;\n    };\n    NamespaceValue.prototype = Object.assign(new Node(), {\n        type: 'NamespaceValue',\n        eval: function (context) {\n            var i, name, rules = this.value.eval(context);\n            for (i = 0; i < this.lookups.length; i++) {\n                name = this.lookups[i];\n                /**\n                 * Eval'd DRs return rulesets.\n                 * Eval'd mixins return rules, so let's make a ruleset if we need it.\n                 * We need to do this because of late parsing of values\n                 */\n                if (Array.isArray(rules)) {\n                    rules = new Ruleset([new Selector()], rules);\n                }\n                if (name === '') {\n                    rules = rules.lastDeclaration();\n                }\n                else if (name.charAt(0) === '@') {\n                    if (name.charAt(1) === '@') {\n                        name = \"@\" + new Variable(name.substr(1)).eval(context).value;\n                    }\n                    if (rules.variables) {\n                        rules = rules.variable(name);\n                    }\n                    if (!rules) {\n                        throw { type: 'Name',\n                            message: \"variable \" + name + \" not found\",\n                            filename: this.fileInfo().filename,\n                            index: this.getIndex() };\n                    }\n                }\n                else {\n                    if (name.substring(0, 2) === '$@') {\n                        name = \"$\" + new Variable(name.substr(1)).eval(context).value;\n                    }\n                    else {\n                        name = name.charAt(0) === '$' ? name : \"$\" + name;\n                    }\n                    if (rules.properties) {\n                        rules = rules.property(name);\n                    }\n                    if (!rules) {\n                        throw { type: 'Name',\n                            message: \"property \\\"\" + name.substr(1) + \"\\\" not found\",\n                            filename: this.fileInfo().filename,\n                            index: this.getIndex() };\n                    }\n                    // Properties are an array of values, since a ruleset can have multiple props.\n                    // We pick the last one (the \"cascaded\" value)\n                    rules = rules[rules.length - 1];\n                }\n                if (rules.value) {\n                    rules = rules.eval(context).value;\n                }\n                if (rules.ruleset) {\n                    rules = rules.ruleset.eval(context);\n                }\n            }\n            return rules;\n        }\n    });\n\n    var Definition = function (name, params, rules, condition, variadic, frames, visibilityInfo) {\n        this.name = name || 'anonymous mixin';\n        this.selectors = [new Selector([new Element(null, name, false, this._index, this._fileInfo)])];\n        this.params = params;\n        this.condition = condition;\n        this.variadic = variadic;\n        this.arity = params.length;\n        this.rules = rules;\n        this._lookups = {};\n        var optionalParameters = [];\n        this.required = params.reduce(function (count, p) {\n            if (!p.name || (p.name && !p.value)) {\n                return count + 1;\n            }\n            else {\n                optionalParameters.push(p.name);\n                return count;\n            }\n        }, 0);\n        this.optionalParameters = optionalParameters;\n        this.frames = frames;\n        this.copyVisibilityInfo(visibilityInfo);\n        this.allowRoot = true;\n    };\n    Definition.prototype = Object.assign(new Ruleset(), {\n        type: 'MixinDefinition',\n        evalFirst: true,\n        accept: function (visitor) {\n            if (this.params && this.params.length) {\n                this.params = visitor.visitArray(this.params);\n            }\n            this.rules = visitor.visitArray(this.rules);\n            if (this.condition) {\n                this.condition = visitor.visit(this.condition);\n            }\n        },\n        evalParams: function (context, mixinEnv, args, evaldArguments) {\n            /* jshint boss:true */\n            var frame = new Ruleset(null, null);\n            var varargs;\n            var arg;\n            var params = copyArray(this.params);\n            var i;\n            var j;\n            var val;\n            var name;\n            var isNamedFound;\n            var argIndex;\n            var argsLength = 0;\n            if (mixinEnv.frames && mixinEnv.frames[0] && mixinEnv.frames[0].functionRegistry) {\n                frame.functionRegistry = mixinEnv.frames[0].functionRegistry.inherit();\n            }\n            mixinEnv = new contexts.Eval(mixinEnv, [frame].concat(mixinEnv.frames));\n            if (args) {\n                args = copyArray(args);\n                argsLength = args.length;\n                for (i = 0; i < argsLength; i++) {\n                    arg = args[i];\n                    if (name = (arg && arg.name)) {\n                        isNamedFound = false;\n                        for (j = 0; j < params.length; j++) {\n                            if (!evaldArguments[j] && name === params[j].name) {\n                                evaldArguments[j] = arg.value.eval(context);\n                                frame.prependRule(new Declaration(name, arg.value.eval(context)));\n                                isNamedFound = true;\n                                break;\n                            }\n                        }\n                        if (isNamedFound) {\n                            args.splice(i, 1);\n                            i--;\n                            continue;\n                        }\n                        else {\n                            throw { type: 'Runtime', message: \"Named argument for \" + this.name + \" \" + args[i].name + \" not found\" };\n                        }\n                    }\n                }\n            }\n            argIndex = 0;\n            for (i = 0; i < params.length; i++) {\n                if (evaldArguments[i]) {\n                    continue;\n                }\n                arg = args && args[argIndex];\n                if (name = params[i].name) {\n                    if (params[i].variadic) {\n                        varargs = [];\n                        for (j = argIndex; j < argsLength; j++) {\n                            varargs.push(args[j].value.eval(context));\n                        }\n                        frame.prependRule(new Declaration(name, new Expression(varargs).eval(context)));\n                    }\n                    else {\n                        val = arg && arg.value;\n                        if (val) {\n                            // This was a mixin call, pass in a detached ruleset of it's eval'd rules\n                            if (Array.isArray(val)) {\n                                val = new DetachedRuleset(new Ruleset('', val));\n                            }\n                            else {\n                                val = val.eval(context);\n                            }\n                        }\n                        else if (params[i].value) {\n                            val = params[i].value.eval(mixinEnv);\n                            frame.resetCache();\n                        }\n                        else {\n                            throw { type: 'Runtime', message: \"wrong number of arguments for \" + this.name + \" (\" + argsLength + \" for \" + this.arity + \")\" };\n                        }\n                        frame.prependRule(new Declaration(name, val));\n                        evaldArguments[i] = val;\n                    }\n                }\n                if (params[i].variadic && args) {\n                    for (j = argIndex; j < argsLength; j++) {\n                        evaldArguments[j] = args[j].value.eval(context);\n                    }\n                }\n                argIndex++;\n            }\n            return frame;\n        },\n        makeImportant: function () {\n            var rules = !this.rules ? this.rules : this.rules.map(function (r) {\n                if (r.makeImportant) {\n                    return r.makeImportant(true);\n                }\n                else {\n                    return r;\n                }\n            });\n            var result = new Definition(this.name, this.params, rules, this.condition, this.variadic, this.frames);\n            return result;\n        },\n        eval: function (context) {\n            return new Definition(this.name, this.params, this.rules, this.condition, this.variadic, this.frames || copyArray(context.frames));\n        },\n        evalCall: function (context, args, important) {\n            var _arguments = [];\n            var mixinFrames = this.frames ? this.frames.concat(context.frames) : context.frames;\n            var frame = this.evalParams(context, new contexts.Eval(context, mixinFrames), args, _arguments);\n            var rules;\n            var ruleset;\n            frame.prependRule(new Declaration('@arguments', new Expression(_arguments).eval(context)));\n            rules = copyArray(this.rules);\n            ruleset = new Ruleset(null, rules);\n            ruleset.originalRuleset = this;\n            ruleset = ruleset.eval(new contexts.Eval(context, [this, frame].concat(mixinFrames)));\n            if (important) {\n                ruleset = ruleset.makeImportant();\n            }\n            return ruleset;\n        },\n        matchCondition: function (args, context) {\n            if (this.condition && !this.condition.eval(new contexts.Eval(context, [this.evalParams(context, /* the parameter variables */ new contexts.Eval(context, this.frames ? this.frames.concat(context.frames) : context.frames), args, [])]\n                .concat(this.frames || []) // the parent namespace/mixin frames\n                .concat(context.frames)))) { // the current environment frames\n                return false;\n            }\n            return true;\n        },\n        matchArgs: function (args, context) {\n            var allArgsCnt = (args && args.length) || 0;\n            var len;\n            var optionalParameters = this.optionalParameters;\n            var requiredArgsCnt = !args ? 0 : args.reduce(function (count, p) {\n                if (optionalParameters.indexOf(p.name) < 0) {\n                    return count + 1;\n                }\n                else {\n                    return count;\n                }\n            }, 0);\n            if (!this.variadic) {\n                if (requiredArgsCnt < this.required) {\n                    return false;\n                }\n                if (allArgsCnt > this.params.length) {\n                    return false;\n                }\n            }\n            else {\n                if (requiredArgsCnt < (this.required - 1)) {\n                    return false;\n                }\n            }\n            // check patterns\n            len = Math.min(requiredArgsCnt, this.arity);\n            for (var i = 0; i < len; i++) {\n                if (!this.params[i].name && !this.params[i].variadic) {\n                    if (args[i].value.eval(context).toCSS() != this.params[i].value.eval(context).toCSS()) {\n                        return false;\n                    }\n                }\n            }\n            return true;\n        }\n    });\n\n    var MixinCall = function (elements, args, index, currentFileInfo, important) {\n        this.selector = new Selector(elements);\n        this.arguments = args || [];\n        this._index = index;\n        this._fileInfo = currentFileInfo;\n        this.important = important;\n        this.allowRoot = true;\n        this.setParent(this.selector, this);\n    };\n    MixinCall.prototype = Object.assign(new Node(), {\n        type: 'MixinCall',\n        accept: function (visitor) {\n            if (this.selector) {\n                this.selector = visitor.visit(this.selector);\n            }\n            if (this.arguments.length) {\n                this.arguments = visitor.visitArray(this.arguments);\n            }\n        },\n        eval: function (context) {\n            var mixins;\n            var mixin;\n            var mixinPath;\n            var args = [];\n            var arg;\n            var argValue;\n            var rules = [];\n            var match = false;\n            var i;\n            var m;\n            var f;\n            var isRecursive;\n            var isOneFound;\n            var candidates = [];\n            var candidate;\n            var conditionResult = [];\n            var defaultResult;\n            var defFalseEitherCase = -1;\n            var defNone = 0;\n            var defTrue = 1;\n            var defFalse = 2;\n            var count;\n            var originalRuleset;\n            var noArgumentsFilter;\n            this.selector = this.selector.eval(context);\n            function calcDefGroup(mixin, mixinPath) {\n                var f, p, namespace;\n                for (f = 0; f < 2; f++) {\n                    conditionResult[f] = true;\n                    defaultFunc.value(f);\n                    for (p = 0; p < mixinPath.length && conditionResult[f]; p++) {\n                        namespace = mixinPath[p];\n                        if (namespace.matchCondition) {\n                            conditionResult[f] = conditionResult[f] && namespace.matchCondition(null, context);\n                        }\n                    }\n                    if (mixin.matchCondition) {\n                        conditionResult[f] = conditionResult[f] && mixin.matchCondition(args, context);\n                    }\n                }\n                if (conditionResult[0] || conditionResult[1]) {\n                    if (conditionResult[0] != conditionResult[1]) {\n                        return conditionResult[1] ?\n                            defTrue : defFalse;\n                    }\n                    return defNone;\n                }\n                return defFalseEitherCase;\n            }\n            for (i = 0; i < this.arguments.length; i++) {\n                arg = this.arguments[i];\n                argValue = arg.value.eval(context);\n                if (arg.expand && Array.isArray(argValue.value)) {\n                    argValue = argValue.value;\n                    for (m = 0; m < argValue.length; m++) {\n                        args.push({ value: argValue[m] });\n                    }\n                }\n                else {\n                    args.push({ name: arg.name, value: argValue });\n                }\n            }\n            noArgumentsFilter = function (rule) { return rule.matchArgs(null, context); };\n            for (i = 0; i < context.frames.length; i++) {\n                if ((mixins = context.frames[i].find(this.selector, null, noArgumentsFilter)).length > 0) {\n                    isOneFound = true;\n                    // To make `default()` function independent of definition order we have two \"subpasses\" here.\n                    // At first we evaluate each guard *twice* (with `default() == true` and `default() == false`),\n                    // and build candidate list with corresponding flags. Then, when we know all possible matches,\n                    // we make a final decision.\n                    for (m = 0; m < mixins.length; m++) {\n                        mixin = mixins[m].rule;\n                        mixinPath = mixins[m].path;\n                        isRecursive = false;\n                        for (f = 0; f < context.frames.length; f++) {\n                            if ((!(mixin instanceof Definition)) && mixin === (context.frames[f].originalRuleset || context.frames[f])) {\n                                isRecursive = true;\n                                break;\n                            }\n                        }\n                        if (isRecursive) {\n                            continue;\n                        }\n                        if (mixin.matchArgs(args, context)) {\n                            candidate = { mixin: mixin, group: calcDefGroup(mixin, mixinPath) };\n                            if (candidate.group !== defFalseEitherCase) {\n                                candidates.push(candidate);\n                            }\n                            match = true;\n                        }\n                    }\n                    defaultFunc.reset();\n                    count = [0, 0, 0];\n                    for (m = 0; m < candidates.length; m++) {\n                        count[candidates[m].group]++;\n                    }\n                    if (count[defNone] > 0) {\n                        defaultResult = defFalse;\n                    }\n                    else {\n                        defaultResult = defTrue;\n                        if ((count[defTrue] + count[defFalse]) > 1) {\n                            throw { type: 'Runtime',\n                                message: \"Ambiguous use of `default()` found when matching for `\" + this.format(args) + \"`\",\n                                index: this.getIndex(), filename: this.fileInfo().filename };\n                        }\n                    }\n                    for (m = 0; m < candidates.length; m++) {\n                        candidate = candidates[m].group;\n                        if ((candidate === defNone) || (candidate === defaultResult)) {\n                            try {\n                                mixin = candidates[m].mixin;\n                                if (!(mixin instanceof Definition)) {\n                                    originalRuleset = mixin.originalRuleset || mixin;\n                                    mixin = new Definition('', [], mixin.rules, null, false, null, originalRuleset.visibilityInfo());\n                                    mixin.originalRuleset = originalRuleset;\n                                }\n                                var newRules = mixin.evalCall(context, args, this.important).rules;\n                                this._setVisibilityToReplacement(newRules);\n                                Array.prototype.push.apply(rules, newRules);\n                            }\n                            catch (e) {\n                                throw { message: e.message, index: this.getIndex(), filename: this.fileInfo().filename, stack: e.stack };\n                            }\n                        }\n                    }\n                    if (match) {\n                        return rules;\n                    }\n                }\n            }\n            if (isOneFound) {\n                throw { type: 'Runtime',\n                    message: \"No matching definition was found for `\" + this.format(args) + \"`\",\n                    index: this.getIndex(), filename: this.fileInfo().filename };\n            }\n            else {\n                throw { type: 'Name',\n                    message: this.selector.toCSS().trim() + \" is undefined\",\n                    index: this.getIndex(), filename: this.fileInfo().filename };\n            }\n        },\n        _setVisibilityToReplacement: function (replacement) {\n            var i, rule;\n            if (this.blocksVisibility()) {\n                for (i = 0; i < replacement.length; i++) {\n                    rule = replacement[i];\n                    rule.addVisibilityBlock();\n                }\n            }\n        },\n        format: function (args) {\n            return this.selector.toCSS().trim() + \"(\" + (args ? args.map(function (a) {\n                var argValue = '';\n                if (a.name) {\n                    argValue += a.name + \":\";\n                }\n                if (a.value.toCSS) {\n                    argValue += a.value.toCSS();\n                }\n                else {\n                    argValue += '???';\n                }\n                return argValue;\n            }).join(', ') : '') + \")\";\n        }\n    });\n\n    var tree = {\n        Node: Node,\n        Color: Color,\n        AtRule: AtRule,\n        DetachedRuleset: DetachedRuleset,\n        Operation: Operation,\n        Dimension: Dimension,\n        Unit: Unit,\n        Keyword: Keyword,\n        Variable: Variable,\n        Property: Property,\n        Ruleset: Ruleset,\n        Element: Element,\n        Attribute: Attribute,\n        Combinator: Combinator,\n        Selector: Selector,\n        Quoted: Quoted,\n        Expression: Expression,\n        Declaration: Declaration,\n        Call: Call,\n        URL: URL,\n        Import: Import,\n        Comment: Comment,\n        Anonymous: Anonymous,\n        Value: Value,\n        JavaScript: JavaScript,\n        Assignment: Assignment,\n        Condition: Condition,\n        Paren: Paren,\n        Media: Media,\n        UnicodeDescriptor: UnicodeDescriptor,\n        Negative: Negative,\n        Extend: Extend,\n        VariableCall: VariableCall,\n        NamespaceValue: NamespaceValue,\n        mixin: {\n            Call: MixinCall,\n            Definition: Definition\n        }\n    };\n\n    var AbstractFileManager = /** @class */ (function () {\n        function AbstractFileManager() {\n        }\n        AbstractFileManager.prototype.getPath = function (filename) {\n            var j = filename.lastIndexOf('?');\n            if (j > 0) {\n                filename = filename.slice(0, j);\n            }\n            j = filename.lastIndexOf('/');\n            if (j < 0) {\n                j = filename.lastIndexOf('\\\\');\n            }\n            if (j < 0) {\n                return '';\n            }\n            return filename.slice(0, j + 1);\n        };\n        AbstractFileManager.prototype.tryAppendExtension = function (path, ext) {\n            return /(\\.[a-z]*$)|([\\?;].*)$/.test(path) ? path : path + ext;\n        };\n        AbstractFileManager.prototype.tryAppendLessExtension = function (path) {\n            return this.tryAppendExtension(path, '.less');\n        };\n        AbstractFileManager.prototype.supportsSync = function () {\n            return false;\n        };\n        AbstractFileManager.prototype.alwaysMakePathsAbsolute = function () {\n            return false;\n        };\n        AbstractFileManager.prototype.isPathAbsolute = function (filename) {\n            return (/^(?:[a-z-]+:|\\/|\\\\|#)/i).test(filename);\n        };\n        // TODO: pull out / replace?\n        AbstractFileManager.prototype.join = function (basePath, laterPath) {\n            if (!basePath) {\n                return laterPath;\n            }\n            return basePath + laterPath;\n        };\n        AbstractFileManager.prototype.pathDiff = function (url, baseUrl) {\n            // diff between two paths to create a relative path\n            var urlParts = this.extractUrlParts(url);\n            var baseUrlParts = this.extractUrlParts(baseUrl);\n            var i;\n            var max;\n            var urlDirectories;\n            var baseUrlDirectories;\n            var diff = '';\n            if (urlParts.hostPart !== baseUrlParts.hostPart) {\n                return '';\n            }\n            max = Math.max(baseUrlParts.directories.length, urlParts.directories.length);\n            for (i = 0; i < max; i++) {\n                if (baseUrlParts.directories[i] !== urlParts.directories[i]) {\n                    break;\n                }\n            }\n            baseUrlDirectories = baseUrlParts.directories.slice(i);\n            urlDirectories = urlParts.directories.slice(i);\n            for (i = 0; i < baseUrlDirectories.length - 1; i++) {\n                diff += '../';\n            }\n            for (i = 0; i < urlDirectories.length - 1; i++) {\n                diff += urlDirectories[i] + \"/\";\n            }\n            return diff;\n        };\n        // helper function, not part of API\n        AbstractFileManager.prototype.extractUrlParts = function (url, baseUrl) {\n            // urlParts[1] = protocol://hostname/ OR /\n            // urlParts[2] = / if path relative to host base\n            // urlParts[3] = directories\n            // urlParts[4] = filename\n            // urlParts[5] = parameters\n            var urlPartsRegex = /^((?:[a-z-]+:)?\\/{2}(?:[^\\/\\?#]*\\/)|([\\/\\\\]))?((?:[^\\/\\\\\\?#]*[\\/\\\\])*)([^\\/\\\\\\?#]*)([#\\?].*)?$/i;\n            var urlParts = url.match(urlPartsRegex);\n            var returner = {};\n            var rawDirectories = [];\n            var directories = [];\n            var i;\n            var baseUrlParts;\n            if (!urlParts) {\n                throw new Error(\"Could not parse sheet href - '\" + url + \"'\");\n            }\n            // Stylesheets in IE don't always return the full path\n            if (baseUrl && (!urlParts[1] || urlParts[2])) {\n                baseUrlParts = baseUrl.match(urlPartsRegex);\n                if (!baseUrlParts) {\n                    throw new Error(\"Could not parse page url - '\" + baseUrl + \"'\");\n                }\n                urlParts[1] = urlParts[1] || baseUrlParts[1] || '';\n                if (!urlParts[2]) {\n                    urlParts[3] = baseUrlParts[3] + urlParts[3];\n                }\n            }\n            if (urlParts[3]) {\n                rawDirectories = urlParts[3].replace(/\\\\/g, '/').split('/');\n                // collapse '..' and skip '.'\n                for (i = 0; i < rawDirectories.length; i++) {\n                    if (rawDirectories[i] === '..') {\n                        directories.pop();\n                    }\n                    else if (rawDirectories[i] !== '.') {\n                        directories.push(rawDirectories[i]);\n                    }\n                }\n            }\n            returner.hostPart = urlParts[1];\n            returner.directories = directories;\n            returner.rawPath = (urlParts[1] || '') + rawDirectories.join('/');\n            returner.path = (urlParts[1] || '') + directories.join('/');\n            returner.filename = urlParts[4];\n            returner.fileUrl = returner.path + (urlParts[4] || '');\n            returner.url = returner.fileUrl + (urlParts[5] || '');\n            return returner;\n        };\n        return AbstractFileManager;\n    }());\n\n    var AbstractPluginLoader = /** @class */ (function () {\n        function AbstractPluginLoader() {\n            // Implemented by Node.js plugin loader\n            this.require = function () {\n                return null;\n            };\n        }\n        AbstractPluginLoader.prototype.evalPlugin = function (contents, context, imports, pluginOptions, fileInfo) {\n            var loader, registry, pluginObj, localModule, pluginManager, filename, result;\n            pluginManager = context.pluginManager;\n            if (fileInfo) {\n                if (typeof fileInfo === 'string') {\n                    filename = fileInfo;\n                }\n                else {\n                    filename = fileInfo.filename;\n                }\n            }\n            var shortname = (new this.less.FileManager()).extractUrlParts(filename).filename;\n            if (filename) {\n                pluginObj = pluginManager.get(filename);\n                if (pluginObj) {\n                    result = this.trySetOptions(pluginObj, filename, shortname, pluginOptions);\n                    if (result) {\n                        return result;\n                    }\n                    try {\n                        if (pluginObj.use) {\n                            pluginObj.use.call(this.context, pluginObj);\n                        }\n                    }\n                    catch (e) {\n                        e.message = e.message || 'Error during @plugin call';\n                        return new LessError(e, imports, filename);\n                    }\n                    return pluginObj;\n                }\n            }\n            localModule = {\n                exports: {},\n                pluginManager: pluginManager,\n                fileInfo: fileInfo\n            };\n            registry = functionRegistry.create();\n            var registerPlugin = function (obj) {\n                pluginObj = obj;\n            };\n            try {\n                loader = new Function('module', 'require', 'registerPlugin', 'functions', 'tree', 'less', 'fileInfo', contents);\n                loader(localModule, this.require(filename), registerPlugin, registry, this.less.tree, this.less, fileInfo);\n            }\n            catch (e) {\n                return new LessError(e, imports, filename);\n            }\n            if (!pluginObj) {\n                pluginObj = localModule.exports;\n            }\n            pluginObj = this.validatePlugin(pluginObj, filename, shortname);\n            if (pluginObj instanceof LessError) {\n                return pluginObj;\n            }\n            if (pluginObj) {\n                pluginObj.imports = imports;\n                pluginObj.filename = filename;\n                // For < 3.x (or unspecified minVersion) - setOptions() before install()\n                if (!pluginObj.minVersion || this.compareVersion('3.0.0', pluginObj.minVersion) < 0) {\n                    result = this.trySetOptions(pluginObj, filename, shortname, pluginOptions);\n                    if (result) {\n                        return result;\n                    }\n                }\n                // Run on first load\n                pluginManager.addPlugin(pluginObj, fileInfo.filename, registry);\n                pluginObj.functions = registry.getLocalFunctions();\n                // Need to call setOptions again because the pluginObj might have functions\n                result = this.trySetOptions(pluginObj, filename, shortname, pluginOptions);\n                if (result) {\n                    return result;\n                }\n                // Run every @plugin call\n                try {\n                    if (pluginObj.use) {\n                        pluginObj.use.call(this.context, pluginObj);\n                    }\n                }\n                catch (e) {\n                    e.message = e.message || 'Error during @plugin call';\n                    return new LessError(e, imports, filename);\n                }\n            }\n            else {\n                return new LessError({ message: 'Not a valid plugin' }, imports, filename);\n            }\n            return pluginObj;\n        };\n        AbstractPluginLoader.prototype.trySetOptions = function (plugin, filename, name, options) {\n            if (options && !plugin.setOptions) {\n                return new LessError({\n                    message: \"Options have been provided but the plugin \" + name + \" does not support any options.\"\n                });\n            }\n            try {\n                plugin.setOptions && plugin.setOptions(options);\n            }\n            catch (e) {\n                return new LessError(e);\n            }\n        };\n        AbstractPluginLoader.prototype.validatePlugin = function (plugin, filename, name) {\n            if (plugin) {\n                // support plugins being a function\n                // so that the plugin can be more usable programmatically\n                if (typeof plugin === 'function') {\n                    plugin = new plugin();\n                }\n                if (plugin.minVersion) {\n                    if (this.compareVersion(plugin.minVersion, this.less.version) < 0) {\n                        return new LessError({\n                            message: \"Plugin \" + name + \" requires version \" + this.versionToString(plugin.minVersion)\n                        });\n                    }\n                }\n                return plugin;\n            }\n            return null;\n        };\n        AbstractPluginLoader.prototype.compareVersion = function (aVersion, bVersion) {\n            if (typeof aVersion === 'string') {\n                aVersion = aVersion.match(/^(\\d+)\\.?(\\d+)?\\.?(\\d+)?/);\n                aVersion.shift();\n            }\n            for (var i = 0; i < aVersion.length; i++) {\n                if (aVersion[i] !== bVersion[i]) {\n                    return parseInt(aVersion[i]) > parseInt(bVersion[i]) ? -1 : 1;\n                }\n            }\n            return 0;\n        };\n        AbstractPluginLoader.prototype.versionToString = function (version) {\n            var versionString = '';\n            for (var i = 0; i < version.length; i++) {\n                versionString += (versionString ? '.' : '') + version[i];\n            }\n            return versionString;\n        };\n        AbstractPluginLoader.prototype.printUsage = function (plugins) {\n            for (var i = 0; i < plugins.length; i++) {\n                var plugin = plugins[i];\n                if (plugin.printUsage) {\n                    plugin.printUsage();\n                }\n            }\n        };\n        return AbstractPluginLoader;\n    }());\n\n    var _visitArgs = { visitDeeper: true };\n    var _hasIndexed = false;\n    function _noop(node) {\n        return node;\n    }\n    function indexNodeTypes(parent, ticker) {\n        // add .typeIndex to tree node types for lookup table\n        var key, child;\n        for (key in parent) {\n            /* eslint guard-for-in: 0 */\n            child = parent[key];\n            switch (typeof child) {\n                case 'function':\n                    // ignore bound functions directly on tree which do not have a prototype\n                    // or aren't nodes\n                    if (child.prototype && child.prototype.type) {\n                        child.prototype.typeIndex = ticker++;\n                    }\n                    break;\n                case 'object':\n                    ticker = indexNodeTypes(child, ticker);\n                    break;\n            }\n        }\n        return ticker;\n    }\n    var Visitor = /** @class */ (function () {\n        function Visitor(implementation) {\n            this._implementation = implementation;\n            this._visitInCache = {};\n            this._visitOutCache = {};\n            if (!_hasIndexed) {\n                indexNodeTypes(tree, 1);\n                _hasIndexed = true;\n            }\n        }\n        Visitor.prototype.visit = function (node) {\n            if (!node) {\n                return node;\n            }\n            var nodeTypeIndex = node.typeIndex;\n            if (!nodeTypeIndex) {\n                // MixinCall args aren't a node type?\n                if (node.value && node.value.typeIndex) {\n                    this.visit(node.value);\n                }\n                return node;\n            }\n            var impl = this._implementation;\n            var func = this._visitInCache[nodeTypeIndex];\n            var funcOut = this._visitOutCache[nodeTypeIndex];\n            var visitArgs = _visitArgs;\n            var fnName;\n            visitArgs.visitDeeper = true;\n            if (!func) {\n                fnName = \"visit\" + node.type;\n                func = impl[fnName] || _noop;\n                funcOut = impl[fnName + \"Out\"] || _noop;\n                this._visitInCache[nodeTypeIndex] = func;\n                this._visitOutCache[nodeTypeIndex] = funcOut;\n            }\n            if (func !== _noop) {\n                var newNode = func.call(impl, node, visitArgs);\n                if (node && impl.isReplacing) {\n                    node = newNode;\n                }\n            }\n            if (visitArgs.visitDeeper && node) {\n                if (node.length) {\n                    for (var i = 0, cnt = node.length; i < cnt; i++) {\n                        if (node[i].accept) {\n                            node[i].accept(this);\n                        }\n                    }\n                }\n                else if (node.accept) {\n                    node.accept(this);\n                }\n            }\n            if (funcOut != _noop) {\n                funcOut.call(impl, node);\n            }\n            return node;\n        };\n        Visitor.prototype.visitArray = function (nodes, nonReplacing) {\n            if (!nodes) {\n                return nodes;\n            }\n            var cnt = nodes.length;\n            var i;\n            // Non-replacing\n            if (nonReplacing || !this._implementation.isReplacing) {\n                for (i = 0; i < cnt; i++) {\n                    this.visit(nodes[i]);\n                }\n                return nodes;\n            }\n            // Replacing\n            var out = [];\n            for (i = 0; i < cnt; i++) {\n                var evald = this.visit(nodes[i]);\n                if (evald === undefined) {\n                    continue;\n                }\n                if (!evald.splice) {\n                    out.push(evald);\n                }\n                else if (evald.length) {\n                    this.flatten(evald, out);\n                }\n            }\n            return out;\n        };\n        Visitor.prototype.flatten = function (arr, out) {\n            if (!out) {\n                out = [];\n            }\n            var cnt, i, item, nestedCnt, j, nestedItem;\n            for (i = 0, cnt = arr.length; i < cnt; i++) {\n                item = arr[i];\n                if (item === undefined) {\n                    continue;\n                }\n                if (!item.splice) {\n                    out.push(item);\n                    continue;\n                }\n                for (j = 0, nestedCnt = item.length; j < nestedCnt; j++) {\n                    nestedItem = item[j];\n                    if (nestedItem === undefined) {\n                        continue;\n                    }\n                    if (!nestedItem.splice) {\n                        out.push(nestedItem);\n                    }\n                    else if (nestedItem.length) {\n                        this.flatten(nestedItem, out);\n                    }\n                }\n            }\n            return out;\n        };\n        return Visitor;\n    }());\n\n    var ImportSequencer = /** @class */ (function () {\n        function ImportSequencer(onSequencerEmpty) {\n            this.imports = [];\n            this.variableImports = [];\n            this._onSequencerEmpty = onSequencerEmpty;\n            this._currentDepth = 0;\n        }\n        ImportSequencer.prototype.addImport = function (callback) {\n            var importSequencer = this, importItem = {\n                callback: callback,\n                args: null,\n                isReady: false\n            };\n            this.imports.push(importItem);\n            return function () {\n                importItem.args = Array.prototype.slice.call(arguments, 0);\n                importItem.isReady = true;\n                importSequencer.tryRun();\n            };\n        };\n        ImportSequencer.prototype.addVariableImport = function (callback) {\n            this.variableImports.push(callback);\n        };\n        ImportSequencer.prototype.tryRun = function () {\n            this._currentDepth++;\n            try {\n                while (true) {\n                    while (this.imports.length > 0) {\n                        var importItem = this.imports[0];\n                        if (!importItem.isReady) {\n                            return;\n                        }\n                        this.imports = this.imports.slice(1);\n                        importItem.callback.apply(null, importItem.args);\n                    }\n                    if (this.variableImports.length === 0) {\n                        break;\n                    }\n                    var variableImport = this.variableImports[0];\n                    this.variableImports = this.variableImports.slice(1);\n                    variableImport();\n                }\n            }\n            finally {\n                this._currentDepth--;\n            }\n            if (this._currentDepth === 0 && this._onSequencerEmpty) {\n                this._onSequencerEmpty();\n            }\n        };\n        return ImportSequencer;\n    }());\n\n    var ImportVisitor = function (importer, finish) {\n        this._visitor = new Visitor(this);\n        this._importer = importer;\n        this._finish = finish;\n        this.context = new contexts.Eval();\n        this.importCount = 0;\n        this.onceFileDetectionMap = {};\n        this.recursionDetector = {};\n        this._sequencer = new ImportSequencer(this._onSequencerEmpty.bind(this));\n    };\n    ImportVisitor.prototype = {\n        isReplacing: false,\n        run: function (root) {\n            try {\n                // process the contents\n                this._visitor.visit(root);\n            }\n            catch (e) {\n                this.error = e;\n            }\n            this.isFinished = true;\n            this._sequencer.tryRun();\n        },\n        _onSequencerEmpty: function () {\n            if (!this.isFinished) {\n                return;\n            }\n            this._finish(this.error);\n        },\n        visitImport: function (importNode, visitArgs) {\n            var inlineCSS = importNode.options.inline;\n            if (!importNode.css || inlineCSS) {\n                var context = new contexts.Eval(this.context, copyArray(this.context.frames));\n                var importParent = context.frames[0];\n                this.importCount++;\n                if (importNode.isVariableImport()) {\n                    this._sequencer.addVariableImport(this.processImportNode.bind(this, importNode, context, importParent));\n                }\n                else {\n                    this.processImportNode(importNode, context, importParent);\n                }\n            }\n            visitArgs.visitDeeper = false;\n        },\n        processImportNode: function (importNode, context, importParent) {\n            var evaldImportNode;\n            var inlineCSS = importNode.options.inline;\n            try {\n                evaldImportNode = importNode.evalForImport(context);\n            }\n            catch (e) {\n                if (!e.filename) {\n                    e.index = importNode.getIndex();\n                    e.filename = importNode.fileInfo().filename;\n                }\n                // attempt to eval properly and treat as css\n                importNode.css = true;\n                // if that fails, this error will be thrown\n                importNode.error = e;\n            }\n            if (evaldImportNode && (!evaldImportNode.css || inlineCSS)) {\n                if (evaldImportNode.options.multiple) {\n                    context.importMultiple = true;\n                }\n                // try appending if we haven't determined if it is css or not\n                var tryAppendLessExtension = evaldImportNode.css === undefined;\n                for (var i = 0; i < importParent.rules.length; i++) {\n                    if (importParent.rules[i] === importNode) {\n                        importParent.rules[i] = evaldImportNode;\n                        break;\n                    }\n                }\n                var onImported = this.onImported.bind(this, evaldImportNode, context), sequencedOnImported = this._sequencer.addImport(onImported);\n                this._importer.push(evaldImportNode.getPath(), tryAppendLessExtension, evaldImportNode.fileInfo(), evaldImportNode.options, sequencedOnImported);\n            }\n            else {\n                this.importCount--;\n                if (this.isFinished) {\n                    this._sequencer.tryRun();\n                }\n            }\n        },\n        onImported: function (importNode, context, e, root, importedAtRoot, fullPath) {\n            if (e) {\n                if (!e.filename) {\n                    e.index = importNode.getIndex();\n                    e.filename = importNode.fileInfo().filename;\n                }\n                this.error = e;\n            }\n            var importVisitor = this, inlineCSS = importNode.options.inline, isPlugin = importNode.options.isPlugin, isOptional = importNode.options.optional, duplicateImport = importedAtRoot || fullPath in importVisitor.recursionDetector;\n            if (!context.importMultiple) {\n                if (duplicateImport) {\n                    importNode.skip = true;\n                }\n                else {\n                    importNode.skip = function () {\n                        if (fullPath in importVisitor.onceFileDetectionMap) {\n                            return true;\n                        }\n                        importVisitor.onceFileDetectionMap[fullPath] = true;\n                        return false;\n                    };\n                }\n            }\n            if (!fullPath && isOptional) {\n                importNode.skip = true;\n            }\n            if (root) {\n                importNode.root = root;\n                importNode.importedFilename = fullPath;\n                if (!inlineCSS && !isPlugin && (context.importMultiple || !duplicateImport)) {\n                    importVisitor.recursionDetector[fullPath] = true;\n                    var oldContext = this.context;\n                    this.context = context;\n                    try {\n                        this._visitor.visit(root);\n                    }\n                    catch (e) {\n                        this.error = e;\n                    }\n                    this.context = oldContext;\n                }\n            }\n            importVisitor.importCount--;\n            if (importVisitor.isFinished) {\n                importVisitor._sequencer.tryRun();\n            }\n        },\n        visitDeclaration: function (declNode, visitArgs) {\n            if (declNode.value.type === 'DetachedRuleset') {\n                this.context.frames.unshift(declNode);\n            }\n            else {\n                visitArgs.visitDeeper = false;\n            }\n        },\n        visitDeclarationOut: function (declNode) {\n            if (declNode.value.type === 'DetachedRuleset') {\n                this.context.frames.shift();\n            }\n        },\n        visitAtRule: function (atRuleNode, visitArgs) {\n            this.context.frames.unshift(atRuleNode);\n        },\n        visitAtRuleOut: function (atRuleNode) {\n            this.context.frames.shift();\n        },\n        visitMixinDefinition: function (mixinDefinitionNode, visitArgs) {\n            this.context.frames.unshift(mixinDefinitionNode);\n        },\n        visitMixinDefinitionOut: function (mixinDefinitionNode) {\n            this.context.frames.shift();\n        },\n        visitRuleset: function (rulesetNode, visitArgs) {\n            this.context.frames.unshift(rulesetNode);\n        },\n        visitRulesetOut: function (rulesetNode) {\n            this.context.frames.shift();\n        },\n        visitMedia: function (mediaNode, visitArgs) {\n            this.context.frames.unshift(mediaNode.rules[0]);\n        },\n        visitMediaOut: function (mediaNode) {\n            this.context.frames.shift();\n        }\n    };\n\n    var SetTreeVisibilityVisitor = /** @class */ (function () {\n        function SetTreeVisibilityVisitor(visible) {\n            this.visible = visible;\n        }\n        SetTreeVisibilityVisitor.prototype.run = function (root) {\n            this.visit(root);\n        };\n        SetTreeVisibilityVisitor.prototype.visitArray = function (nodes) {\n            if (!nodes) {\n                return nodes;\n            }\n            var cnt = nodes.length;\n            var i;\n            for (i = 0; i < cnt; i++) {\n                this.visit(nodes[i]);\n            }\n            return nodes;\n        };\n        SetTreeVisibilityVisitor.prototype.visit = function (node) {\n            if (!node) {\n                return node;\n            }\n            if (node.constructor === Array) {\n                return this.visitArray(node);\n            }\n            if (!node.blocksVisibility || node.blocksVisibility()) {\n                return node;\n            }\n            if (this.visible) {\n                node.ensureVisibility();\n            }\n            else {\n                node.ensureInvisibility();\n            }\n            node.accept(this);\n            return node;\n        };\n        return SetTreeVisibilityVisitor;\n    }());\n\n    /* jshint loopfunc:true */\n    var ExtendFinderVisitor = /** @class */ (function () {\n        function ExtendFinderVisitor() {\n            this._visitor = new Visitor(this);\n            this.contexts = [];\n            this.allExtendsStack = [[]];\n        }\n        ExtendFinderVisitor.prototype.run = function (root) {\n            root = this._visitor.visit(root);\n            root.allExtends = this.allExtendsStack[0];\n            return root;\n        };\n        ExtendFinderVisitor.prototype.visitDeclaration = function (declNode, visitArgs) {\n            visitArgs.visitDeeper = false;\n        };\n        ExtendFinderVisitor.prototype.visitMixinDefinition = function (mixinDefinitionNode, visitArgs) {\n            visitArgs.visitDeeper = false;\n        };\n        ExtendFinderVisitor.prototype.visitRuleset = function (rulesetNode, visitArgs) {\n            if (rulesetNode.root) {\n                return;\n            }\n            var i;\n            var j;\n            var extend;\n            var allSelectorsExtendList = [];\n            var extendList;\n            // get &:extend(.a); rules which apply to all selectors in this ruleset\n            var rules = rulesetNode.rules, ruleCnt = rules ? rules.length : 0;\n            for (i = 0; i < ruleCnt; i++) {\n                if (rulesetNode.rules[i] instanceof tree.Extend) {\n                    allSelectorsExtendList.push(rules[i]);\n                    rulesetNode.extendOnEveryPath = true;\n                }\n            }\n            // now find every selector and apply the extends that apply to all extends\n            // and the ones which apply to an individual extend\n            var paths = rulesetNode.paths;\n            for (i = 0; i < paths.length; i++) {\n                var selectorPath = paths[i], selector = selectorPath[selectorPath.length - 1], selExtendList = selector.extendList;\n                extendList = selExtendList ? copyArray(selExtendList).concat(allSelectorsExtendList)\n                    : allSelectorsExtendList;\n                if (extendList) {\n                    extendList = extendList.map(function (allSelectorsExtend) {\n                        return allSelectorsExtend.clone();\n                    });\n                }\n                for (j = 0; j < extendList.length; j++) {\n                    this.foundExtends = true;\n                    extend = extendList[j];\n                    extend.findSelfSelectors(selectorPath);\n                    extend.ruleset = rulesetNode;\n                    if (j === 0) {\n                        extend.firstExtendOnThisSelectorPath = true;\n                    }\n                    this.allExtendsStack[this.allExtendsStack.length - 1].push(extend);\n                }\n            }\n            this.contexts.push(rulesetNode.selectors);\n        };\n        ExtendFinderVisitor.prototype.visitRulesetOut = function (rulesetNode) {\n            if (!rulesetNode.root) {\n                this.contexts.length = this.contexts.length - 1;\n            }\n        };\n        ExtendFinderVisitor.prototype.visitMedia = function (mediaNode, visitArgs) {\n            mediaNode.allExtends = [];\n            this.allExtendsStack.push(mediaNode.allExtends);\n        };\n        ExtendFinderVisitor.prototype.visitMediaOut = function (mediaNode) {\n            this.allExtendsStack.length = this.allExtendsStack.length - 1;\n        };\n        ExtendFinderVisitor.prototype.visitAtRule = function (atRuleNode, visitArgs) {\n            atRuleNode.allExtends = [];\n            this.allExtendsStack.push(atRuleNode.allExtends);\n        };\n        ExtendFinderVisitor.prototype.visitAtRuleOut = function (atRuleNode) {\n            this.allExtendsStack.length = this.allExtendsStack.length - 1;\n        };\n        return ExtendFinderVisitor;\n    }());\n    var ProcessExtendsVisitor = /** @class */ (function () {\n        function ProcessExtendsVisitor() {\n            this._visitor = new Visitor(this);\n        }\n        ProcessExtendsVisitor.prototype.run = function (root) {\n            var extendFinder = new ExtendFinderVisitor();\n            this.extendIndices = {};\n            extendFinder.run(root);\n            if (!extendFinder.foundExtends) {\n                return root;\n            }\n            root.allExtends = root.allExtends.concat(this.doExtendChaining(root.allExtends, root.allExtends));\n            this.allExtendsStack = [root.allExtends];\n            var newRoot = this._visitor.visit(root);\n            this.checkExtendsForNonMatched(root.allExtends);\n            return newRoot;\n        };\n        ProcessExtendsVisitor.prototype.checkExtendsForNonMatched = function (extendList) {\n            var indices = this.extendIndices;\n            extendList.filter(function (extend) {\n                return !extend.hasFoundMatches && extend.parent_ids.length == 1;\n            }).forEach(function (extend) {\n                var selector = '_unknown_';\n                try {\n                    selector = extend.selector.toCSS({});\n                }\n                catch (_) { }\n                if (!indices[extend.index + \" \" + selector]) {\n                    indices[extend.index + \" \" + selector] = true;\n                    logger$1.warn(\"extend '\" + selector + \"' has no matches\");\n                }\n            });\n        };\n        ProcessExtendsVisitor.prototype.doExtendChaining = function (extendsList, extendsListTarget, iterationCount) {\n            //\n            // chaining is different from normal extension.. if we extend an extend then we are not just copying, altering\n            // and pasting the selector we would do normally, but we are also adding an extend with the same target selector\n            // this means this new extend can then go and alter other extends\n            //\n            // this method deals with all the chaining work - without it, extend is flat and doesn't work on other extend selectors\n            // this is also the most expensive.. and a match on one selector can cause an extension of a selector we had already\n            // processed if we look at each selector at a time, as is done in visitRuleset\n            var extendIndex;\n            var targetExtendIndex;\n            var matches;\n            var extendsToAdd = [];\n            var newSelector;\n            var extendVisitor = this;\n            var selectorPath;\n            var extend;\n            var targetExtend;\n            var newExtend;\n            iterationCount = iterationCount || 0;\n            // loop through comparing every extend with every target extend.\n            // a target extend is the one on the ruleset we are looking at copy/edit/pasting in place\n            // e.g.  .a:extend(.b) {}  and .b:extend(.c) {} then the first extend extends the second one\n            // and the second is the target.\n            // the separation into two lists allows us to process a subset of chains with a bigger set, as is the\n            // case when processing media queries\n            for (extendIndex = 0; extendIndex < extendsList.length; extendIndex++) {\n                for (targetExtendIndex = 0; targetExtendIndex < extendsListTarget.length; targetExtendIndex++) {\n                    extend = extendsList[extendIndex];\n                    targetExtend = extendsListTarget[targetExtendIndex];\n                    // look for circular references\n                    if (extend.parent_ids.indexOf(targetExtend.object_id) >= 0) {\n                        continue;\n                    }\n                    // find a match in the target extends self selector (the bit before :extend)\n                    selectorPath = [targetExtend.selfSelectors[0]];\n                    matches = extendVisitor.findMatch(extend, selectorPath);\n                    if (matches.length) {\n                        extend.hasFoundMatches = true;\n                        // we found a match, so for each self selector..\n                        extend.selfSelectors.forEach(function (selfSelector) {\n                            var info = targetExtend.visibilityInfo();\n                            // process the extend as usual\n                            newSelector = extendVisitor.extendSelector(matches, selectorPath, selfSelector, extend.isVisible());\n                            // but now we create a new extend from it\n                            newExtend = new (tree.Extend)(targetExtend.selector, targetExtend.option, 0, targetExtend.fileInfo(), info);\n                            newExtend.selfSelectors = newSelector;\n                            // add the extend onto the list of extends for that selector\n                            newSelector[newSelector.length - 1].extendList = [newExtend];\n                            // record that we need to add it.\n                            extendsToAdd.push(newExtend);\n                            newExtend.ruleset = targetExtend.ruleset;\n                            // remember its parents for circular references\n                            newExtend.parent_ids = newExtend.parent_ids.concat(targetExtend.parent_ids, extend.parent_ids);\n                            // only process the selector once.. if we have :extend(.a,.b) then multiple\n                            // extends will look at the same selector path, so when extending\n                            // we know that any others will be duplicates in terms of what is added to the css\n                            if (targetExtend.firstExtendOnThisSelectorPath) {\n                                newExtend.firstExtendOnThisSelectorPath = true;\n                                targetExtend.ruleset.paths.push(newSelector);\n                            }\n                        });\n                    }\n                }\n            }\n            if (extendsToAdd.length) {\n                // try to detect circular references to stop a stack overflow.\n                // may no longer be needed.\n                this.extendChainCount++;\n                if (iterationCount > 100) {\n                    var selectorOne = '{unable to calculate}';\n                    var selectorTwo = '{unable to calculate}';\n                    try {\n                        selectorOne = extendsToAdd[0].selfSelectors[0].toCSS();\n                        selectorTwo = extendsToAdd[0].selector.toCSS();\n                    }\n                    catch (e) { }\n                    throw { message: \"extend circular reference detected. One of the circular extends is currently:\" + selectorOne + \":extend(\" + selectorTwo + \")\" };\n                }\n                // now process the new extends on the existing rules so that we can handle a extending b extending c extending\n                // d extending e...\n                return extendsToAdd.concat(extendVisitor.doExtendChaining(extendsToAdd, extendsListTarget, iterationCount + 1));\n            }\n            else {\n                return extendsToAdd;\n            }\n        };\n        ProcessExtendsVisitor.prototype.visitDeclaration = function (ruleNode, visitArgs) {\n            visitArgs.visitDeeper = false;\n        };\n        ProcessExtendsVisitor.prototype.visitMixinDefinition = function (mixinDefinitionNode, visitArgs) {\n            visitArgs.visitDeeper = false;\n        };\n        ProcessExtendsVisitor.prototype.visitSelector = function (selectorNode, visitArgs) {\n            visitArgs.visitDeeper = false;\n        };\n        ProcessExtendsVisitor.prototype.visitRuleset = function (rulesetNode, visitArgs) {\n            if (rulesetNode.root) {\n                return;\n            }\n            var matches;\n            var pathIndex;\n            var extendIndex;\n            var allExtends = this.allExtendsStack[this.allExtendsStack.length - 1];\n            var selectorsToAdd = [];\n            var extendVisitor = this;\n            var selectorPath;\n            // look at each selector path in the ruleset, find any extend matches and then copy, find and replace\n            for (extendIndex = 0; extendIndex < allExtends.length; extendIndex++) {\n                for (pathIndex = 0; pathIndex < rulesetNode.paths.length; pathIndex++) {\n                    selectorPath = rulesetNode.paths[pathIndex];\n                    // extending extends happens initially, before the main pass\n                    if (rulesetNode.extendOnEveryPath) {\n                        continue;\n                    }\n                    var extendList = selectorPath[selectorPath.length - 1].extendList;\n                    if (extendList && extendList.length) {\n                        continue;\n                    }\n                    matches = this.findMatch(allExtends[extendIndex], selectorPath);\n                    if (matches.length) {\n                        allExtends[extendIndex].hasFoundMatches = true;\n                        allExtends[extendIndex].selfSelectors.forEach(function (selfSelector) {\n                            var extendedSelectors;\n                            extendedSelectors = extendVisitor.extendSelector(matches, selectorPath, selfSelector, allExtends[extendIndex].isVisible());\n                            selectorsToAdd.push(extendedSelectors);\n                        });\n                    }\n                }\n            }\n            rulesetNode.paths = rulesetNode.paths.concat(selectorsToAdd);\n        };\n        ProcessExtendsVisitor.prototype.findMatch = function (extend, haystackSelectorPath) {\n            //\n            // look through the haystack selector path to try and find the needle - extend.selector\n            // returns an array of selector matches that can then be replaced\n            //\n            var haystackSelectorIndex;\n            var hackstackSelector;\n            var hackstackElementIndex;\n            var haystackElement;\n            var targetCombinator;\n            var i;\n            var extendVisitor = this;\n            var needleElements = extend.selector.elements;\n            var potentialMatches = [];\n            var potentialMatch;\n            var matches = [];\n            // loop through the haystack elements\n            for (haystackSelectorIndex = 0; haystackSelectorIndex < haystackSelectorPath.length; haystackSelectorIndex++) {\n                hackstackSelector = haystackSelectorPath[haystackSelectorIndex];\n                for (hackstackElementIndex = 0; hackstackElementIndex < hackstackSelector.elements.length; hackstackElementIndex++) {\n                    haystackElement = hackstackSelector.elements[hackstackElementIndex];\n                    // if we allow elements before our match we can add a potential match every time. otherwise only at the first element.\n                    if (extend.allowBefore || (haystackSelectorIndex === 0 && hackstackElementIndex === 0)) {\n                        potentialMatches.push({ pathIndex: haystackSelectorIndex, index: hackstackElementIndex, matched: 0,\n                            initialCombinator: haystackElement.combinator });\n                    }\n                    for (i = 0; i < potentialMatches.length; i++) {\n                        potentialMatch = potentialMatches[i];\n                        // selectors add \" \" onto the first element. When we use & it joins the selectors together, but if we don't\n                        // then each selector in haystackSelectorPath has a space before it added in the toCSS phase. so we need to\n                        // work out what the resulting combinator will be\n                        targetCombinator = haystackElement.combinator.value;\n                        if (targetCombinator === '' && hackstackElementIndex === 0) {\n                            targetCombinator = ' ';\n                        }\n                        // if we don't match, null our match to indicate failure\n                        if (!extendVisitor.isElementValuesEqual(needleElements[potentialMatch.matched].value, haystackElement.value) ||\n                            (potentialMatch.matched > 0 && needleElements[potentialMatch.matched].combinator.value !== targetCombinator)) {\n                            potentialMatch = null;\n                        }\n                        else {\n                            potentialMatch.matched++;\n                        }\n                        // if we are still valid and have finished, test whether we have elements after and whether these are allowed\n                        if (potentialMatch) {\n                            potentialMatch.finished = potentialMatch.matched === needleElements.length;\n                            if (potentialMatch.finished &&\n                                (!extend.allowAfter &&\n                                    (hackstackElementIndex + 1 < hackstackSelector.elements.length || haystackSelectorIndex + 1 < haystackSelectorPath.length))) {\n                                potentialMatch = null;\n                            }\n                        }\n                        // if null we remove, if not, we are still valid, so either push as a valid match or continue\n                        if (potentialMatch) {\n                            if (potentialMatch.finished) {\n                                potentialMatch.length = needleElements.length;\n                                potentialMatch.endPathIndex = haystackSelectorIndex;\n                                potentialMatch.endPathElementIndex = hackstackElementIndex + 1; // index after end of match\n                                potentialMatches.length = 0; // we don't allow matches to overlap, so start matching again\n                                matches.push(potentialMatch);\n                            }\n                        }\n                        else {\n                            potentialMatches.splice(i, 1);\n                            i--;\n                        }\n                    }\n                }\n            }\n            return matches;\n        };\n        ProcessExtendsVisitor.prototype.isElementValuesEqual = function (elementValue1, elementValue2) {\n            if (typeof elementValue1 === 'string' || typeof elementValue2 === 'string') {\n                return elementValue1 === elementValue2;\n            }\n            if (elementValue1 instanceof tree.Attribute) {\n                if (elementValue1.op !== elementValue2.op || elementValue1.key !== elementValue2.key) {\n                    return false;\n                }\n                if (!elementValue1.value || !elementValue2.value) {\n                    if (elementValue1.value || elementValue2.value) {\n                        return false;\n                    }\n                    return true;\n                }\n                elementValue1 = elementValue1.value.value || elementValue1.value;\n                elementValue2 = elementValue2.value.value || elementValue2.value;\n                return elementValue1 === elementValue2;\n            }\n            elementValue1 = elementValue1.value;\n            elementValue2 = elementValue2.value;\n            if (elementValue1 instanceof tree.Selector) {\n                if (!(elementValue2 instanceof tree.Selector) || elementValue1.elements.length !== elementValue2.elements.length) {\n                    return false;\n                }\n                for (var i = 0; i < elementValue1.elements.length; i++) {\n                    if (elementValue1.elements[i].combinator.value !== elementValue2.elements[i].combinator.value) {\n                        if (i !== 0 || (elementValue1.elements[i].combinator.value || ' ') !== (elementValue2.elements[i].combinator.value || ' ')) {\n                            return false;\n                        }\n                    }\n                    if (!this.isElementValuesEqual(elementValue1.elements[i].value, elementValue2.elements[i].value)) {\n                        return false;\n                    }\n                }\n                return true;\n            }\n            return false;\n        };\n        ProcessExtendsVisitor.prototype.extendSelector = function (matches, selectorPath, replacementSelector, isVisible) {\n            // for a set of matches, replace each match with the replacement selector\n            var currentSelectorPathIndex = 0, currentSelectorPathElementIndex = 0, path = [], matchIndex, selector, firstElement, match, newElements;\n            for (matchIndex = 0; matchIndex < matches.length; matchIndex++) {\n                match = matches[matchIndex];\n                selector = selectorPath[match.pathIndex];\n                firstElement = new tree.Element(match.initialCombinator, replacementSelector.elements[0].value, replacementSelector.elements[0].isVariable, replacementSelector.elements[0].getIndex(), replacementSelector.elements[0].fileInfo());\n                if (match.pathIndex > currentSelectorPathIndex && currentSelectorPathElementIndex > 0) {\n                    path[path.length - 1].elements = path[path.length - 1]\n                        .elements.concat(selectorPath[currentSelectorPathIndex].elements.slice(currentSelectorPathElementIndex));\n                    currentSelectorPathElementIndex = 0;\n                    currentSelectorPathIndex++;\n                }\n                newElements = selector.elements\n                    .slice(currentSelectorPathElementIndex, match.index)\n                    .concat([firstElement])\n                    .concat(replacementSelector.elements.slice(1));\n                if (currentSelectorPathIndex === match.pathIndex && matchIndex > 0) {\n                    path[path.length - 1].elements =\n                        path[path.length - 1].elements.concat(newElements);\n                }\n                else {\n                    path = path.concat(selectorPath.slice(currentSelectorPathIndex, match.pathIndex));\n                    path.push(new tree.Selector(newElements));\n                }\n                currentSelectorPathIndex = match.endPathIndex;\n                currentSelectorPathElementIndex = match.endPathElementIndex;\n                if (currentSelectorPathElementIndex >= selectorPath[currentSelectorPathIndex].elements.length) {\n                    currentSelectorPathElementIndex = 0;\n                    currentSelectorPathIndex++;\n                }\n            }\n            if (currentSelectorPathIndex < selectorPath.length && currentSelectorPathElementIndex > 0) {\n                path[path.length - 1].elements = path[path.length - 1]\n                    .elements.concat(selectorPath[currentSelectorPathIndex].elements.slice(currentSelectorPathElementIndex));\n                currentSelectorPathIndex++;\n            }\n            path = path.concat(selectorPath.slice(currentSelectorPathIndex, selectorPath.length));\n            path = path.map(function (currentValue) {\n                // we can re-use elements here, because the visibility property matters only for selectors\n                var derived = currentValue.createDerived(currentValue.elements);\n                if (isVisible) {\n                    derived.ensureVisibility();\n                }\n                else {\n                    derived.ensureInvisibility();\n                }\n                return derived;\n            });\n            return path;\n        };\n        ProcessExtendsVisitor.prototype.visitMedia = function (mediaNode, visitArgs) {\n            var newAllExtends = mediaNode.allExtends.concat(this.allExtendsStack[this.allExtendsStack.length - 1]);\n            newAllExtends = newAllExtends.concat(this.doExtendChaining(newAllExtends, mediaNode.allExtends));\n            this.allExtendsStack.push(newAllExtends);\n        };\n        ProcessExtendsVisitor.prototype.visitMediaOut = function (mediaNode) {\n            var lastIndex = this.allExtendsStack.length - 1;\n            this.allExtendsStack.length = lastIndex;\n        };\n        ProcessExtendsVisitor.prototype.visitAtRule = function (atRuleNode, visitArgs) {\n            var newAllExtends = atRuleNode.allExtends.concat(this.allExtendsStack[this.allExtendsStack.length - 1]);\n            newAllExtends = newAllExtends.concat(this.doExtendChaining(newAllExtends, atRuleNode.allExtends));\n            this.allExtendsStack.push(newAllExtends);\n        };\n        ProcessExtendsVisitor.prototype.visitAtRuleOut = function (atRuleNode) {\n            var lastIndex = this.allExtendsStack.length - 1;\n            this.allExtendsStack.length = lastIndex;\n        };\n        return ProcessExtendsVisitor;\n    }());\n\n    var JoinSelectorVisitor = /** @class */ (function () {\n        function JoinSelectorVisitor() {\n            this.contexts = [[]];\n            this._visitor = new Visitor(this);\n        }\n        JoinSelectorVisitor.prototype.run = function (root) {\n            return this._visitor.visit(root);\n        };\n        JoinSelectorVisitor.prototype.visitDeclaration = function (declNode, visitArgs) {\n            visitArgs.visitDeeper = false;\n        };\n        JoinSelectorVisitor.prototype.visitMixinDefinition = function (mixinDefinitionNode, visitArgs) {\n            visitArgs.visitDeeper = false;\n        };\n        JoinSelectorVisitor.prototype.visitRuleset = function (rulesetNode, visitArgs) {\n            var context = this.contexts[this.contexts.length - 1];\n            var paths = [];\n            var selectors;\n            this.contexts.push(paths);\n            if (!rulesetNode.root) {\n                selectors = rulesetNode.selectors;\n                if (selectors) {\n                    selectors = selectors.filter(function (selector) { return selector.getIsOutput(); });\n                    rulesetNode.selectors = selectors.length ? selectors : (selectors = null);\n                    if (selectors) {\n                        rulesetNode.joinSelectors(paths, context, selectors);\n                    }\n                }\n                if (!selectors) {\n                    rulesetNode.rules = null;\n                }\n                rulesetNode.paths = paths;\n            }\n        };\n        JoinSelectorVisitor.prototype.visitRulesetOut = function (rulesetNode) {\n            this.contexts.length = this.contexts.length - 1;\n        };\n        JoinSelectorVisitor.prototype.visitMedia = function (mediaNode, visitArgs) {\n            var context = this.contexts[this.contexts.length - 1];\n            mediaNode.rules[0].root = (context.length === 0 || context[0].multiMedia);\n        };\n        JoinSelectorVisitor.prototype.visitAtRule = function (atRuleNode, visitArgs) {\n            var context = this.contexts[this.contexts.length - 1];\n            if (atRuleNode.rules && atRuleNode.rules.length) {\n                atRuleNode.rules[0].root = (atRuleNode.isRooted || context.length === 0 || null);\n            }\n        };\n        return JoinSelectorVisitor;\n    }());\n\n    var CSSVisitorUtils = /** @class */ (function () {\n        function CSSVisitorUtils(context) {\n            this._visitor = new Visitor(this);\n            this._context = context;\n        }\n        CSSVisitorUtils.prototype.containsSilentNonBlockedChild = function (bodyRules) {\n            var rule;\n            if (!bodyRules) {\n                return false;\n            }\n            for (var r = 0; r < bodyRules.length; r++) {\n                rule = bodyRules[r];\n                if (rule.isSilent && rule.isSilent(this._context) && !rule.blocksVisibility()) {\n                    // the atrule contains something that was referenced (likely by extend)\n                    // therefore it needs to be shown in output too\n                    return true;\n                }\n            }\n            return false;\n        };\n        CSSVisitorUtils.prototype.keepOnlyVisibleChilds = function (owner) {\n            if (owner && owner.rules) {\n                owner.rules = owner.rules.filter(function (thing) { return thing.isVisible(); });\n            }\n        };\n        CSSVisitorUtils.prototype.isEmpty = function (owner) {\n            return (owner && owner.rules)\n                ? (owner.rules.length === 0) : true;\n        };\n        CSSVisitorUtils.prototype.hasVisibleSelector = function (rulesetNode) {\n            return (rulesetNode && rulesetNode.paths)\n                ? (rulesetNode.paths.length > 0) : false;\n        };\n        CSSVisitorUtils.prototype.resolveVisibility = function (node, originalRules) {\n            if (!node.blocksVisibility()) {\n                if (this.isEmpty(node) && !this.containsSilentNonBlockedChild(originalRules)) {\n                    return;\n                }\n                return node;\n            }\n            var compiledRulesBody = node.rules[0];\n            this.keepOnlyVisibleChilds(compiledRulesBody);\n            if (this.isEmpty(compiledRulesBody)) {\n                return;\n            }\n            node.ensureVisibility();\n            node.removeVisibilityBlock();\n            return node;\n        };\n        CSSVisitorUtils.prototype.isVisibleRuleset = function (rulesetNode) {\n            if (rulesetNode.firstRoot) {\n                return true;\n            }\n            if (this.isEmpty(rulesetNode)) {\n                return false;\n            }\n            if (!rulesetNode.root && !this.hasVisibleSelector(rulesetNode)) {\n                return false;\n            }\n            return true;\n        };\n        return CSSVisitorUtils;\n    }());\n    var ToCSSVisitor = function (context) {\n        this._visitor = new Visitor(this);\n        this._context = context;\n        this.utils = new CSSVisitorUtils(context);\n    };\n    ToCSSVisitor.prototype = {\n        isReplacing: true,\n        run: function (root) {\n            return this._visitor.visit(root);\n        },\n        visitDeclaration: function (declNode, visitArgs) {\n            if (declNode.blocksVisibility() || declNode.variable) {\n                return;\n            }\n            return declNode;\n        },\n        visitMixinDefinition: function (mixinNode, visitArgs) {\n            // mixin definitions do not get eval'd - this means they keep state\n            // so we have to clear that state here so it isn't used if toCSS is called twice\n            mixinNode.frames = [];\n        },\n        visitExtend: function (extendNode, visitArgs) {\n        },\n        visitComment: function (commentNode, visitArgs) {\n            if (commentNode.blocksVisibility() || commentNode.isSilent(this._context)) {\n                return;\n            }\n            return commentNode;\n        },\n        visitMedia: function (mediaNode, visitArgs) {\n            var originalRules = mediaNode.rules[0].rules;\n            mediaNode.accept(this._visitor);\n            visitArgs.visitDeeper = false;\n            return this.utils.resolveVisibility(mediaNode, originalRules);\n        },\n        visitImport: function (importNode, visitArgs) {\n            if (importNode.blocksVisibility()) {\n                return;\n            }\n            return importNode;\n        },\n        visitAtRule: function (atRuleNode, visitArgs) {\n            if (atRuleNode.rules && atRuleNode.rules.length) {\n                return this.visitAtRuleWithBody(atRuleNode, visitArgs);\n            }\n            else {\n                return this.visitAtRuleWithoutBody(atRuleNode, visitArgs);\n            }\n        },\n        visitAnonymous: function (anonymousNode, visitArgs) {\n            if (!anonymousNode.blocksVisibility()) {\n                anonymousNode.accept(this._visitor);\n                return anonymousNode;\n            }\n        },\n        visitAtRuleWithBody: function (atRuleNode, visitArgs) {\n            // if there is only one nested ruleset and that one has no path, then it is\n            // just fake ruleset\n            function hasFakeRuleset(atRuleNode) {\n                var bodyRules = atRuleNode.rules;\n                return bodyRules.length === 1 && (!bodyRules[0].paths || bodyRules[0].paths.length === 0);\n            }\n            function getBodyRules(atRuleNode) {\n                var nodeRules = atRuleNode.rules;\n                if (hasFakeRuleset(atRuleNode)) {\n                    return nodeRules[0].rules;\n                }\n                return nodeRules;\n            }\n            // it is still true that it is only one ruleset in array\n            // this is last such moment\n            // process childs\n            var originalRules = getBodyRules(atRuleNode);\n            atRuleNode.accept(this._visitor);\n            visitArgs.visitDeeper = false;\n            if (!this.utils.isEmpty(atRuleNode)) {\n                this._mergeRules(atRuleNode.rules[0].rules);\n            }\n            return this.utils.resolveVisibility(atRuleNode, originalRules);\n        },\n        visitAtRuleWithoutBody: function (atRuleNode, visitArgs) {\n            if (atRuleNode.blocksVisibility()) {\n                return;\n            }\n            if (atRuleNode.name === '@charset') {\n                // Only output the debug info together with subsequent @charset definitions\n                // a comment (or @media statement) before the actual @charset atrule would\n                // be considered illegal css as it has to be on the first line\n                if (this.charset) {\n                    if (atRuleNode.debugInfo) {\n                        var comment = new tree.Comment(\"/* \" + atRuleNode.toCSS(this._context).replace(/\\n/g, '') + \" */\\n\");\n                        comment.debugInfo = atRuleNode.debugInfo;\n                        return this._visitor.visit(comment);\n                    }\n                    return;\n                }\n                this.charset = true;\n            }\n            return atRuleNode;\n        },\n        checkValidNodes: function (rules, isRoot) {\n            if (!rules) {\n                return;\n            }\n            for (var i = 0; i < rules.length; i++) {\n                var ruleNode = rules[i];\n                if (isRoot && ruleNode instanceof tree.Declaration && !ruleNode.variable) {\n                    throw { message: 'Properties must be inside selector blocks. They cannot be in the root',\n                        index: ruleNode.getIndex(), filename: ruleNode.fileInfo() && ruleNode.fileInfo().filename };\n                }\n                if (ruleNode instanceof tree.Call) {\n                    throw { message: \"Function '\" + ruleNode.name + \"' did not return a root node\",\n                        index: ruleNode.getIndex(), filename: ruleNode.fileInfo() && ruleNode.fileInfo().filename };\n                }\n                if (ruleNode.type && !ruleNode.allowRoot) {\n                    throw { message: ruleNode.type + \" node returned by a function is not valid here\",\n                        index: ruleNode.getIndex(), filename: ruleNode.fileInfo() && ruleNode.fileInfo().filename };\n                }\n            }\n        },\n        visitRuleset: function (rulesetNode, visitArgs) {\n            // at this point rulesets are nested into each other\n            var rule;\n            var rulesets = [];\n            this.checkValidNodes(rulesetNode.rules, rulesetNode.firstRoot);\n            if (!rulesetNode.root) {\n                // remove invisible paths\n                this._compileRulesetPaths(rulesetNode);\n                // remove rulesets from this ruleset body and compile them separately\n                var nodeRules = rulesetNode.rules;\n                var nodeRuleCnt = nodeRules ? nodeRules.length : 0;\n                for (var i = 0; i < nodeRuleCnt;) {\n                    rule = nodeRules[i];\n                    if (rule && rule.rules) {\n                        // visit because we are moving them out from being a child\n                        rulesets.push(this._visitor.visit(rule));\n                        nodeRules.splice(i, 1);\n                        nodeRuleCnt--;\n                        continue;\n                    }\n                    i++;\n                }\n                // accept the visitor to remove rules and refactor itself\n                // then we can decide nogw whether we want it or not\n                // compile body\n                if (nodeRuleCnt > 0) {\n                    rulesetNode.accept(this._visitor);\n                }\n                else {\n                    rulesetNode.rules = null;\n                }\n                visitArgs.visitDeeper = false;\n            }\n            else { // if (! rulesetNode.root) {\n                rulesetNode.accept(this._visitor);\n                visitArgs.visitDeeper = false;\n            }\n            if (rulesetNode.rules) {\n                this._mergeRules(rulesetNode.rules);\n                this._removeDuplicateRules(rulesetNode.rules);\n            }\n            // now decide whether we keep the ruleset\n            if (this.utils.isVisibleRuleset(rulesetNode)) {\n                rulesetNode.ensureVisibility();\n                rulesets.splice(0, 0, rulesetNode);\n            }\n            if (rulesets.length === 1) {\n                return rulesets[0];\n            }\n            return rulesets;\n        },\n        _compileRulesetPaths: function (rulesetNode) {\n            if (rulesetNode.paths) {\n                rulesetNode.paths = rulesetNode.paths\n                    .filter(function (p) {\n                    var i;\n                    if (p[0].elements[0].combinator.value === ' ') {\n                        p[0].elements[0].combinator = new (tree.Combinator)('');\n                    }\n                    for (i = 0; i < p.length; i++) {\n                        if (p[i].isVisible() && p[i].getIsOutput()) {\n                            return true;\n                        }\n                    }\n                    return false;\n                });\n            }\n        },\n        _removeDuplicateRules: function (rules) {\n            if (!rules) {\n                return;\n            }\n            // remove duplicates\n            var ruleCache = {};\n            var ruleList;\n            var rule;\n            var i;\n            for (i = rules.length - 1; i >= 0; i--) {\n                rule = rules[i];\n                if (rule instanceof tree.Declaration) {\n                    if (!ruleCache[rule.name]) {\n                        ruleCache[rule.name] = rule;\n                    }\n                    else {\n                        ruleList = ruleCache[rule.name];\n                        if (ruleList instanceof tree.Declaration) {\n                            ruleList = ruleCache[rule.name] = [ruleCache[rule.name].toCSS(this._context)];\n                        }\n                        var ruleCSS = rule.toCSS(this._context);\n                        if (ruleList.indexOf(ruleCSS) !== -1) {\n                            rules.splice(i, 1);\n                        }\n                        else {\n                            ruleList.push(ruleCSS);\n                        }\n                    }\n                }\n            }\n        },\n        _mergeRules: function (rules) {\n            if (!rules) {\n                return;\n            }\n            var groups = {};\n            var groupsArr = [];\n            for (var i = 0; i < rules.length; i++) {\n                var rule = rules[i];\n                if (rule.merge) {\n                    var key = rule.name;\n                    groups[key] ? rules.splice(i--, 1) :\n                        groupsArr.push(groups[key] = []);\n                    groups[key].push(rule);\n                }\n            }\n            groupsArr.forEach(function (group) {\n                if (group.length > 0) {\n                    var result_1 = group[0];\n                    var space_1 = [];\n                    var comma_1 = [new tree.Expression(space_1)];\n                    group.forEach(function (rule) {\n                        if ((rule.merge === '+') && (space_1.length > 0)) {\n                            comma_1.push(new tree.Expression(space_1 = []));\n                        }\n                        space_1.push(rule.value);\n                        result_1.important = result_1.important || rule.important;\n                    });\n                    result_1.value = new tree.Value(comma_1);\n                }\n            });\n        }\n    };\n\n    var visitors = {\n        Visitor: Visitor,\n        ImportVisitor: ImportVisitor,\n        MarkVisibleSelectorsVisitor: SetTreeVisibilityVisitor,\n        ExtendVisitor: ProcessExtendsVisitor,\n        JoinSelectorVisitor: JoinSelectorVisitor,\n        ToCSSVisitor: ToCSSVisitor\n    };\n\n    // Split the input into chunks.\n    function chunker (input, fail) {\n        var len = input.length;\n        var level = 0;\n        var parenLevel = 0;\n        var lastOpening;\n        var lastOpeningParen;\n        var lastMultiComment;\n        var lastMultiCommentEndBrace;\n        var chunks = [];\n        var emitFrom = 0;\n        var chunkerCurrentIndex;\n        var currentChunkStartIndex;\n        var cc;\n        var cc2;\n        var matched;\n        function emitChunk(force) {\n            var len = chunkerCurrentIndex - emitFrom;\n            if (((len < 512) && !force) || !len) {\n                return;\n            }\n            chunks.push(input.slice(emitFrom, chunkerCurrentIndex + 1));\n            emitFrom = chunkerCurrentIndex + 1;\n        }\n        for (chunkerCurrentIndex = 0; chunkerCurrentIndex < len; chunkerCurrentIndex++) {\n            cc = input.charCodeAt(chunkerCurrentIndex);\n            if (((cc >= 97) && (cc <= 122)) || (cc < 34)) {\n                // a-z or whitespace\n                continue;\n            }\n            switch (cc) {\n                case 40: // (\n                    parenLevel++;\n                    lastOpeningParen = chunkerCurrentIndex;\n                    continue;\n                case 41: // )\n                    if (--parenLevel < 0) {\n                        return fail('missing opening `(`', chunkerCurrentIndex);\n                    }\n                    continue;\n                case 59: // ;\n                    if (!parenLevel) {\n                        emitChunk();\n                    }\n                    continue;\n                case 123: // {\n                    level++;\n                    lastOpening = chunkerCurrentIndex;\n                    continue;\n                case 125: // }\n                    if (--level < 0) {\n                        return fail('missing opening `{`', chunkerCurrentIndex);\n                    }\n                    if (!level && !parenLevel) {\n                        emitChunk();\n                    }\n                    continue;\n                case 92: // \\\n                    if (chunkerCurrentIndex < len - 1) {\n                        chunkerCurrentIndex++;\n                        continue;\n                    }\n                    return fail('unescaped `\\\\`', chunkerCurrentIndex);\n                case 34:\n                case 39:\n                case 96: // \", ' and `\n                    matched = 0;\n                    currentChunkStartIndex = chunkerCurrentIndex;\n                    for (chunkerCurrentIndex = chunkerCurrentIndex + 1; chunkerCurrentIndex < len; chunkerCurrentIndex++) {\n                        cc2 = input.charCodeAt(chunkerCurrentIndex);\n                        if (cc2 > 96) {\n                            continue;\n                        }\n                        if (cc2 == cc) {\n                            matched = 1;\n                            break;\n                        }\n                        if (cc2 == 92) { // \\\n                            if (chunkerCurrentIndex == len - 1) {\n                                return fail('unescaped `\\\\`', chunkerCurrentIndex);\n                            }\n                            chunkerCurrentIndex++;\n                        }\n                    }\n                    if (matched) {\n                        continue;\n                    }\n                    return fail(\"unmatched `\" + String.fromCharCode(cc) + \"`\", currentChunkStartIndex);\n                case 47: // /, check for comment\n                    if (parenLevel || (chunkerCurrentIndex == len - 1)) {\n                        continue;\n                    }\n                    cc2 = input.charCodeAt(chunkerCurrentIndex + 1);\n                    if (cc2 == 47) {\n                        // //, find lnfeed\n                        for (chunkerCurrentIndex = chunkerCurrentIndex + 2; chunkerCurrentIndex < len; chunkerCurrentIndex++) {\n                            cc2 = input.charCodeAt(chunkerCurrentIndex);\n                            if ((cc2 <= 13) && ((cc2 == 10) || (cc2 == 13))) {\n                                break;\n                            }\n                        }\n                    }\n                    else if (cc2 == 42) {\n                        // /*, find */\n                        lastMultiComment = currentChunkStartIndex = chunkerCurrentIndex;\n                        for (chunkerCurrentIndex = chunkerCurrentIndex + 2; chunkerCurrentIndex < len - 1; chunkerCurrentIndex++) {\n                            cc2 = input.charCodeAt(chunkerCurrentIndex);\n                            if (cc2 == 125) {\n                                lastMultiCommentEndBrace = chunkerCurrentIndex;\n                            }\n                            if (cc2 != 42) {\n                                continue;\n                            }\n                            if (input.charCodeAt(chunkerCurrentIndex + 1) == 47) {\n                                break;\n                            }\n                        }\n                        if (chunkerCurrentIndex == len - 1) {\n                            return fail('missing closing `*/`', currentChunkStartIndex);\n                        }\n                        chunkerCurrentIndex++;\n                    }\n                    continue;\n                case 42: // *, check for unmatched */\n                    if ((chunkerCurrentIndex < len - 1) && (input.charCodeAt(chunkerCurrentIndex + 1) == 47)) {\n                        return fail('unmatched `/*`', chunkerCurrentIndex);\n                    }\n                    continue;\n            }\n        }\n        if (level !== 0) {\n            if ((lastMultiComment > lastOpening) && (lastMultiCommentEndBrace > lastMultiComment)) {\n                return fail('missing closing `}` or `*/`', lastOpening);\n            }\n            else {\n                return fail('missing closing `}`', lastOpening);\n            }\n        }\n        else if (parenLevel !== 0) {\n            return fail('missing closing `)`', lastOpeningParen);\n        }\n        emitChunk(true);\n        return chunks;\n    }\n\n    var getParserInput = (function () {\n        var // Less input string\n        input;\n        var // current chunk\n        j;\n        var // holds state for backtracking\n        saveStack = [];\n        var // furthest index the parser has gone to\n        furthest;\n        var // if this is furthest we got to, this is the probably cause\n        furthestPossibleErrorMessage;\n        var // chunkified input\n        chunks;\n        var // current chunk\n        current;\n        var // index of current chunk, in `input`\n        currentPos;\n        var parserInput = {};\n        var CHARCODE_SPACE = 32;\n        var CHARCODE_TAB = 9;\n        var CHARCODE_LF = 10;\n        var CHARCODE_CR = 13;\n        var CHARCODE_PLUS = 43;\n        var CHARCODE_COMMA = 44;\n        var CHARCODE_FORWARD_SLASH = 47;\n        var CHARCODE_9 = 57;\n        function skipWhitespace(length) {\n            var oldi = parserInput.i;\n            var oldj = j;\n            var curr = parserInput.i - currentPos;\n            var endIndex = parserInput.i + current.length - curr;\n            var mem = (parserInput.i += length);\n            var inp = input;\n            var c;\n            var nextChar;\n            var comment;\n            for (; parserInput.i < endIndex; parserInput.i++) {\n                c = inp.charCodeAt(parserInput.i);\n                if (parserInput.autoCommentAbsorb && c === CHARCODE_FORWARD_SLASH) {\n                    nextChar = inp.charAt(parserInput.i + 1);\n                    if (nextChar === '/') {\n                        comment = { index: parserInput.i, isLineComment: true };\n                        var nextNewLine = inp.indexOf('\\n', parserInput.i + 2);\n                        if (nextNewLine < 0) {\n                            nextNewLine = endIndex;\n                        }\n                        parserInput.i = nextNewLine;\n                        comment.text = inp.substr(comment.index, parserInput.i - comment.index);\n                        parserInput.commentStore.push(comment);\n                        continue;\n                    }\n                    else if (nextChar === '*') {\n                        var nextStarSlash = inp.indexOf('*/', parserInput.i + 2);\n                        if (nextStarSlash >= 0) {\n                            comment = {\n                                index: parserInput.i,\n                                text: inp.substr(parserInput.i, nextStarSlash + 2 - parserInput.i),\n                                isLineComment: false\n                            };\n                            parserInput.i += comment.text.length - 1;\n                            parserInput.commentStore.push(comment);\n                            continue;\n                        }\n                    }\n                    break;\n                }\n                if ((c !== CHARCODE_SPACE) && (c !== CHARCODE_LF) && (c !== CHARCODE_TAB) && (c !== CHARCODE_CR)) {\n                    break;\n                }\n            }\n            current = current.slice(length + parserInput.i - mem + curr);\n            currentPos = parserInput.i;\n            if (!current.length) {\n                if (j < chunks.length - 1) {\n                    current = chunks[++j];\n                    skipWhitespace(0); // skip space at the beginning of a chunk\n                    return true; // things changed\n                }\n                parserInput.finished = true;\n            }\n            return oldi !== parserInput.i || oldj !== j;\n        }\n        parserInput.save = function () {\n            currentPos = parserInput.i;\n            saveStack.push({ current: current, i: parserInput.i, j: j });\n        };\n        parserInput.restore = function (possibleErrorMessage) {\n            if (parserInput.i > furthest || (parserInput.i === furthest && possibleErrorMessage && !furthestPossibleErrorMessage)) {\n                furthest = parserInput.i;\n                furthestPossibleErrorMessage = possibleErrorMessage;\n            }\n            var state = saveStack.pop();\n            current = state.current;\n            currentPos = parserInput.i = state.i;\n            j = state.j;\n        };\n        parserInput.forget = function () {\n            saveStack.pop();\n        };\n        parserInput.isWhitespace = function (offset) {\n            var pos = parserInput.i + (offset || 0);\n            var code = input.charCodeAt(pos);\n            return (code === CHARCODE_SPACE || code === CHARCODE_CR || code === CHARCODE_TAB || code === CHARCODE_LF);\n        };\n        // Specialization of $(tok)\n        parserInput.$re = function (tok) {\n            if (parserInput.i > currentPos) {\n                current = current.slice(parserInput.i - currentPos);\n                currentPos = parserInput.i;\n            }\n            var m = tok.exec(current);\n            if (!m) {\n                return null;\n            }\n            skipWhitespace(m[0].length);\n            if (typeof m === 'string') {\n                return m;\n            }\n            return m.length === 1 ? m[0] : m;\n        };\n        parserInput.$char = function (tok) {\n            if (input.charAt(parserInput.i) !== tok) {\n                return null;\n            }\n            skipWhitespace(1);\n            return tok;\n        };\n        parserInput.$str = function (tok) {\n            var tokLength = tok.length;\n            // https://jsperf.com/string-startswith/21\n            for (var i = 0; i < tokLength; i++) {\n                if (input.charAt(parserInput.i + i) !== tok.charAt(i)) {\n                    return null;\n                }\n            }\n            skipWhitespace(tokLength);\n            return tok;\n        };\n        parserInput.$quoted = function (loc) {\n            var pos = loc || parserInput.i;\n            var startChar = input.charAt(pos);\n            if (startChar !== '\\'' && startChar !== '\"') {\n                return;\n            }\n            var length = input.length;\n            var currentPosition = pos;\n            for (var i = 1; i + currentPosition < length; i++) {\n                var nextChar = input.charAt(i + currentPosition);\n                switch (nextChar) {\n                    case '\\\\':\n                        i++;\n                        continue;\n                    case '\\r':\n                    case '\\n':\n                        break;\n                    case startChar:\n                        var str = input.substr(currentPosition, i + 1);\n                        if (!loc && loc !== 0) {\n                            skipWhitespace(i + 1);\n                            return str;\n                        }\n                        return [startChar, str];\n                }\n            }\n            return null;\n        };\n        /**\n         * Permissive parsing. Ignores everything except matching {} [] () and quotes\n         * until matching token (outside of blocks)\n         */\n        parserInput.$parseUntil = function (tok) {\n            var quote = '';\n            var returnVal = null;\n            var inComment = false;\n            var blockDepth = 0;\n            var blockStack = [];\n            var parseGroups = [];\n            var length = input.length;\n            var startPos = parserInput.i;\n            var lastPos = parserInput.i;\n            var i = parserInput.i;\n            var loop = true;\n            var testChar;\n            if (typeof tok === 'string') {\n                testChar = function (char) { return char === tok; };\n            }\n            else {\n                testChar = function (char) { return tok.test(char); };\n            }\n            do {\n                var nextChar = input.charAt(i);\n                if (blockDepth === 0 && testChar(nextChar)) {\n                    returnVal = input.substr(lastPos, i - lastPos);\n                    if (returnVal) {\n                        parseGroups.push(returnVal);\n                    }\n                    else {\n                        parseGroups.push(' ');\n                    }\n                    returnVal = parseGroups;\n                    skipWhitespace(i - startPos);\n                    loop = false;\n                }\n                else {\n                    if (inComment) {\n                        if (nextChar === '*' &&\n                            input.charAt(i + 1) === '/') {\n                            i++;\n                            blockDepth--;\n                            inComment = false;\n                        }\n                        i++;\n                        continue;\n                    }\n                    switch (nextChar) {\n                        case '\\\\':\n                            i++;\n                            nextChar = input.charAt(i);\n                            parseGroups.push(input.substr(lastPos, i - lastPos + 1));\n                            lastPos = i + 1;\n                            break;\n                        case '/':\n                            if (input.charAt(i + 1) === '*') {\n                                i++;\n                                inComment = true;\n                                blockDepth++;\n                            }\n                            break;\n                        case '\\'':\n                        case '\"':\n                            quote = parserInput.$quoted(i);\n                            if (quote) {\n                                parseGroups.push(input.substr(lastPos, i - lastPos), quote);\n                                i += quote[1].length - 1;\n                                lastPos = i + 1;\n                            }\n                            else {\n                                skipWhitespace(i - startPos);\n                                returnVal = nextChar;\n                                loop = false;\n                            }\n                            break;\n                        case '{':\n                            blockStack.push('}');\n                            blockDepth++;\n                            break;\n                        case '(':\n                            blockStack.push(')');\n                            blockDepth++;\n                            break;\n                        case '[':\n                            blockStack.push(']');\n                            blockDepth++;\n                            break;\n                        case '}':\n                        case ')':\n                        case ']':\n                            var expected = blockStack.pop();\n                            if (nextChar === expected) {\n                                blockDepth--;\n                            }\n                            else {\n                                // move the parser to the error and return expected\n                                skipWhitespace(i - startPos);\n                                returnVal = expected;\n                                loop = false;\n                            }\n                    }\n                    i++;\n                    if (i > length) {\n                        loop = false;\n                    }\n                }\n            } while (loop);\n            return returnVal ? returnVal : null;\n        };\n        parserInput.autoCommentAbsorb = true;\n        parserInput.commentStore = [];\n        parserInput.finished = false;\n        // Same as $(), but don't change the state of the parser,\n        // just return the match.\n        parserInput.peek = function (tok) {\n            if (typeof tok === 'string') {\n                // https://jsperf.com/string-startswith/21\n                for (var i = 0; i < tok.length; i++) {\n                    if (input.charAt(parserInput.i + i) !== tok.charAt(i)) {\n                        return false;\n                    }\n                }\n                return true;\n            }\n            else {\n                return tok.test(current);\n            }\n        };\n        // Specialization of peek()\n        // TODO remove or change some currentChar calls to peekChar\n        parserInput.peekChar = function (tok) { return input.charAt(parserInput.i) === tok; };\n        parserInput.currentChar = function () { return input.charAt(parserInput.i); };\n        parserInput.prevChar = function () { return input.charAt(parserInput.i - 1); };\n        parserInput.getInput = function () { return input; };\n        parserInput.peekNotNumeric = function () {\n            var c = input.charCodeAt(parserInput.i);\n            // Is the first char of the dimension 0-9, '.', '+' or '-'\n            return (c > CHARCODE_9 || c < CHARCODE_PLUS) || c === CHARCODE_FORWARD_SLASH || c === CHARCODE_COMMA;\n        };\n        parserInput.start = function (str, chunkInput, failFunction) {\n            input = str;\n            parserInput.i = j = currentPos = furthest = 0;\n            // chunking apparently makes things quicker (but my tests indicate\n            // it might actually make things slower in node at least)\n            // and it is a non-perfect parse - it can't recognise\n            // unquoted urls, meaning it can't distinguish comments\n            // meaning comments with quotes or {}() in them get 'counted'\n            // and then lead to parse errors.\n            // In addition if the chunking chunks in the wrong place we might\n            // not be able to parse a parser statement in one go\n            // this is officially deprecated but can be switched on via an option\n            // in the case it causes too much performance issues.\n            if (chunkInput) {\n                chunks = chunker(str, failFunction);\n            }\n            else {\n                chunks = [str];\n            }\n            current = chunks[0];\n            skipWhitespace(0);\n        };\n        parserInput.end = function () {\n            var message;\n            var isFinished = parserInput.i >= input.length;\n            if (parserInput.i < furthest) {\n                message = furthestPossibleErrorMessage;\n                parserInput.i = furthest;\n            }\n            return {\n                isFinished: isFinished,\n                furthest: parserInput.i,\n                furthestPossibleErrorMessage: message,\n                furthestReachedEnd: parserInput.i >= input.length - 1,\n                furthestChar: input[parserInput.i]\n            };\n        };\n        return parserInput;\n    });\n\n    //\n    // less.js - parser\n    //\n    //    A relatively straight-forward predictive parser.\n    //    There is no tokenization/lexing stage, the input is parsed\n    //    in one sweep.\n    //\n    //    To make the parser fast enough to run in the browser, several\n    //    optimization had to be made:\n    //\n    //    - Matching and slicing on a huge input is often cause of slowdowns.\n    //      The solution is to chunkify the input into smaller strings.\n    //      The chunks are stored in the `chunks` var,\n    //      `j` holds the current chunk index, and `currentPos` holds\n    //      the index of the current chunk in relation to `input`.\n    //      This gives us an almost 4x speed-up.\n    //\n    //    - In many cases, we don't need to match individual tokens;\n    //      for example, if a value doesn't hold any variables, operations\n    //      or dynamic references, the parser can effectively 'skip' it,\n    //      treating it as a literal.\n    //      An example would be '1px solid #000' - which evaluates to itself,\n    //      we don't need to know what the individual components are.\n    //      The drawback, of course is that you don't get the benefits of\n    //      syntax-checking on the CSS. This gives us a 50% speed-up in the parser,\n    //      and a smaller speed-up in the code-gen.\n    //\n    //\n    //    Token matching is done with the `$` function, which either takes\n    //    a terminal string or regexp, or a non-terminal function to call.\n    //    It also takes care of moving all the indices forwards.\n    //\n    var Parser = function Parser(context, imports, fileInfo) {\n        var parsers;\n        var parserInput = getParserInput();\n        function error(msg, type) {\n            throw new LessError({\n                index: parserInput.i,\n                filename: fileInfo.filename,\n                type: type || 'Syntax',\n                message: msg\n            }, imports);\n        }\n        function expect(arg, msg) {\n            // some older browsers return typeof 'function' for RegExp\n            var result = (arg instanceof Function) ? arg.call(parsers) : parserInput.$re(arg);\n            if (result) {\n                return result;\n            }\n            error(msg || (typeof arg === 'string'\n                ? \"expected '\" + arg + \"' got '\" + parserInput.currentChar() + \"'\"\n                : 'unexpected token'));\n        }\n        // Specialization of expect()\n        function expectChar(arg, msg) {\n            if (parserInput.$char(arg)) {\n                return arg;\n            }\n            error(msg || \"expected '\" + arg + \"' got '\" + parserInput.currentChar() + \"'\");\n        }\n        function getDebugInfo(index) {\n            var filename = fileInfo.filename;\n            return {\n                lineNumber: getLocation(index, parserInput.getInput()).line + 1,\n                fileName: filename\n            };\n        }\n        /**\n         *  Used after initial parsing to create nodes on the fly\n         *\n         *  @param {String} str          - string to parse\n         *  @param {Array}  parseList    - array of parsers to run input through e.g. [\"value\", \"important\"]\n         *  @param {Number} currentIndex - start number to begin indexing\n         *  @param {Object} fileInfo     - fileInfo to attach to created nodes\n         */\n        function parseNode(str, parseList, currentIndex, fileInfo, callback) {\n            var result;\n            var returnNodes = [];\n            var parser = parserInput;\n            try {\n                parser.start(str, false, function fail(msg, index) {\n                    callback({\n                        message: msg,\n                        index: index + currentIndex\n                    });\n                });\n                for (var x = 0, p = void 0, i = void 0; (p = parseList[x]); x++) {\n                    i = parser.i;\n                    result = parsers[p]();\n                    if (result) {\n                        try {\n                            result._index = i + currentIndex;\n                            result._fileInfo = fileInfo;\n                        }\n                        catch (e) { }\n                        returnNodes.push(result);\n                    }\n                    else {\n                        returnNodes.push(null);\n                    }\n                }\n                var endInfo = parser.end();\n                if (endInfo.isFinished) {\n                    callback(null, returnNodes);\n                }\n                else {\n                    callback(true, null);\n                }\n            }\n            catch (e) {\n                throw new LessError({\n                    index: e.index + currentIndex,\n                    message: e.message\n                }, imports, fileInfo.filename);\n            }\n        }\n        //\n        // The Parser\n        //\n        return {\n            parserInput: parserInput,\n            imports: imports,\n            fileInfo: fileInfo,\n            parseNode: parseNode,\n            //\n            // Parse an input string into an abstract syntax tree,\n            // @param str A string containing 'less' markup\n            // @param callback call `callback` when done.\n            // @param [additionalData] An optional map which can contains vars - a map (key, value) of variables to apply\n            //\n            parse: function (str, callback, additionalData) {\n                var root;\n                var error = null;\n                var globalVars;\n                var modifyVars;\n                var ignored;\n                var preText = '';\n                globalVars = (additionalData && additionalData.globalVars) ? Parser.serializeVars(additionalData.globalVars) + \"\\n\" : '';\n                modifyVars = (additionalData && additionalData.modifyVars) ? \"\\n\" + Parser.serializeVars(additionalData.modifyVars) : '';\n                if (context.pluginManager) {\n                    var preProcessors = context.pluginManager.getPreProcessors();\n                    for (var i = 0; i < preProcessors.length; i++) {\n                        str = preProcessors[i].process(str, { context: context, imports: imports, fileInfo: fileInfo });\n                    }\n                }\n                if (globalVars || (additionalData && additionalData.banner)) {\n                    preText = ((additionalData && additionalData.banner) ? additionalData.banner : '') + globalVars;\n                    ignored = imports.contentsIgnoredChars;\n                    ignored[fileInfo.filename] = ignored[fileInfo.filename] || 0;\n                    ignored[fileInfo.filename] += preText.length;\n                }\n                str = str.replace(/\\r\\n?/g, '\\n');\n                // Remove potential UTF Byte Order Mark\n                str = preText + str.replace(/^\\uFEFF/, '') + modifyVars;\n                imports.contents[fileInfo.filename] = str;\n                // Start with the primary rule.\n                // The whole syntax tree is held under a Ruleset node,\n                // with the `root` property set to true, so no `{}` are\n                // output. The callback is called when the input is parsed.\n                try {\n                    parserInput.start(str, context.chunkInput, function fail(msg, index) {\n                        throw new LessError({\n                            index: index,\n                            type: 'Parse',\n                            message: msg,\n                            filename: fileInfo.filename\n                        }, imports);\n                    });\n                    tree.Node.prototype.parse = this;\n                    root = new tree.Ruleset(null, this.parsers.primary());\n                    tree.Node.prototype.rootNode = root;\n                    root.root = true;\n                    root.firstRoot = true;\n                    root.functionRegistry = functionRegistry.inherit();\n                }\n                catch (e) {\n                    return callback(new LessError(e, imports, fileInfo.filename));\n                }\n                // If `i` is smaller than the `input.length - 1`,\n                // it means the parser wasn't able to parse the whole\n                // string, so we've got a parsing error.\n                //\n                // We try to extract a \\n delimited string,\n                // showing the line where the parse error occurred.\n                // We split it up into two parts (the part which parsed,\n                // and the part which didn't), so we can color them differently.\n                var endInfo = parserInput.end();\n                if (!endInfo.isFinished) {\n                    var message = endInfo.furthestPossibleErrorMessage;\n                    if (!message) {\n                        message = 'Unrecognised input';\n                        if (endInfo.furthestChar === '}') {\n                            message += '. Possibly missing opening \\'{\\'';\n                        }\n                        else if (endInfo.furthestChar === ')') {\n                            message += '. Possibly missing opening \\'(\\'';\n                        }\n                        else if (endInfo.furthestReachedEnd) {\n                            message += '. Possibly missing something';\n                        }\n                    }\n                    error = new LessError({\n                        type: 'Parse',\n                        message: message,\n                        index: endInfo.furthest,\n                        filename: fileInfo.filename\n                    }, imports);\n                }\n                var finish = function (e) {\n                    e = error || e || imports.error;\n                    if (e) {\n                        if (!(e instanceof LessError)) {\n                            e = new LessError(e, imports, fileInfo.filename);\n                        }\n                        return callback(e);\n                    }\n                    else {\n                        return callback(null, root);\n                    }\n                };\n                if (context.processImports !== false) {\n                    new visitors.ImportVisitor(imports, finish)\n                        .run(root);\n                }\n                else {\n                    return finish();\n                }\n            },\n            //\n            // Here in, the parsing rules/functions\n            //\n            // The basic structure of the syntax tree generated is as follows:\n            //\n            //   Ruleset ->  Declaration -> Value -> Expression -> Entity\n            //\n            // Here's some Less code:\n            //\n            //    .class {\n            //      color: #fff;\n            //      border: 1px solid #000;\n            //      width: @w + 4px;\n            //      > .child {...}\n            //    }\n            //\n            // And here's what the parse tree might look like:\n            //\n            //     Ruleset (Selector '.class', [\n            //         Declaration (\"color\",  Value ([Expression [Color #fff]]))\n            //         Declaration (\"border\", Value ([Expression [Dimension 1px][Keyword \"solid\"][Color #000]]))\n            //         Declaration (\"width\",  Value ([Expression [Operation \" + \" [Variable \"@w\"][Dimension 4px]]]))\n            //         Ruleset (Selector [Element '>', '.child'], [...])\n            //     ])\n            //\n            //  In general, most rules will try to parse a token with the `$re()` function, and if the return\n            //  value is truly, will return a new node, of the relevant type. Sometimes, we need to check\n            //  first, before parsing, that's when we use `peek()`.\n            //\n            parsers: parsers = {\n                //\n                // The `primary` rule is the *entry* and *exit* point of the parser.\n                // The rules here can appear at any level of the parse tree.\n                //\n                // The recursive nature of the grammar is an interplay between the `block`\n                // rule, which represents `{ ... }`, the `ruleset` rule, and this `primary` rule,\n                // as represented by this simplified grammar:\n                //\n                //     primary  →  (ruleset | declaration)+\n                //     ruleset  →  selector+ block\n                //     block    →  '{' primary '}'\n                //\n                // Only at one point is the primary rule not called from the\n                // block rule: at the root level.\n                //\n                primary: function () {\n                    var mixin = this.mixin;\n                    var root = [];\n                    var node;\n                    while (true) {\n                        while (true) {\n                            node = this.comment();\n                            if (!node) {\n                                break;\n                            }\n                            root.push(node);\n                        }\n                        // always process comments before deciding if finished\n                        if (parserInput.finished) {\n                            break;\n                        }\n                        if (parserInput.peek('}')) {\n                            break;\n                        }\n                        node = this.extendRule();\n                        if (node) {\n                            root = root.concat(node);\n                            continue;\n                        }\n                        node = mixin.definition() || this.declaration() || mixin.call(false, false) ||\n                            this.ruleset() || this.variableCall() || this.entities.call() || this.atrule();\n                        if (node) {\n                            root.push(node);\n                        }\n                        else {\n                            var foundSemiColon = false;\n                            while (parserInput.$char(';')) {\n                                foundSemiColon = true;\n                            }\n                            if (!foundSemiColon) {\n                                break;\n                            }\n                        }\n                    }\n                    return root;\n                },\n                // comments are collected by the main parsing mechanism and then assigned to nodes\n                // where the current structure allows it\n                comment: function () {\n                    if (parserInput.commentStore.length) {\n                        var comment = parserInput.commentStore.shift();\n                        return new (tree.Comment)(comment.text, comment.isLineComment, comment.index, fileInfo);\n                    }\n                },\n                //\n                // Entities are tokens which can be found inside an Expression\n                //\n                entities: {\n                    mixinLookup: function () {\n                        return parsers.mixin.call(true, true);\n                    },\n                    //\n                    // A string, which supports escaping \" and '\n                    //\n                    //     \"milky way\" 'he\\'s the one!'\n                    //\n                    quoted: function (forceEscaped) {\n                        var str;\n                        var index = parserInput.i;\n                        var isEscaped = false;\n                        parserInput.save();\n                        if (parserInput.$char('~')) {\n                            isEscaped = true;\n                        }\n                        else if (forceEscaped) {\n                            parserInput.restore();\n                            return;\n                        }\n                        str = parserInput.$quoted();\n                        if (!str) {\n                            parserInput.restore();\n                            return;\n                        }\n                        parserInput.forget();\n                        return new (tree.Quoted)(str.charAt(0), str.substr(1, str.length - 2), isEscaped, index, fileInfo);\n                    },\n                    //\n                    // A catch-all word, such as:\n                    //\n                    //     black border-collapse\n                    //\n                    keyword: function () {\n                        var k = parserInput.$char('%') || parserInput.$re(/^\\[?(?:[\\w-]|\\\\(?:[A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9]))+\\]?/);\n                        if (k) {\n                            return tree.Color.fromKeyword(k) || new (tree.Keyword)(k);\n                        }\n                    },\n                    //\n                    // A function call\n                    //\n                    //     rgb(255, 0, 255)\n                    //\n                    // The arguments are parsed with the `entities.arguments` parser.\n                    //\n                    call: function () {\n                        var name;\n                        var args;\n                        var func;\n                        var index = parserInput.i;\n                        // http://jsperf.com/case-insensitive-regex-vs-strtolower-then-regex/18\n                        if (parserInput.peek(/^url\\(/i)) {\n                            return;\n                        }\n                        parserInput.save();\n                        name = parserInput.$re(/^([\\w-]+|%|~|progid:[\\w\\.]+)\\(/);\n                        if (!name) {\n                            parserInput.forget();\n                            return;\n                        }\n                        name = name[1];\n                        func = this.customFuncCall(name);\n                        if (func) {\n                            args = func.parse();\n                            if (args && func.stop) {\n                                parserInput.forget();\n                                return args;\n                            }\n                        }\n                        args = this.arguments(args);\n                        if (!parserInput.$char(')')) {\n                            parserInput.restore('Could not parse call arguments or missing \\')\\'');\n                            return;\n                        }\n                        parserInput.forget();\n                        return new (tree.Call)(name, args, index, fileInfo);\n                    },\n                    //\n                    // Parsing rules for functions with non-standard args, e.g.:\n                    //\n                    //     boolean(not(2 > 1))\n                    //\n                    //     This is a quick prototype, to be modified/improved when\n                    //     more custom-parsed funcs come (e.g. `selector(...)`)\n                    //\n                    customFuncCall: function (name) {\n                        /* Ideally the table is to be moved out of here for faster perf.,\n                           but it's quite tricky since it relies on all these `parsers`\n                           and `expect` available only here */\n                        return {\n                            alpha: f(parsers.ieAlpha, true),\n                            boolean: f(condition),\n                            'if': f(condition)\n                        }[name.toLowerCase()];\n                        function f(parse, stop) {\n                            return {\n                                parse: parse,\n                                stop: stop // when true - stop after parse() and return its result, \n                                // otherwise continue for plain args\n                            };\n                        }\n                        function condition() {\n                            return [expect(parsers.condition, 'expected condition')];\n                        }\n                    },\n                    arguments: function (prevArgs) {\n                        var argsComma = prevArgs || [];\n                        var argsSemiColon = [];\n                        var isSemiColonSeparated;\n                        var value;\n                        parserInput.save();\n                        while (true) {\n                            if (prevArgs) {\n                                prevArgs = false;\n                            }\n                            else {\n                                value = parsers.detachedRuleset() || this.assignment() || parsers.expression();\n                                if (!value) {\n                                    break;\n                                }\n                                if (value.value && value.value.length == 1) {\n                                    value = value.value[0];\n                                }\n                                argsComma.push(value);\n                            }\n                            if (parserInput.$char(',')) {\n                                continue;\n                            }\n                            if (parserInput.$char(';') || isSemiColonSeparated) {\n                                isSemiColonSeparated = true;\n                                value = (argsComma.length < 1) ? argsComma[0]\n                                    : new tree.Value(argsComma);\n                                argsSemiColon.push(value);\n                                argsComma = [];\n                            }\n                        }\n                        parserInput.forget();\n                        return isSemiColonSeparated ? argsSemiColon : argsComma;\n                    },\n                    literal: function () {\n                        return this.dimension() ||\n                            this.color() ||\n                            this.quoted() ||\n                            this.unicodeDescriptor();\n                    },\n                    // Assignments are argument entities for calls.\n                    // They are present in ie filter properties as shown below.\n                    //\n                    //     filter: progid:DXImageTransform.Microsoft.Alpha( *opacity=50* )\n                    //\n                    assignment: function () {\n                        var key;\n                        var value;\n                        parserInput.save();\n                        key = parserInput.$re(/^\\w+(?=\\s?=)/i);\n                        if (!key) {\n                            parserInput.restore();\n                            return;\n                        }\n                        if (!parserInput.$char('=')) {\n                            parserInput.restore();\n                            return;\n                        }\n                        value = parsers.entity();\n                        if (value) {\n                            parserInput.forget();\n                            return new (tree.Assignment)(key, value);\n                        }\n                        else {\n                            parserInput.restore();\n                        }\n                    },\n                    //\n                    // Parse url() tokens\n                    //\n                    // We use a specific rule for urls, because they don't really behave like\n                    // standard function calls. The difference is that the argument doesn't have\n                    // to be enclosed within a string, so it can't be parsed as an Expression.\n                    //\n                    url: function () {\n                        var value;\n                        var index = parserInput.i;\n                        parserInput.autoCommentAbsorb = false;\n                        if (!parserInput.$str('url(')) {\n                            parserInput.autoCommentAbsorb = true;\n                            return;\n                        }\n                        value = this.quoted() || this.variable() || this.property() ||\n                            parserInput.$re(/^(?:(?:\\\\[\\(\\)'\"])|[^\\(\\)'\"])+/) || '';\n                        parserInput.autoCommentAbsorb = true;\n                        expectChar(')');\n                        return new (tree.URL)((value.value != null ||\n                            value instanceof tree.Variable ||\n                            value instanceof tree.Property) ?\n                            value : new (tree.Anonymous)(value, index), index, fileInfo);\n                    },\n                    //\n                    // A Variable entity, such as `@fink`, in\n                    //\n                    //     width: @fink + 2px\n                    //\n                    // We use a different parser for variable definitions,\n                    // see `parsers.variable`.\n                    //\n                    variable: function () {\n                        var ch;\n                        var name;\n                        var index = parserInput.i;\n                        parserInput.save();\n                        if (parserInput.currentChar() === '@' && (name = parserInput.$re(/^@@?[\\w-]+/))) {\n                            ch = parserInput.currentChar();\n                            if (ch === '(' || ch === '[' && !parserInput.prevChar().match(/^\\s/)) {\n                                // this may be a VariableCall lookup\n                                var result = parsers.variableCall(name);\n                                if (result) {\n                                    parserInput.forget();\n                                    return result;\n                                }\n                            }\n                            parserInput.forget();\n                            return new (tree.Variable)(name, index, fileInfo);\n                        }\n                        parserInput.restore();\n                    },\n                    // A variable entity using the protective {} e.g. @{var}\n                    variableCurly: function () {\n                        var curly;\n                        var index = parserInput.i;\n                        if (parserInput.currentChar() === '@' && (curly = parserInput.$re(/^@\\{([\\w-]+)\\}/))) {\n                            return new (tree.Variable)(\"@\" + curly[1], index, fileInfo);\n                        }\n                    },\n                    //\n                    // A Property accessor, such as `$color`, in\n                    //\n                    //     background-color: $color\n                    //\n                    property: function () {\n                        var name;\n                        var index = parserInput.i;\n                        if (parserInput.currentChar() === '$' && (name = parserInput.$re(/^\\$[\\w-]+/))) {\n                            return new (tree.Property)(name, index, fileInfo);\n                        }\n                    },\n                    // A property entity useing the protective {} e.g. ${prop}\n                    propertyCurly: function () {\n                        var curly;\n                        var index = parserInput.i;\n                        if (parserInput.currentChar() === '$' && (curly = parserInput.$re(/^\\$\\{([\\w-]+)\\}/))) {\n                            return new (tree.Property)(\"$\" + curly[1], index, fileInfo);\n                        }\n                    },\n                    //\n                    // A Hexadecimal color\n                    //\n                    //     #4F3C2F\n                    //\n                    // `rgb` and `hsl` colors are parsed through the `entities.call` parser.\n                    //\n                    color: function () {\n                        var rgb;\n                        parserInput.save();\n                        if (parserInput.currentChar() === '#' && (rgb = parserInput.$re(/^#([A-Fa-f0-9]{8}|[A-Fa-f0-9]{6}|[A-Fa-f0-9]{3,4})([\\w.#\\[])?/))) {\n                            if (!rgb[2]) {\n                                parserInput.forget();\n                                return new (tree.Color)(rgb[1], undefined, rgb[0]);\n                            }\n                        }\n                        parserInput.restore();\n                    },\n                    colorKeyword: function () {\n                        parserInput.save();\n                        var autoCommentAbsorb = parserInput.autoCommentAbsorb;\n                        parserInput.autoCommentAbsorb = false;\n                        var k = parserInput.$re(/^[_A-Za-z-][_A-Za-z0-9-]+/);\n                        parserInput.autoCommentAbsorb = autoCommentAbsorb;\n                        if (!k) {\n                            parserInput.forget();\n                            return;\n                        }\n                        parserInput.restore();\n                        var color = tree.Color.fromKeyword(k);\n                        if (color) {\n                            parserInput.$str(k);\n                            return color;\n                        }\n                    },\n                    //\n                    // A Dimension, that is, a number and a unit\n                    //\n                    //     0.5em 95%\n                    //\n                    dimension: function () {\n                        if (parserInput.peekNotNumeric()) {\n                            return;\n                        }\n                        var value = parserInput.$re(/^([+-]?\\d*\\.?\\d+)(%|[a-z_]+)?/i);\n                        if (value) {\n                            return new (tree.Dimension)(value[1], value[2]);\n                        }\n                    },\n                    //\n                    // A unicode descriptor, as is used in unicode-range\n                    //\n                    // U+0??  or U+00A1-00A9\n                    //\n                    unicodeDescriptor: function () {\n                        var ud;\n                        ud = parserInput.$re(/^U\\+[0-9a-fA-F?]+(\\-[0-9a-fA-F?]+)?/);\n                        if (ud) {\n                            return new (tree.UnicodeDescriptor)(ud[0]);\n                        }\n                    },\n                    //\n                    // JavaScript code to be evaluated\n                    //\n                    //     `window.location.href`\n                    //\n                    javascript: function () {\n                        var js;\n                        var index = parserInput.i;\n                        parserInput.save();\n                        var escape = parserInput.$char('~');\n                        var jsQuote = parserInput.$char('`');\n                        if (!jsQuote) {\n                            parserInput.restore();\n                            return;\n                        }\n                        js = parserInput.$re(/^[^`]*`/);\n                        if (js) {\n                            parserInput.forget();\n                            return new (tree.JavaScript)(js.substr(0, js.length - 1), Boolean(escape), index, fileInfo);\n                        }\n                        parserInput.restore('invalid javascript definition');\n                    }\n                },\n                //\n                // The variable part of a variable definition. Used in the `rule` parser\n                //\n                //     @fink:\n                //\n                variable: function () {\n                    var name;\n                    if (parserInput.currentChar() === '@' && (name = parserInput.$re(/^(@[\\w-]+)\\s*:/))) {\n                        return name[1];\n                    }\n                },\n                //\n                // Call a variable value to retrieve a detached ruleset\n                // or a value from a detached ruleset's rules.\n                //\n                //     @fink();\n                //     @fink;\n                //     color: @fink[@color];\n                //\n                variableCall: function (parsedName) {\n                    var lookups;\n                    var i = parserInput.i;\n                    var inValue = !!parsedName;\n                    var name = parsedName;\n                    parserInput.save();\n                    if (name || (parserInput.currentChar() === '@'\n                        && (name = parserInput.$re(/^(@[\\w-]+)(\\(\\s*\\))?/)))) {\n                        lookups = this.mixin.ruleLookups();\n                        if (!lookups && ((inValue && parserInput.$str('()') !== '()') || (name[2] !== '()'))) {\n                            parserInput.restore('Missing \\'[...]\\' lookup in variable call');\n                            return;\n                        }\n                        if (!inValue) {\n                            name = name[1];\n                        }\n                        var call = new tree.VariableCall(name, i, fileInfo);\n                        if (!inValue && parsers.end()) {\n                            parserInput.forget();\n                            return call;\n                        }\n                        else {\n                            parserInput.forget();\n                            return new tree.NamespaceValue(call, lookups, i, fileInfo);\n                        }\n                    }\n                    parserInput.restore();\n                },\n                //\n                // extend syntax - used to extend selectors\n                //\n                extend: function (isRule) {\n                    var elements;\n                    var e;\n                    var index = parserInput.i;\n                    var option;\n                    var extendList;\n                    var extend;\n                    if (!parserInput.$str(isRule ? '&:extend(' : ':extend(')) {\n                        return;\n                    }\n                    do {\n                        option = null;\n                        elements = null;\n                        while (!(option = parserInput.$re(/^(all)(?=\\s*(\\)|,))/))) {\n                            e = this.element();\n                            if (!e) {\n                                break;\n                            }\n                            if (elements) {\n                                elements.push(e);\n                            }\n                            else {\n                                elements = [e];\n                            }\n                        }\n                        option = option && option[1];\n                        if (!elements) {\n                            error('Missing target selector for :extend().');\n                        }\n                        extend = new (tree.Extend)(new (tree.Selector)(elements), option, index, fileInfo);\n                        if (extendList) {\n                            extendList.push(extend);\n                        }\n                        else {\n                            extendList = [extend];\n                        }\n                    } while (parserInput.$char(','));\n                    expect(/^\\)/);\n                    if (isRule) {\n                        expect(/^;/);\n                    }\n                    return extendList;\n                },\n                //\n                // extendRule - used in a rule to extend all the parent selectors\n                //\n                extendRule: function () {\n                    return this.extend(true);\n                },\n                //\n                // Mixins\n                //\n                mixin: {\n                    //\n                    // A Mixin call, with an optional argument list\n                    //\n                    //     #mixins > .square(#fff);\n                    //     #mixins.square(#fff);\n                    //     .rounded(4px, black);\n                    //     .button;\n                    //\n                    // We can lookup / return a value using the lookup syntax:\n                    //\n                    //     color: #mixin.square(#fff)[@color];\n                    //\n                    // The `while` loop is there because mixins can be\n                    // namespaced, but we only support the child and descendant\n                    // selector for now.\n                    //\n                    call: function (inValue, getLookup) {\n                        var s = parserInput.currentChar();\n                        var important = false;\n                        var lookups;\n                        var index = parserInput.i;\n                        var elements;\n                        var args;\n                        var hasParens;\n                        if (s !== '.' && s !== '#') {\n                            return;\n                        }\n                        parserInput.save(); // stop us absorbing part of an invalid selector\n                        elements = this.elements();\n                        if (elements) {\n                            if (parserInput.$char('(')) {\n                                args = this.args(true).args;\n                                expectChar(')');\n                                hasParens = true;\n                            }\n                            if (getLookup !== false) {\n                                lookups = this.ruleLookups();\n                            }\n                            if (getLookup === true && !lookups) {\n                                parserInput.restore();\n                                return;\n                            }\n                            if (inValue && !lookups && !hasParens) {\n                                // This isn't a valid in-value mixin call\n                                parserInput.restore();\n                                return;\n                            }\n                            if (!inValue && parsers.important()) {\n                                important = true;\n                            }\n                            if (inValue || parsers.end()) {\n                                parserInput.forget();\n                                var mixin = new (tree.mixin.Call)(elements, args, index, fileInfo, !lookups && important);\n                                if (lookups) {\n                                    return new tree.NamespaceValue(mixin, lookups);\n                                }\n                                else {\n                                    return mixin;\n                                }\n                            }\n                        }\n                        parserInput.restore();\n                    },\n                    /**\n                     * Matching elements for mixins\n                     * (Start with . or # and can have > )\n                     */\n                    elements: function () {\n                        var elements;\n                        var e;\n                        var c;\n                        var elem;\n                        var elemIndex;\n                        var re = /^[#.](?:[\\w-]|\\\\(?:[A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9]))+/;\n                        while (true) {\n                            elemIndex = parserInput.i;\n                            e = parserInput.$re(re);\n                            if (!e) {\n                                break;\n                            }\n                            elem = new (tree.Element)(c, e, false, elemIndex, fileInfo);\n                            if (elements) {\n                                elements.push(elem);\n                            }\n                            else {\n                                elements = [elem];\n                            }\n                            c = parserInput.$char('>');\n                        }\n                        return elements;\n                    },\n                    args: function (isCall) {\n                        var entities = parsers.entities;\n                        var returner = { args: null, variadic: false };\n                        var expressions = [];\n                        var argsSemiColon = [];\n                        var argsComma = [];\n                        var isSemiColonSeparated;\n                        var expressionContainsNamed;\n                        var name;\n                        var nameLoop;\n                        var value;\n                        var arg;\n                        var expand;\n                        var hasSep = true;\n                        parserInput.save();\n                        while (true) {\n                            if (isCall) {\n                                arg = parsers.detachedRuleset() || parsers.expression();\n                            }\n                            else {\n                                parserInput.commentStore.length = 0;\n                                if (parserInput.$str('...')) {\n                                    returner.variadic = true;\n                                    if (parserInput.$char(';') && !isSemiColonSeparated) {\n                                        isSemiColonSeparated = true;\n                                    }\n                                    (isSemiColonSeparated ? argsSemiColon : argsComma)\n                                        .push({ variadic: true });\n                                    break;\n                                }\n                                arg = entities.variable() || entities.property() || entities.literal() || entities.keyword() || this.call(true);\n                            }\n                            if (!arg || !hasSep) {\n                                break;\n                            }\n                            nameLoop = null;\n                            if (arg.throwAwayComments) {\n                                arg.throwAwayComments();\n                            }\n                            value = arg;\n                            var val = null;\n                            if (isCall) {\n                                // Variable\n                                if (arg.value && arg.value.length == 1) {\n                                    val = arg.value[0];\n                                }\n                            }\n                            else {\n                                val = arg;\n                            }\n                            if (val && (val instanceof tree.Variable || val instanceof tree.Property)) {\n                                if (parserInput.$char(':')) {\n                                    if (expressions.length > 0) {\n                                        if (isSemiColonSeparated) {\n                                            error('Cannot mix ; and , as delimiter types');\n                                        }\n                                        expressionContainsNamed = true;\n                                    }\n                                    value = parsers.detachedRuleset() || parsers.expression();\n                                    if (!value) {\n                                        if (isCall) {\n                                            error('could not understand value for named argument');\n                                        }\n                                        else {\n                                            parserInput.restore();\n                                            returner.args = [];\n                                            return returner;\n                                        }\n                                    }\n                                    nameLoop = (name = val.name);\n                                }\n                                else if (parserInput.$str('...')) {\n                                    if (!isCall) {\n                                        returner.variadic = true;\n                                        if (parserInput.$char(';') && !isSemiColonSeparated) {\n                                            isSemiColonSeparated = true;\n                                        }\n                                        (isSemiColonSeparated ? argsSemiColon : argsComma)\n                                            .push({ name: arg.name, variadic: true });\n                                        break;\n                                    }\n                                    else {\n                                        expand = true;\n                                    }\n                                }\n                                else if (!isCall) {\n                                    name = nameLoop = val.name;\n                                    value = null;\n                                }\n                            }\n                            if (value) {\n                                expressions.push(value);\n                            }\n                            argsComma.push({ name: nameLoop, value: value, expand: expand });\n                            if (parserInput.$char(',')) {\n                                hasSep = true;\n                                continue;\n                            }\n                            hasSep = parserInput.$char(';') === ';';\n                            if (hasSep || isSemiColonSeparated) {\n                                if (expressionContainsNamed) {\n                                    error('Cannot mix ; and , as delimiter types');\n                                }\n                                isSemiColonSeparated = true;\n                                if (expressions.length > 1) {\n                                    value = new (tree.Value)(expressions);\n                                }\n                                argsSemiColon.push({ name: name, value: value, expand: expand });\n                                name = null;\n                                expressions = [];\n                                expressionContainsNamed = false;\n                            }\n                        }\n                        parserInput.forget();\n                        returner.args = isSemiColonSeparated ? argsSemiColon : argsComma;\n                        return returner;\n                    },\n                    //\n                    // A Mixin definition, with a list of parameters\n                    //\n                    //     .rounded (@radius: 2px, @color) {\n                    //        ...\n                    //     }\n                    //\n                    // Until we have a finer grained state-machine, we have to\n                    // do a look-ahead, to make sure we don't have a mixin call.\n                    // See the `rule` function for more information.\n                    //\n                    // We start by matching `.rounded (`, and then proceed on to\n                    // the argument list, which has optional default values.\n                    // We store the parameters in `params`, with a `value` key,\n                    // if there is a value, such as in the case of `@radius`.\n                    //\n                    // Once we've got our params list, and a closing `)`, we parse\n                    // the `{...}` block.\n                    //\n                    definition: function () {\n                        var name;\n                        var params = [];\n                        var match;\n                        var ruleset;\n                        var cond;\n                        var variadic = false;\n                        if ((parserInput.currentChar() !== '.' && parserInput.currentChar() !== '#') ||\n                            parserInput.peek(/^[^{]*\\}/)) {\n                            return;\n                        }\n                        parserInput.save();\n                        match = parserInput.$re(/^([#.](?:[\\w-]|\\\\(?:[A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9]))+)\\s*\\(/);\n                        if (match) {\n                            name = match[1];\n                            var argInfo = this.args(false);\n                            params = argInfo.args;\n                            variadic = argInfo.variadic;\n                            // .mixincall(\"@{a}\");\n                            // looks a bit like a mixin definition..\n                            // also\n                            // .mixincall(@a: {rule: set;});\n                            // so we have to be nice and restore\n                            if (!parserInput.$char(')')) {\n                                parserInput.restore('Missing closing \\')\\'');\n                                return;\n                            }\n                            parserInput.commentStore.length = 0;\n                            if (parserInput.$str('when')) { // Guard\n                                cond = expect(parsers.conditions, 'expected condition');\n                            }\n                            ruleset = parsers.block();\n                            if (ruleset) {\n                                parserInput.forget();\n                                return new (tree.mixin.Definition)(name, params, ruleset, cond, variadic);\n                            }\n                            else {\n                                parserInput.restore();\n                            }\n                        }\n                        else {\n                            parserInput.restore();\n                        }\n                    },\n                    ruleLookups: function () {\n                        var rule;\n                        var lookups = [];\n                        if (parserInput.currentChar() !== '[') {\n                            return;\n                        }\n                        while (true) {\n                            parserInput.save();\n                            rule = this.lookupValue();\n                            if (!rule && rule !== '') {\n                                parserInput.restore();\n                                break;\n                            }\n                            lookups.push(rule);\n                            parserInput.forget();\n                        }\n                        if (lookups.length > 0) {\n                            return lookups;\n                        }\n                    },\n                    lookupValue: function () {\n                        parserInput.save();\n                        if (!parserInput.$char('[')) {\n                            parserInput.restore();\n                            return;\n                        }\n                        var name = parserInput.$re(/^(?:[@$]{0,2})[_a-zA-Z0-9-]*/);\n                        if (!parserInput.$char(']')) {\n                            parserInput.restore();\n                            return;\n                        }\n                        if (name || name === '') {\n                            parserInput.forget();\n                            return name;\n                        }\n                        parserInput.restore();\n                    }\n                },\n                //\n                // Entities are the smallest recognized token,\n                // and can be found inside a rule's value.\n                //\n                entity: function () {\n                    var entities = this.entities;\n                    return this.comment() || entities.literal() || entities.variable() || entities.url() ||\n                        entities.property() || entities.call() || entities.keyword() || this.mixin.call(true) ||\n                        entities.javascript();\n                },\n                //\n                // A Declaration terminator. Note that we use `peek()` to check for '}',\n                // because the `block` rule will be expecting it, but we still need to make sure\n                // it's there, if ';' was omitted.\n                //\n                end: function () {\n                    return parserInput.$char(';') || parserInput.peek('}');\n                },\n                //\n                // IE's alpha function\n                //\n                //     alpha(opacity=88)\n                //\n                ieAlpha: function () {\n                    var value;\n                    // http://jsperf.com/case-insensitive-regex-vs-strtolower-then-regex/18\n                    if (!parserInput.$re(/^opacity=/i)) {\n                        return;\n                    }\n                    value = parserInput.$re(/^\\d+/);\n                    if (!value) {\n                        value = expect(parsers.entities.variable, 'Could not parse alpha');\n                        value = \"@{\" + value.name.slice(1) + \"}\";\n                    }\n                    expectChar(')');\n                    return new tree.Quoted('', \"alpha(opacity=\" + value + \")\");\n                },\n                //\n                // A Selector Element\n                //\n                //     div\n                //     + h1\n                //     #socks\n                //     input[type=\"text\"]\n                //\n                // Elements are the building blocks for Selectors,\n                // they are made out of a `Combinator` (see combinator rule),\n                // and an element name, such as a tag a class, or `*`.\n                //\n                element: function () {\n                    var e;\n                    var c;\n                    var v;\n                    var index = parserInput.i;\n                    c = this.combinator();\n                    e = parserInput.$re(/^(?:\\d+\\.\\d+|\\d+)%/) ||\n                        parserInput.$re(/^(?:[.#]?|:*)(?:[\\w-]|[^\\x00-\\x9f]|\\\\(?:[A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9]))+/) ||\n                        parserInput.$char('*') || parserInput.$char('&') || this.attribute() ||\n                        parserInput.$re(/^\\([^&()@]+\\)/) || parserInput.$re(/^[\\.#:](?=@)/) ||\n                        this.entities.variableCurly();\n                    if (!e) {\n                        parserInput.save();\n                        if (parserInput.$char('(')) {\n                            if ((v = this.selector(false)) && parserInput.$char(')')) {\n                                e = new (tree.Paren)(v);\n                                parserInput.forget();\n                            }\n                            else {\n                                parserInput.restore('Missing closing \\')\\'');\n                            }\n                        }\n                        else {\n                            parserInput.forget();\n                        }\n                    }\n                    if (e) {\n                        return new (tree.Element)(c, e, e instanceof tree.Variable, index, fileInfo);\n                    }\n                },\n                //\n                // Combinators combine elements together, in a Selector.\n                //\n                // Because our parser isn't white-space sensitive, special care\n                // has to be taken, when parsing the descendant combinator, ` `,\n                // as it's an empty space. We have to check the previous character\n                // in the input, to see if it's a ` ` character. More info on how\n                // we deal with this in *combinator.js*.\n                //\n                combinator: function () {\n                    var c = parserInput.currentChar();\n                    if (c === '/') {\n                        parserInput.save();\n                        var slashedCombinator = parserInput.$re(/^\\/[a-z]+\\//i);\n                        if (slashedCombinator) {\n                            parserInput.forget();\n                            return new (tree.Combinator)(slashedCombinator);\n                        }\n                        parserInput.restore();\n                    }\n                    if (c === '>' || c === '+' || c === '~' || c === '|' || c === '^') {\n                        parserInput.i++;\n                        if (c === '^' && parserInput.currentChar() === '^') {\n                            c = '^^';\n                            parserInput.i++;\n                        }\n                        while (parserInput.isWhitespace()) {\n                            parserInput.i++;\n                        }\n                        return new (tree.Combinator)(c);\n                    }\n                    else if (parserInput.isWhitespace(-1)) {\n                        return new (tree.Combinator)(' ');\n                    }\n                    else {\n                        return new (tree.Combinator)(null);\n                    }\n                },\n                //\n                // A CSS Selector\n                // with less extensions e.g. the ability to extend and guard\n                //\n                //     .class > div + h1\n                //     li a:hover\n                //\n                // Selectors are made out of one or more Elements, see above.\n                //\n                selector: function (isLess) {\n                    var index = parserInput.i;\n                    var elements;\n                    var extendList;\n                    var c;\n                    var e;\n                    var allExtends;\n                    var when;\n                    var condition;\n                    isLess = isLess !== false;\n                    while ((isLess && (extendList = this.extend())) || (isLess && (when = parserInput.$str('when'))) || (e = this.element())) {\n                        if (when) {\n                            condition = expect(this.conditions, 'expected condition');\n                        }\n                        else if (condition) {\n                            error('CSS guard can only be used at the end of selector');\n                        }\n                        else if (extendList) {\n                            if (allExtends) {\n                                allExtends = allExtends.concat(extendList);\n                            }\n                            else {\n                                allExtends = extendList;\n                            }\n                        }\n                        else {\n                            if (allExtends) {\n                                error('Extend can only be used at the end of selector');\n                            }\n                            c = parserInput.currentChar();\n                            if (elements) {\n                                elements.push(e);\n                            }\n                            else {\n                                elements = [e];\n                            }\n                            e = null;\n                        }\n                        if (c === '{' || c === '}' || c === ';' || c === ',' || c === ')') {\n                            break;\n                        }\n                    }\n                    if (elements) {\n                        return new (tree.Selector)(elements, allExtends, condition, index, fileInfo);\n                    }\n                    if (allExtends) {\n                        error('Extend must be used to extend a selector, it cannot be used on its own');\n                    }\n                },\n                selectors: function () {\n                    var s;\n                    var selectors;\n                    while (true) {\n                        s = this.selector();\n                        if (!s) {\n                            break;\n                        }\n                        if (selectors) {\n                            selectors.push(s);\n                        }\n                        else {\n                            selectors = [s];\n                        }\n                        parserInput.commentStore.length = 0;\n                        if (s.condition && selectors.length > 1) {\n                            error(\"Guards are only currently allowed on a single selector.\");\n                        }\n                        if (!parserInput.$char(',')) {\n                            break;\n                        }\n                        if (s.condition) {\n                            error(\"Guards are only currently allowed on a single selector.\");\n                        }\n                        parserInput.commentStore.length = 0;\n                    }\n                    return selectors;\n                },\n                attribute: function () {\n                    if (!parserInput.$char('[')) {\n                        return;\n                    }\n                    var entities = this.entities;\n                    var key;\n                    var val;\n                    var op;\n                    if (!(key = entities.variableCurly())) {\n                        key = expect(/^(?:[_A-Za-z0-9-\\*]*\\|)?(?:[_A-Za-z0-9-]|\\\\.)+/);\n                    }\n                    op = parserInput.$re(/^[|~*$^]?=/);\n                    if (op) {\n                        val = entities.quoted() || parserInput.$re(/^[0-9]+%/) || parserInput.$re(/^[\\w-]+/) || entities.variableCurly();\n                    }\n                    expectChar(']');\n                    return new (tree.Attribute)(key, op, val);\n                },\n                //\n                // The `block` rule is used by `ruleset` and `mixin.definition`.\n                // It's a wrapper around the `primary` rule, with added `{}`.\n                //\n                block: function () {\n                    var content;\n                    if (parserInput.$char('{') && (content = this.primary()) && parserInput.$char('}')) {\n                        return content;\n                    }\n                },\n                blockRuleset: function () {\n                    var block = this.block();\n                    if (block) {\n                        block = new tree.Ruleset(null, block);\n                    }\n                    return block;\n                },\n                detachedRuleset: function () {\n                    var argInfo;\n                    var params;\n                    var variadic;\n                    parserInput.save();\n                    if (parserInput.$re(/^[.#]\\(/)) {\n                        /**\n                         * DR args currently only implemented for each() function, and not\n                         * yet settable as `@dr: #(@arg) {}`\n                         * This should be done when DRs are merged with mixins.\n                         * See: https://github.com/less/less-meta/issues/16\n                         */\n                        argInfo = this.mixin.args(false);\n                        params = argInfo.args;\n                        variadic = argInfo.variadic;\n                        if (!parserInput.$char(')')) {\n                            parserInput.restore();\n                            return;\n                        }\n                    }\n                    var blockRuleset = this.blockRuleset();\n                    if (blockRuleset) {\n                        parserInput.forget();\n                        if (params) {\n                            return new tree.mixin.Definition(null, params, blockRuleset, null, variadic);\n                        }\n                        return new tree.DetachedRuleset(blockRuleset);\n                    }\n                    parserInput.restore();\n                },\n                //\n                // div, .class, body > p {...}\n                //\n                ruleset: function () {\n                    var selectors;\n                    var rules;\n                    var debugInfo;\n                    parserInput.save();\n                    if (context.dumpLineNumbers) {\n                        debugInfo = getDebugInfo(parserInput.i);\n                    }\n                    selectors = this.selectors();\n                    if (selectors && (rules = this.block())) {\n                        parserInput.forget();\n                        var ruleset = new (tree.Ruleset)(selectors, rules, context.strictImports);\n                        if (context.dumpLineNumbers) {\n                            ruleset.debugInfo = debugInfo;\n                        }\n                        return ruleset;\n                    }\n                    else {\n                        parserInput.restore();\n                    }\n                },\n                declaration: function () {\n                    var name;\n                    var value;\n                    var index = parserInput.i;\n                    var hasDR;\n                    var c = parserInput.currentChar();\n                    var important;\n                    var merge;\n                    var isVariable;\n                    if (c === '.' || c === '#' || c === '&' || c === ':') {\n                        return;\n                    }\n                    parserInput.save();\n                    name = this.variable() || this.ruleProperty();\n                    if (name) {\n                        isVariable = typeof name === 'string';\n                        if (isVariable) {\n                            value = this.detachedRuleset();\n                            if (value) {\n                                hasDR = true;\n                            }\n                        }\n                        parserInput.commentStore.length = 0;\n                        if (!value) {\n                            // a name returned by this.ruleProperty() is always an array of the form:\n                            // [string-1, ..., string-n, \"\"] or [string-1, ..., string-n, \"+\"]\n                            // where each item is a tree.Keyword or tree.Variable\n                            merge = !isVariable && name.length > 1 && name.pop().value;\n                            // Custom property values get permissive parsing\n                            if (name[0].value && name[0].value.slice(0, 2) === '--') {\n                                value = this.permissiveValue();\n                            }\n                            // Try to store values as anonymous\n                            // If we need the value later we'll re-parse it in ruleset.parseValue\n                            else {\n                                value = this.anonymousValue();\n                            }\n                            if (value) {\n                                parserInput.forget();\n                                // anonymous values absorb the end ';' which is required for them to work\n                                return new (tree.Declaration)(name, value, false, merge, index, fileInfo);\n                            }\n                            if (!value) {\n                                value = this.value();\n                            }\n                            if (value) {\n                                important = this.important();\n                            }\n                            else if (isVariable) {\n                                // As a last resort, try permissiveValue\n                                value = this.permissiveValue();\n                            }\n                        }\n                        if (value && (this.end() || hasDR)) {\n                            parserInput.forget();\n                            return new (tree.Declaration)(name, value, important, merge, index, fileInfo);\n                        }\n                        else {\n                            parserInput.restore();\n                        }\n                    }\n                    else {\n                        parserInput.restore();\n                    }\n                },\n                anonymousValue: function () {\n                    var index = parserInput.i;\n                    var match = parserInput.$re(/^([^.#@\\$+\\/'\"*`(;{}-]*);/);\n                    if (match) {\n                        return new (tree.Anonymous)(match[1], index);\n                    }\n                },\n                /**\n                 * Used for custom properties, at-rules, and variables (as fallback)\n                 * Parses almost anything inside of {} [] () \"\" blocks\n                 * until it reaches outer-most tokens.\n                 *\n                 * First, it will try to parse comments and entities to reach\n                 * the end. This is mostly like the Expression parser except no\n                 * math is allowed.\n                 */\n                permissiveValue: function (untilTokens) {\n                    var i;\n                    var e;\n                    var done;\n                    var value;\n                    var tok = untilTokens || ';';\n                    var index = parserInput.i;\n                    var result = [];\n                    function testCurrentChar() {\n                        var char = parserInput.currentChar();\n                        if (typeof tok === 'string') {\n                            return char === tok;\n                        }\n                        else {\n                            return tok.test(char);\n                        }\n                    }\n                    if (testCurrentChar()) {\n                        return;\n                    }\n                    value = [];\n                    do {\n                        e = this.comment();\n                        if (e) {\n                            value.push(e);\n                            continue;\n                        }\n                        e = this.entity();\n                        if (e) {\n                            value.push(e);\n                        }\n                    } while (e);\n                    done = testCurrentChar();\n                    if (value.length > 0) {\n                        value = new (tree.Expression)(value);\n                        if (done) {\n                            return value;\n                        }\n                        else {\n                            result.push(value);\n                        }\n                        // Preserve space before $parseUntil as it will not\n                        if (parserInput.prevChar() === ' ') {\n                            result.push(new tree.Anonymous(' ', index));\n                        }\n                    }\n                    parserInput.save();\n                    value = parserInput.$parseUntil(tok);\n                    if (value) {\n                        if (typeof value === 'string') {\n                            error(\"Expected '\" + value + \"'\", 'Parse');\n                        }\n                        if (value.length === 1 && value[0] === ' ') {\n                            parserInput.forget();\n                            return new tree.Anonymous('', index);\n                        }\n                        var item = void 0;\n                        for (i = 0; i < value.length; i++) {\n                            item = value[i];\n                            if (Array.isArray(item)) {\n                                // Treat actual quotes as normal quoted values\n                                result.push(new tree.Quoted(item[0], item[1], true, index, fileInfo));\n                            }\n                            else {\n                                if (i === value.length - 1) {\n                                    item = item.trim();\n                                }\n                                // Treat like quoted values, but replace vars like unquoted expressions\n                                var quote = new tree.Quoted('\\'', item, true, index, fileInfo);\n                                quote.variableRegex = /@([\\w-]+)/g;\n                                quote.propRegex = /\\$([\\w-]+)/g;\n                                result.push(quote);\n                            }\n                        }\n                        parserInput.forget();\n                        return new tree.Expression(result, true);\n                    }\n                    parserInput.restore();\n                },\n                //\n                // An @import atrule\n                //\n                //     @import \"lib\";\n                //\n                // Depending on our environment, importing is done differently:\n                // In the browser, it's an XHR request, in Node, it would be a\n                // file-system operation. The function used for importing is\n                // stored in `import`, which we pass to the Import constructor.\n                //\n                'import': function () {\n                    var path;\n                    var features;\n                    var index = parserInput.i;\n                    var dir = parserInput.$re(/^@import?\\s+/);\n                    if (dir) {\n                        var options = (dir ? this.importOptions() : null) || {};\n                        if ((path = this.entities.quoted() || this.entities.url())) {\n                            features = this.mediaFeatures();\n                            if (!parserInput.$char(';')) {\n                                parserInput.i = index;\n                                error('missing semi-colon or unrecognised media features on import');\n                            }\n                            features = features && new (tree.Value)(features);\n                            return new (tree.Import)(path, features, options, index, fileInfo);\n                        }\n                        else {\n                            parserInput.i = index;\n                            error('malformed import statement');\n                        }\n                    }\n                },\n                importOptions: function () {\n                    var o;\n                    var options = {};\n                    var optionName;\n                    var value;\n                    // list of options, surrounded by parens\n                    if (!parserInput.$char('(')) {\n                        return null;\n                    }\n                    do {\n                        o = this.importOption();\n                        if (o) {\n                            optionName = o;\n                            value = true;\n                            switch (optionName) {\n                                case 'css':\n                                    optionName = 'less';\n                                    value = false;\n                                    break;\n                                case 'once':\n                                    optionName = 'multiple';\n                                    value = false;\n                                    break;\n                            }\n                            options[optionName] = value;\n                            if (!parserInput.$char(',')) {\n                                break;\n                            }\n                        }\n                    } while (o);\n                    expectChar(')');\n                    return options;\n                },\n                importOption: function () {\n                    var opt = parserInput.$re(/^(less|css|multiple|once|inline|reference|optional)/);\n                    if (opt) {\n                        return opt[1];\n                    }\n                },\n                mediaFeature: function () {\n                    var entities = this.entities;\n                    var nodes = [];\n                    var e;\n                    var p;\n                    parserInput.save();\n                    do {\n                        e = entities.keyword() || entities.variable() || entities.mixinLookup();\n                        if (e) {\n                            nodes.push(e);\n                        }\n                        else if (parserInput.$char('(')) {\n                            p = this.property();\n                            e = this.value();\n                            if (parserInput.$char(')')) {\n                                if (p && e) {\n                                    nodes.push(new (tree.Paren)(new (tree.Declaration)(p, e, null, null, parserInput.i, fileInfo, true)));\n                                }\n                                else if (e) {\n                                    nodes.push(new (tree.Paren)(e));\n                                }\n                                else {\n                                    error('badly formed media feature definition');\n                                }\n                            }\n                            else {\n                                error('Missing closing \\')\\'', 'Parse');\n                            }\n                        }\n                    } while (e);\n                    parserInput.forget();\n                    if (nodes.length > 0) {\n                        return new (tree.Expression)(nodes);\n                    }\n                },\n                mediaFeatures: function () {\n                    var entities = this.entities;\n                    var features = [];\n                    var e;\n                    do {\n                        e = this.mediaFeature();\n                        if (e) {\n                            features.push(e);\n                            if (!parserInput.$char(',')) {\n                                break;\n                            }\n                        }\n                        else {\n                            e = entities.variable() || entities.mixinLookup();\n                            if (e) {\n                                features.push(e);\n                                if (!parserInput.$char(',')) {\n                                    break;\n                                }\n                            }\n                        }\n                    } while (e);\n                    return features.length > 0 ? features : null;\n                },\n                media: function () {\n                    var features;\n                    var rules;\n                    var media;\n                    var debugInfo;\n                    var index = parserInput.i;\n                    if (context.dumpLineNumbers) {\n                        debugInfo = getDebugInfo(index);\n                    }\n                    parserInput.save();\n                    if (parserInput.$str('@media')) {\n                        features = this.mediaFeatures();\n                        rules = this.block();\n                        if (!rules) {\n                            error('media definitions require block statements after any features');\n                        }\n                        parserInput.forget();\n                        media = new (tree.Media)(rules, features, index, fileInfo);\n                        if (context.dumpLineNumbers) {\n                            media.debugInfo = debugInfo;\n                        }\n                        return media;\n                    }\n                    parserInput.restore();\n                },\n                //\n                // A @plugin directive, used to import plugins dynamically.\n                //\n                //     @plugin (args) \"lib\";\n                //\n                plugin: function () {\n                    var path;\n                    var args;\n                    var options;\n                    var index = parserInput.i;\n                    var dir = parserInput.$re(/^@plugin?\\s+/);\n                    if (dir) {\n                        args = this.pluginArgs();\n                        if (args) {\n                            options = {\n                                pluginArgs: args,\n                                isPlugin: true\n                            };\n                        }\n                        else {\n                            options = { isPlugin: true };\n                        }\n                        if ((path = this.entities.quoted() || this.entities.url())) {\n                            if (!parserInput.$char(';')) {\n                                parserInput.i = index;\n                                error('missing semi-colon on @plugin');\n                            }\n                            return new (tree.Import)(path, null, options, index, fileInfo);\n                        }\n                        else {\n                            parserInput.i = index;\n                            error('malformed @plugin statement');\n                        }\n                    }\n                },\n                pluginArgs: function () {\n                    // list of options, surrounded by parens\n                    parserInput.save();\n                    if (!parserInput.$char('(')) {\n                        parserInput.restore();\n                        return null;\n                    }\n                    var args = parserInput.$re(/^\\s*([^\\);]+)\\)\\s*/);\n                    if (args[1]) {\n                        parserInput.forget();\n                        return args[1].trim();\n                    }\n                    else {\n                        parserInput.restore();\n                        return null;\n                    }\n                },\n                //\n                // A CSS AtRule\n                //\n                //     @charset \"utf-8\";\n                //\n                atrule: function () {\n                    var index = parserInput.i;\n                    var name;\n                    var value;\n                    var rules;\n                    var nonVendorSpecificName;\n                    var hasIdentifier;\n                    var hasExpression;\n                    var hasUnknown;\n                    var hasBlock = true;\n                    var isRooted = true;\n                    if (parserInput.currentChar() !== '@') {\n                        return;\n                    }\n                    value = this['import']() || this.plugin() || this.media();\n                    if (value) {\n                        return value;\n                    }\n                    parserInput.save();\n                    name = parserInput.$re(/^@[a-z-]+/);\n                    if (!name) {\n                        return;\n                    }\n                    nonVendorSpecificName = name;\n                    if (name.charAt(1) == '-' && name.indexOf('-', 2) > 0) {\n                        nonVendorSpecificName = \"@\" + name.slice(name.indexOf('-', 2) + 1);\n                    }\n                    switch (nonVendorSpecificName) {\n                        case '@charset':\n                            hasIdentifier = true;\n                            hasBlock = false;\n                            break;\n                        case '@namespace':\n                            hasExpression = true;\n                            hasBlock = false;\n                            break;\n                        case '@keyframes':\n                        case '@counter-style':\n                            hasIdentifier = true;\n                            break;\n                        case '@document':\n                        case '@supports':\n                            hasUnknown = true;\n                            isRooted = false;\n                            break;\n                        default:\n                            hasUnknown = true;\n                            break;\n                    }\n                    parserInput.commentStore.length = 0;\n                    if (hasIdentifier) {\n                        value = this.entity();\n                        if (!value) {\n                            error(\"expected \" + name + \" identifier\");\n                        }\n                    }\n                    else if (hasExpression) {\n                        value = this.expression();\n                        if (!value) {\n                            error(\"expected \" + name + \" expression\");\n                        }\n                    }\n                    else if (hasUnknown) {\n                        value = this.permissiveValue(/^[{;]/);\n                        hasBlock = (parserInput.currentChar() === '{');\n                        if (!value) {\n                            if (!hasBlock && parserInput.currentChar() !== ';') {\n                                error(name + \" rule is missing block or ending semi-colon\");\n                            }\n                        }\n                        else if (!value.value) {\n                            value = null;\n                        }\n                    }\n                    if (hasBlock) {\n                        rules = this.blockRuleset();\n                    }\n                    if (rules || (!hasBlock && value && parserInput.$char(';'))) {\n                        parserInput.forget();\n                        return new (tree.AtRule)(name, value, rules, index, fileInfo, context.dumpLineNumbers ? getDebugInfo(index) : null, isRooted);\n                    }\n                    parserInput.restore('at-rule options not recognised');\n                },\n                //\n                // A Value is a comma-delimited list of Expressions\n                //\n                //     font-family: Baskerville, Georgia, serif;\n                //\n                // In a Rule, a Value represents everything after the `:`,\n                // and before the `;`.\n                //\n                value: function () {\n                    var e;\n                    var expressions = [];\n                    var index = parserInput.i;\n                    do {\n                        e = this.expression();\n                        if (e) {\n                            expressions.push(e);\n                            if (!parserInput.$char(',')) {\n                                break;\n                            }\n                        }\n                    } while (e);\n                    if (expressions.length > 0) {\n                        return new (tree.Value)(expressions, index);\n                    }\n                },\n                important: function () {\n                    if (parserInput.currentChar() === '!') {\n                        return parserInput.$re(/^! *important/);\n                    }\n                },\n                sub: function () {\n                    var a;\n                    var e;\n                    parserInput.save();\n                    if (parserInput.$char('(')) {\n                        a = this.addition();\n                        if (a && parserInput.$char(')')) {\n                            parserInput.forget();\n                            e = new (tree.Expression)([a]);\n                            e.parens = true;\n                            return e;\n                        }\n                        parserInput.restore('Expected \\')\\'');\n                        return;\n                    }\n                    parserInput.restore();\n                },\n                multiplication: function () {\n                    var m;\n                    var a;\n                    var op;\n                    var operation;\n                    var isSpaced;\n                    m = this.operand();\n                    if (m) {\n                        isSpaced = parserInput.isWhitespace(-1);\n                        while (true) {\n                            if (parserInput.peek(/^\\/[*\\/]/)) {\n                                break;\n                            }\n                            parserInput.save();\n                            op = parserInput.$char('/') || parserInput.$char('*') || parserInput.$str('./');\n                            if (!op) {\n                                parserInput.forget();\n                                break;\n                            }\n                            a = this.operand();\n                            if (!a) {\n                                parserInput.restore();\n                                break;\n                            }\n                            parserInput.forget();\n                            m.parensInOp = true;\n                            a.parensInOp = true;\n                            operation = new (tree.Operation)(op, [operation || m, a], isSpaced);\n                            isSpaced = parserInput.isWhitespace(-1);\n                        }\n                        return operation || m;\n                    }\n                },\n                addition: function () {\n                    var m;\n                    var a;\n                    var op;\n                    var operation;\n                    var isSpaced;\n                    m = this.multiplication();\n                    if (m) {\n                        isSpaced = parserInput.isWhitespace(-1);\n                        while (true) {\n                            op = parserInput.$re(/^[-+]\\s+/) || (!isSpaced && (parserInput.$char('+') || parserInput.$char('-')));\n                            if (!op) {\n                                break;\n                            }\n                            a = this.multiplication();\n                            if (!a) {\n                                break;\n                            }\n                            m.parensInOp = true;\n                            a.parensInOp = true;\n                            operation = new (tree.Operation)(op, [operation || m, a], isSpaced);\n                            isSpaced = parserInput.isWhitespace(-1);\n                        }\n                        return operation || m;\n                    }\n                },\n                conditions: function () {\n                    var a;\n                    var b;\n                    var index = parserInput.i;\n                    var condition;\n                    a = this.condition(true);\n                    if (a) {\n                        while (true) {\n                            if (!parserInput.peek(/^,\\s*(not\\s*)?\\(/) || !parserInput.$char(',')) {\n                                break;\n                            }\n                            b = this.condition(true);\n                            if (!b) {\n                                break;\n                            }\n                            condition = new (tree.Condition)('or', condition || a, b, index);\n                        }\n                        return condition || a;\n                    }\n                },\n                condition: function (needsParens) {\n                    var result;\n                    var logical;\n                    var next;\n                    function or() {\n                        return parserInput.$str('or');\n                    }\n                    result = this.conditionAnd(needsParens);\n                    if (!result) {\n                        return;\n                    }\n                    logical = or();\n                    if (logical) {\n                        next = this.condition(needsParens);\n                        if (next) {\n                            result = new (tree.Condition)(logical, result, next);\n                        }\n                        else {\n                            return;\n                        }\n                    }\n                    return result;\n                },\n                conditionAnd: function (needsParens) {\n                    var result;\n                    var logical;\n                    var next;\n                    var self = this;\n                    function insideCondition() {\n                        var cond = self.negatedCondition(needsParens) || self.parenthesisCondition(needsParens);\n                        if (!cond && !needsParens) {\n                            return self.atomicCondition(needsParens);\n                        }\n                        return cond;\n                    }\n                    function and() {\n                        return parserInput.$str('and');\n                    }\n                    result = insideCondition();\n                    if (!result) {\n                        return;\n                    }\n                    logical = and();\n                    if (logical) {\n                        next = this.conditionAnd(needsParens);\n                        if (next) {\n                            result = new (tree.Condition)(logical, result, next);\n                        }\n                        else {\n                            return;\n                        }\n                    }\n                    return result;\n                },\n                negatedCondition: function (needsParens) {\n                    if (parserInput.$str('not')) {\n                        var result = this.parenthesisCondition(needsParens);\n                        if (result) {\n                            result.negate = !result.negate;\n                        }\n                        return result;\n                    }\n                },\n                parenthesisCondition: function (needsParens) {\n                    function tryConditionFollowedByParenthesis(me) {\n                        var body;\n                        parserInput.save();\n                        body = me.condition(needsParens);\n                        if (!body) {\n                            parserInput.restore();\n                            return;\n                        }\n                        if (!parserInput.$char(')')) {\n                            parserInput.restore();\n                            return;\n                        }\n                        parserInput.forget();\n                        return body;\n                    }\n                    var body;\n                    parserInput.save();\n                    if (!parserInput.$str('(')) {\n                        parserInput.restore();\n                        return;\n                    }\n                    body = tryConditionFollowedByParenthesis(this);\n                    if (body) {\n                        parserInput.forget();\n                        return body;\n                    }\n                    body = this.atomicCondition(needsParens);\n                    if (!body) {\n                        parserInput.restore();\n                        return;\n                    }\n                    if (!parserInput.$char(')')) {\n                        parserInput.restore(\"expected ')' got '\" + parserInput.currentChar() + \"'\");\n                        return;\n                    }\n                    parserInput.forget();\n                    return body;\n                },\n                atomicCondition: function (needsParens) {\n                    var entities = this.entities;\n                    var index = parserInput.i;\n                    var a;\n                    var b;\n                    var c;\n                    var op;\n                    function cond() {\n                        return this.addition() || entities.keyword() || entities.quoted() || entities.mixinLookup();\n                    }\n                    cond = cond.bind(this);\n                    a = cond();\n                    if (a) {\n                        if (parserInput.$char('>')) {\n                            if (parserInput.$char('=')) {\n                                op = '>=';\n                            }\n                            else {\n                                op = '>';\n                            }\n                        }\n                        else if (parserInput.$char('<')) {\n                            if (parserInput.$char('=')) {\n                                op = '<=';\n                            }\n                            else {\n                                op = '<';\n                            }\n                        }\n                        else if (parserInput.$char('=')) {\n                            if (parserInput.$char('>')) {\n                                op = '=>';\n                            }\n                            else if (parserInput.$char('<')) {\n                                op = '=<';\n                            }\n                            else {\n                                op = '=';\n                            }\n                        }\n                        if (op) {\n                            b = cond();\n                            if (b) {\n                                c = new (tree.Condition)(op, a, b, index, false);\n                            }\n                            else {\n                                error('expected expression');\n                            }\n                        }\n                        else {\n                            c = new (tree.Condition)('=', a, new (tree.Keyword)('true'), index, false);\n                        }\n                        return c;\n                    }\n                },\n                //\n                // An operand is anything that can be part of an operation,\n                // such as a Color, or a Variable\n                //\n                operand: function () {\n                    var entities = this.entities;\n                    var negate;\n                    if (parserInput.peek(/^-[@\\$\\(]/)) {\n                        negate = parserInput.$char('-');\n                    }\n                    var o = this.sub() || entities.dimension() ||\n                        entities.color() || entities.variable() ||\n                        entities.property() || entities.call() ||\n                        entities.quoted(true) || entities.colorKeyword() ||\n                        entities.mixinLookup();\n                    if (negate) {\n                        o.parensInOp = true;\n                        o = new (tree.Negative)(o);\n                    }\n                    return o;\n                },\n                //\n                // Expressions either represent mathematical operations,\n                // or white-space delimited Entities.\n                //\n                //     1px solid black\n                //     @var * 2\n                //\n                expression: function () {\n                    var entities = [];\n                    var e;\n                    var delim;\n                    var index = parserInput.i;\n                    do {\n                        e = this.comment();\n                        if (e) {\n                            entities.push(e);\n                            continue;\n                        }\n                        e = this.addition() || this.entity();\n                        if (e instanceof tree.Comment) {\n                            e = null;\n                        }\n                        if (e) {\n                            entities.push(e);\n                            // operations do not allow keyword \"/\" dimension (e.g. small/20px) so we support that here\n                            if (!parserInput.peek(/^\\/[\\/*]/)) {\n                                delim = parserInput.$char('/');\n                                if (delim) {\n                                    entities.push(new (tree.Anonymous)(delim, index));\n                                }\n                            }\n                        }\n                    } while (e);\n                    if (entities.length > 0) {\n                        return new (tree.Expression)(entities);\n                    }\n                },\n                property: function () {\n                    var name = parserInput.$re(/^(\\*?-?[_a-zA-Z0-9-]+)\\s*:/);\n                    if (name) {\n                        return name[1];\n                    }\n                },\n                ruleProperty: function () {\n                    var name = [];\n                    var index = [];\n                    var s;\n                    var k;\n                    parserInput.save();\n                    var simpleProperty = parserInput.$re(/^([_a-zA-Z0-9-]+)\\s*:/);\n                    if (simpleProperty) {\n                        name = [new (tree.Keyword)(simpleProperty[1])];\n                        parserInput.forget();\n                        return name;\n                    }\n                    function match(re) {\n                        var i = parserInput.i;\n                        var chunk = parserInput.$re(re);\n                        if (chunk) {\n                            index.push(i);\n                            return name.push(chunk[1]);\n                        }\n                    }\n                    match(/^(\\*?)/);\n                    while (true) {\n                        if (!match(/^((?:[\\w-]+)|(?:[@\\$]\\{[\\w-]+\\}))/)) {\n                            break;\n                        }\n                    }\n                    if ((name.length > 1) && match(/^((?:\\+_|\\+)?)\\s*:/)) {\n                        parserInput.forget();\n                        // at last, we have the complete match now. move forward,\n                        // convert name particles to tree objects and return:\n                        if (name[0] === '') {\n                            name.shift();\n                            index.shift();\n                        }\n                        for (k = 0; k < name.length; k++) {\n                            s = name[k];\n                            name[k] = (s.charAt(0) !== '@' && s.charAt(0) !== '$') ?\n                                new (tree.Keyword)(s) :\n                                (s.charAt(0) === '@' ?\n                                    new (tree.Variable)(\"@\" + s.slice(2, -1), index[k], fileInfo) :\n                                    new (tree.Property)(\"$\" + s.slice(2, -1), index[k], fileInfo));\n                        }\n                        return name;\n                    }\n                    parserInput.restore();\n                }\n            }\n        };\n    };\n    Parser.serializeVars = function (vars) {\n        var s = '';\n        for (var name_1 in vars) {\n            if (Object.hasOwnProperty.call(vars, name_1)) {\n                var value = vars[name_1];\n                s += ((name_1[0] === '@') ? '' : '@') + name_1 + \": \" + value + ((String(value).slice(-1) === ';') ? '' : ';');\n            }\n        }\n        return s;\n    };\n\n    function boolean(condition) {\n        return condition ? Keyword.True : Keyword.False;\n    }\n    /**\n     * Functions with evalArgs set to false are sent context\n     * as the first argument.\n     */\n    function If(context, condition, trueValue, falseValue) {\n        return condition.eval(context) ? trueValue.eval(context)\n            : (falseValue ? falseValue.eval(context) : new Anonymous);\n    }\n    If.evalArgs = false;\n    function isdefined(context, variable) {\n        try {\n            variable.eval(context);\n            return Keyword.True;\n        }\n        catch (e) {\n            return Keyword.False;\n        }\n    }\n    isdefined.evalArgs = false;\n    var boolean$1 = { isdefined: isdefined, boolean: boolean, 'if': If };\n\n    var colorFunctions;\n    function clamp(val) {\n        return Math.min(1, Math.max(0, val));\n    }\n    function hsla(origColor, hsl) {\n        var color = colorFunctions.hsla(hsl.h, hsl.s, hsl.l, hsl.a);\n        if (color) {\n            if (origColor.value &&\n                /^(rgb|hsl)/.test(origColor.value)) {\n                color.value = origColor.value;\n            }\n            else {\n                color.value = 'rgb';\n            }\n            return color;\n        }\n    }\n    function toHSL(color) {\n        if (color.toHSL) {\n            return color.toHSL();\n        }\n        else {\n            throw new Error('Argument cannot be evaluated to a color');\n        }\n    }\n    function toHSV(color) {\n        if (color.toHSV) {\n            return color.toHSV();\n        }\n        else {\n            throw new Error('Argument cannot be evaluated to a color');\n        }\n    }\n    function number$1(n) {\n        if (n instanceof Dimension) {\n            return parseFloat(n.unit.is('%') ? n.value / 100 : n.value);\n        }\n        else if (typeof n === 'number') {\n            return n;\n        }\n        else {\n            throw {\n                type: 'Argument',\n                message: 'color functions take numbers as parameters'\n            };\n        }\n    }\n    function scaled(n, size) {\n        if (n instanceof Dimension && n.unit.is('%')) {\n            return parseFloat(n.value * size / 100);\n        }\n        else {\n            return number$1(n);\n        }\n    }\n    colorFunctions = {\n        rgb: function (r, g, b) {\n            var a = 1;\n            /**\n             * Comma-less syntax\n             *   e.g. rgb(0 128 255 / 50%)\n             */\n            if (r instanceof Expression) {\n                var val = r.value;\n                r = val[0];\n                g = val[1];\n                b = val[2];\n                /**\n                 * @todo - should this be normalized in\n                 *   function caller? Or parsed differently?\n                 */\n                if (b instanceof Operation) {\n                    var op = b;\n                    b = op.operands[0];\n                    a = op.operands[1];\n                }\n            }\n            var color = colorFunctions.rgba(r, g, b, a);\n            if (color) {\n                color.value = 'rgb';\n                return color;\n            }\n        },\n        rgba: function (r, g, b, a) {\n            try {\n                if (r instanceof Color) {\n                    if (g) {\n                        a = number$1(g);\n                    }\n                    else {\n                        a = r.alpha;\n                    }\n                    return new Color(r.rgb, a, 'rgba');\n                }\n                var rgb = [r, g, b].map(function (c) { return scaled(c, 255); });\n                a = number$1(a);\n                return new Color(rgb, a, 'rgba');\n            }\n            catch (e) { }\n        },\n        hsl: function (h, s, l) {\n            var a = 1;\n            if (h instanceof Expression) {\n                var val = h.value;\n                h = val[0];\n                s = val[1];\n                l = val[2];\n                if (l instanceof Operation) {\n                    var op = l;\n                    l = op.operands[0];\n                    a = op.operands[1];\n                }\n            }\n            var color = colorFunctions.hsla(h, s, l, a);\n            if (color) {\n                color.value = 'hsl';\n                return color;\n            }\n        },\n        hsla: function (h, s, l, a) {\n            try {\n                if (h instanceof Color) {\n                    if (s) {\n                        a = number$1(s);\n                    }\n                    else {\n                        a = h.alpha;\n                    }\n                    return new Color(h.rgb, a, 'hsla');\n                }\n                var m1_1;\n                var m2_1;\n                function hue(h) {\n                    h = h < 0 ? h + 1 : (h > 1 ? h - 1 : h);\n                    if (h * 6 < 1) {\n                        return m1_1 + (m2_1 - m1_1) * h * 6;\n                    }\n                    else if (h * 2 < 1) {\n                        return m2_1;\n                    }\n                    else if (h * 3 < 2) {\n                        return m1_1 + (m2_1 - m1_1) * (2 / 3 - h) * 6;\n                    }\n                    else {\n                        return m1_1;\n                    }\n                }\n                h = (number$1(h) % 360) / 360;\n                s = clamp(number$1(s));\n                l = clamp(number$1(l));\n                a = clamp(number$1(a));\n                m2_1 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n                m1_1 = l * 2 - m2_1;\n                var rgb = [\n                    hue(h + 1 / 3) * 255,\n                    hue(h) * 255,\n                    hue(h - 1 / 3) * 255\n                ];\n                a = number$1(a);\n                return new Color(rgb, a, 'hsla');\n            }\n            catch (e) { }\n        },\n        hsv: function (h, s, v) {\n            return colorFunctions.hsva(h, s, v, 1.0);\n        },\n        hsva: function (h, s, v, a) {\n            h = ((number$1(h) % 360) / 360) * 360;\n            s = number$1(s);\n            v = number$1(v);\n            a = number$1(a);\n            var i;\n            var f;\n            i = Math.floor((h / 60) % 6);\n            f = (h / 60) - i;\n            var vs = [v,\n                v * (1 - s),\n                v * (1 - f * s),\n                v * (1 - (1 - f) * s)];\n            var perm = [[0, 3, 1],\n                [2, 0, 1],\n                [1, 0, 3],\n                [1, 2, 0],\n                [3, 1, 0],\n                [0, 1, 2]];\n            return colorFunctions.rgba(vs[perm[i][0]] * 255, vs[perm[i][1]] * 255, vs[perm[i][2]] * 255, a);\n        },\n        hue: function (color) {\n            return new Dimension(toHSL(color).h);\n        },\n        saturation: function (color) {\n            return new Dimension(toHSL(color).s * 100, '%');\n        },\n        lightness: function (color) {\n            return new Dimension(toHSL(color).l * 100, '%');\n        },\n        hsvhue: function (color) {\n            return new Dimension(toHSV(color).h);\n        },\n        hsvsaturation: function (color) {\n            return new Dimension(toHSV(color).s * 100, '%');\n        },\n        hsvvalue: function (color) {\n            return new Dimension(toHSV(color).v * 100, '%');\n        },\n        red: function (color) {\n            return new Dimension(color.rgb[0]);\n        },\n        green: function (color) {\n            return new Dimension(color.rgb[1]);\n        },\n        blue: function (color) {\n            return new Dimension(color.rgb[2]);\n        },\n        alpha: function (color) {\n            return new Dimension(toHSL(color).a);\n        },\n        luma: function (color) {\n            return new Dimension(color.luma() * color.alpha * 100, '%');\n        },\n        luminance: function (color) {\n            var luminance = (0.2126 * color.rgb[0] / 255) +\n                (0.7152 * color.rgb[1] / 255) +\n                (0.0722 * color.rgb[2] / 255);\n            return new Dimension(luminance * color.alpha * 100, '%');\n        },\n        saturate: function (color, amount, method) {\n            // filter: saturate(3.2);\n            // should be kept as is, so check for color\n            if (!color.rgb) {\n                return null;\n            }\n            var hsl = toHSL(color);\n            if (typeof method !== 'undefined' && method.value === 'relative') {\n                hsl.s += hsl.s * amount.value / 100;\n            }\n            else {\n                hsl.s += amount.value / 100;\n            }\n            hsl.s = clamp(hsl.s);\n            return hsla(color, hsl);\n        },\n        desaturate: function (color, amount, method) {\n            var hsl = toHSL(color);\n            if (typeof method !== 'undefined' && method.value === 'relative') {\n                hsl.s -= hsl.s * amount.value / 100;\n            }\n            else {\n                hsl.s -= amount.value / 100;\n            }\n            hsl.s = clamp(hsl.s);\n            return hsla(color, hsl);\n        },\n        lighten: function (color, amount, method) {\n            var hsl = toHSL(color);\n            if (typeof method !== 'undefined' && method.value === 'relative') {\n                hsl.l += hsl.l * amount.value / 100;\n            }\n            else {\n                hsl.l += amount.value / 100;\n            }\n            hsl.l = clamp(hsl.l);\n            return hsla(color, hsl);\n        },\n        darken: function (color, amount, method) {\n            var hsl = toHSL(color);\n            if (typeof method !== 'undefined' && method.value === 'relative') {\n                hsl.l -= hsl.l * amount.value / 100;\n            }\n            else {\n                hsl.l -= amount.value / 100;\n            }\n            hsl.l = clamp(hsl.l);\n            return hsla(color, hsl);\n        },\n        fadein: function (color, amount, method) {\n            var hsl = toHSL(color);\n            if (typeof method !== 'undefined' && method.value === 'relative') {\n                hsl.a += hsl.a * amount.value / 100;\n            }\n            else {\n                hsl.a += amount.value / 100;\n            }\n            hsl.a = clamp(hsl.a);\n            return hsla(color, hsl);\n        },\n        fadeout: function (color, amount, method) {\n            var hsl = toHSL(color);\n            if (typeof method !== 'undefined' && method.value === 'relative') {\n                hsl.a -= hsl.a * amount.value / 100;\n            }\n            else {\n                hsl.a -= amount.value / 100;\n            }\n            hsl.a = clamp(hsl.a);\n            return hsla(color, hsl);\n        },\n        fade: function (color, amount) {\n            var hsl = toHSL(color);\n            hsl.a = amount.value / 100;\n            hsl.a = clamp(hsl.a);\n            return hsla(color, hsl);\n        },\n        spin: function (color, amount) {\n            var hsl = toHSL(color);\n            var hue = (hsl.h + amount.value) % 360;\n            hsl.h = hue < 0 ? 360 + hue : hue;\n            return hsla(color, hsl);\n        },\n        //\n        // Copyright (c) 2006-2009 Hampton Catlin, Natalie Weizenbaum, and Chris Eppstein\n        // http://sass-lang.com\n        //\n        mix: function (color1, color2, weight) {\n            if (!weight) {\n                weight = new Dimension(50);\n            }\n            var p = weight.value / 100.0;\n            var w = p * 2 - 1;\n            var a = toHSL(color1).a - toHSL(color2).a;\n            var w1 = (((w * a == -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n            var w2 = 1 - w1;\n            var rgb = [color1.rgb[0] * w1 + color2.rgb[0] * w2,\n                color1.rgb[1] * w1 + color2.rgb[1] * w2,\n                color1.rgb[2] * w1 + color2.rgb[2] * w2];\n            var alpha = color1.alpha * p + color2.alpha * (1 - p);\n            return new Color(rgb, alpha);\n        },\n        greyscale: function (color) {\n            return colorFunctions.desaturate(color, new Dimension(100));\n        },\n        contrast: function (color, dark, light, threshold) {\n            // filter: contrast(3.2);\n            // should be kept as is, so check for color\n            if (!color.rgb) {\n                return null;\n            }\n            if (typeof light === 'undefined') {\n                light = colorFunctions.rgba(255, 255, 255, 1.0);\n            }\n            if (typeof dark === 'undefined') {\n                dark = colorFunctions.rgba(0, 0, 0, 1.0);\n            }\n            // Figure out which is actually light and dark:\n            if (dark.luma() > light.luma()) {\n                var t = light;\n                light = dark;\n                dark = t;\n            }\n            if (typeof threshold === 'undefined') {\n                threshold = 0.43;\n            }\n            else {\n                threshold = number$1(threshold);\n            }\n            if (color.luma() < threshold) {\n                return light;\n            }\n            else {\n                return dark;\n            }\n        },\n        // Changes made in 2.7.0 - Reverted in 3.0.0\n        // contrast: function (color, color1, color2, threshold) {\n        //     // Return which of `color1` and `color2` has the greatest contrast with `color`\n        //     // according to the standard WCAG contrast ratio calculation.\n        //     // http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n        //     // The threshold param is no longer used, in line with SASS.\n        //     // filter: contrast(3.2);\n        //     // should be kept as is, so check for color\n        //     if (!color.rgb) {\n        //         return null;\n        //     }\n        //     if (typeof color1 === 'undefined') {\n        //         color1 = colorFunctions.rgba(0, 0, 0, 1.0);\n        //     }\n        //     if (typeof color2 === 'undefined') {\n        //         color2 = colorFunctions.rgba(255, 255, 255, 1.0);\n        //     }\n        //     var contrast1, contrast2;\n        //     var luma = color.luma();\n        //     var luma1 = color1.luma();\n        //     var luma2 = color2.luma();\n        //     // Calculate contrast ratios for each color\n        //     if (luma > luma1) {\n        //         contrast1 = (luma + 0.05) / (luma1 + 0.05);\n        //     } else {\n        //         contrast1 = (luma1 + 0.05) / (luma + 0.05);\n        //     }\n        //     if (luma > luma2) {\n        //         contrast2 = (luma + 0.05) / (luma2 + 0.05);\n        //     } else {\n        //         contrast2 = (luma2 + 0.05) / (luma + 0.05);\n        //     }\n        //     if (contrast1 > contrast2) {\n        //         return color1;\n        //     } else {\n        //         return color2;\n        //     }\n        // },\n        argb: function (color) {\n            return new Anonymous(color.toARGB());\n        },\n        color: function (c) {\n            if ((c instanceof Quoted) &&\n                (/^#([A-Fa-f0-9]{8}|[A-Fa-f0-9]{6}|[A-Fa-f0-9]{3,4})$/i.test(c.value))) {\n                var val = c.value.slice(1);\n                return new Color(val, undefined, \"#\" + val);\n            }\n            if ((c instanceof Color) || (c = Color.fromKeyword(c.value))) {\n                c.value = undefined;\n                return c;\n            }\n            throw {\n                type: 'Argument',\n                message: 'argument must be a color keyword or 3|4|6|8 digit hex e.g. #FFF'\n            };\n        },\n        tint: function (color, amount) {\n            return colorFunctions.mix(colorFunctions.rgb(255, 255, 255), color, amount);\n        },\n        shade: function (color, amount) {\n            return colorFunctions.mix(colorFunctions.rgb(0, 0, 0), color, amount);\n        }\n    };\n    var color = colorFunctions;\n\n    // Color Blending\n    // ref: http://www.w3.org/TR/compositing-1\n    function colorBlend(mode, color1, color2) {\n        var ab = color1.alpha; // result\n        var // backdrop\n        cb;\n        var as = color2.alpha;\n        var // source\n        cs;\n        var ar;\n        var cr;\n        var r = [];\n        ar = as + ab * (1 - as);\n        for (var i = 0; i < 3; i++) {\n            cb = color1.rgb[i] / 255;\n            cs = color2.rgb[i] / 255;\n            cr = mode(cb, cs);\n            if (ar) {\n                cr = (as * cs + ab * (cb -\n                    as * (cb + cs - cr))) / ar;\n            }\n            r[i] = cr * 255;\n        }\n        return new Color(r, ar);\n    }\n    var colorBlendModeFunctions = {\n        multiply: function (cb, cs) {\n            return cb * cs;\n        },\n        screen: function (cb, cs) {\n            return cb + cs - cb * cs;\n        },\n        overlay: function (cb, cs) {\n            cb *= 2;\n            return (cb <= 1) ?\n                colorBlendModeFunctions.multiply(cb, cs) :\n                colorBlendModeFunctions.screen(cb - 1, cs);\n        },\n        softlight: function (cb, cs) {\n            var d = 1;\n            var e = cb;\n            if (cs > 0.5) {\n                e = 1;\n                d = (cb > 0.25) ? Math.sqrt(cb)\n                    : ((16 * cb - 12) * cb + 4) * cb;\n            }\n            return cb - (1 - 2 * cs) * e * (d - cb);\n        },\n        hardlight: function (cb, cs) {\n            return colorBlendModeFunctions.overlay(cs, cb);\n        },\n        difference: function (cb, cs) {\n            return Math.abs(cb - cs);\n        },\n        exclusion: function (cb, cs) {\n            return cb + cs - 2 * cb * cs;\n        },\n        // non-w3c functions:\n        average: function (cb, cs) {\n            return (cb + cs) / 2;\n        },\n        negation: function (cb, cs) {\n            return 1 - Math.abs(cb + cs - 1);\n        }\n    };\n    for (var f$1 in colorBlendModeFunctions) {\n        if (colorBlendModeFunctions.hasOwnProperty(f$1)) {\n            colorBlend[f$1] = colorBlend.bind(null, colorBlendModeFunctions[f$1]);\n        }\n    }\n\n    var dataUri = (function (environment) {\n        var fallback = function (functionThis, node) { return new URL(node, functionThis.index, functionThis.currentFileInfo).eval(functionThis.context); };\n        return { 'data-uri': function (mimetypeNode, filePathNode) {\n                if (!filePathNode) {\n                    filePathNode = mimetypeNode;\n                    mimetypeNode = null;\n                }\n                var mimetype = mimetypeNode && mimetypeNode.value;\n                var filePath = filePathNode.value;\n                var currentFileInfo = this.currentFileInfo;\n                var currentDirectory = currentFileInfo.rewriteUrls ?\n                    currentFileInfo.currentDirectory : currentFileInfo.entryPath;\n                var fragmentStart = filePath.indexOf('#');\n                var fragment = '';\n                if (fragmentStart !== -1) {\n                    fragment = filePath.slice(fragmentStart);\n                    filePath = filePath.slice(0, fragmentStart);\n                }\n                var context = clone(this.context);\n                context.rawBuffer = true;\n                var fileManager = environment.getFileManager(filePath, currentDirectory, context, environment, true);\n                if (!fileManager) {\n                    return fallback(this, filePathNode);\n                }\n                var useBase64 = false;\n                // detect the mimetype if not given\n                if (!mimetypeNode) {\n                    mimetype = environment.mimeLookup(filePath);\n                    if (mimetype === 'image/svg+xml') {\n                        useBase64 = false;\n                    }\n                    else {\n                        // use base 64 unless it's an ASCII or UTF-8 format\n                        var charset = environment.charsetLookup(mimetype);\n                        useBase64 = ['US-ASCII', 'UTF-8'].indexOf(charset) < 0;\n                    }\n                    if (useBase64) {\n                        mimetype += ';base64';\n                    }\n                }\n                else {\n                    useBase64 = /;base64$/.test(mimetype);\n                }\n                var fileSync = fileManager.loadFileSync(filePath, currentDirectory, context, environment);\n                if (!fileSync.contents) {\n                    logger$1.warn(\"Skipped data-uri embedding of \" + filePath + \" because file not found\");\n                    return fallback(this, filePathNode || mimetypeNode);\n                }\n                var buf = fileSync.contents;\n                if (useBase64 && !environment.encodeBase64) {\n                    return fallback(this, filePathNode);\n                }\n                buf = useBase64 ? environment.encodeBase64(buf) : encodeURIComponent(buf);\n                var uri = \"data:\" + mimetype + \",\" + buf + fragment;\n                return new URL(new Quoted(\"\\\"\" + uri + \"\\\"\", uri, false, this.index, this.currentFileInfo), this.index, this.currentFileInfo);\n            } };\n    });\n\n    var getItemsFromNode = function (node) {\n        // handle non-array values as an array of length 1\n        // return 'undefined' if index is invalid\n        var items = Array.isArray(node.value) ?\n            node.value : Array(node);\n        return items;\n    };\n    var list = {\n        _SELF: function (n) {\n            return n;\n        },\n        '~': function () {\n            var expr = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                expr[_i] = arguments[_i];\n            }\n            if (expr.length === 1) {\n                return expr[0];\n            }\n            return new Value(expr);\n        },\n        extract: function (values, index) {\n            // (1-based index)\n            index = index.value - 1;\n            return getItemsFromNode(values)[index];\n        },\n        length: function (values) {\n            return new Dimension(getItemsFromNode(values).length);\n        },\n        /**\n         * Creates a Less list of incremental values.\n         * Modeled after Lodash's range function, also exists natively in PHP\n         *\n         * @param {Dimension} [start=1]\n         * @param {Dimension} end  - e.g. 10 or 10px - unit is added to output\n         * @param {Dimension} [step=1]\n         */\n        range: function (start, end, step) {\n            var from;\n            var to;\n            var stepValue = 1;\n            var list = [];\n            if (end) {\n                to = end;\n                from = start.value;\n                if (step) {\n                    stepValue = step.value;\n                }\n            }\n            else {\n                from = 1;\n                to = start;\n            }\n            for (var i = from; i <= to.value; i += stepValue) {\n                list.push(new Dimension(i, to.unit));\n            }\n            return new Expression(list);\n        },\n        each: function (list, rs) {\n            var _this = this;\n            var rules = [];\n            var newRules;\n            var iterator;\n            var tryEval = function (val) {\n                if (val instanceof Node) {\n                    return val.eval(_this.context);\n                }\n                return val;\n            };\n            if (list.value && !(list instanceof Quoted)) {\n                if (Array.isArray(list.value)) {\n                    iterator = list.value.map(tryEval);\n                }\n                else {\n                    iterator = [tryEval(list.value)];\n                }\n            }\n            else if (list.ruleset) {\n                iterator = tryEval(list.ruleset).rules;\n            }\n            else if (list.rules) {\n                iterator = list.rules.map(tryEval);\n            }\n            else if (Array.isArray(list)) {\n                iterator = list.map(tryEval);\n            }\n            else {\n                iterator = [tryEval(list)];\n            }\n            var valueName = '@value';\n            var keyName = '@key';\n            var indexName = '@index';\n            if (rs.params) {\n                valueName = rs.params[0] && rs.params[0].name;\n                keyName = rs.params[1] && rs.params[1].name;\n                indexName = rs.params[2] && rs.params[2].name;\n                rs = rs.rules;\n            }\n            else {\n                rs = rs.ruleset;\n            }\n            for (var i = 0; i < iterator.length; i++) {\n                var key = void 0;\n                var value = void 0;\n                var item = iterator[i];\n                if (item instanceof Declaration) {\n                    key = typeof item.name === 'string' ? item.name : item.name[0].value;\n                    value = item.value;\n                }\n                else {\n                    key = new Dimension(i + 1);\n                    value = item;\n                }\n                if (item instanceof Comment) {\n                    continue;\n                }\n                newRules = rs.rules.slice(0);\n                if (valueName) {\n                    newRules.push(new Declaration(valueName, value, false, false, this.index, this.currentFileInfo));\n                }\n                if (indexName) {\n                    newRules.push(new Declaration(indexName, new Dimension(i + 1), false, false, this.index, this.currentFileInfo));\n                }\n                if (keyName) {\n                    newRules.push(new Declaration(keyName, key, false, false, this.index, this.currentFileInfo));\n                }\n                rules.push(new Ruleset([new (Selector)([new Element(\"\", '&')])], newRules, rs.strictImports, rs.visibilityInfo()));\n            }\n            return new Ruleset([new (Selector)([new Element(\"\", '&')])], rules, rs.strictImports, rs.visibilityInfo()).eval(this.context);\n        }\n    };\n\n    var MathHelper = function (fn, unit, n) {\n        if (!(n instanceof Dimension)) {\n            throw { type: 'Argument', message: 'argument must be a number' };\n        }\n        if (unit == null) {\n            unit = n.unit;\n        }\n        else {\n            n = n.unify();\n        }\n        return new Dimension(fn(parseFloat(n.value)), unit);\n    };\n\n    var mathFunctions = {\n        // name,  unit\n        ceil: null,\n        floor: null,\n        sqrt: null,\n        abs: null,\n        tan: '',\n        sin: '',\n        cos: '',\n        atan: 'rad',\n        asin: 'rad',\n        acos: 'rad'\n    };\n    for (var f in mathFunctions) {\n        if (mathFunctions.hasOwnProperty(f)) {\n            mathFunctions[f] = MathHelper.bind(null, Math[f], mathFunctions[f]);\n        }\n    }\n    mathFunctions.round = function (n, f) {\n        var fraction = typeof f === 'undefined' ? 0 : f.value;\n        return MathHelper(function (num) { return num.toFixed(fraction); }, null, n);\n    };\n\n    var minMax = function (isMin, args) {\n        args = Array.prototype.slice.call(args);\n        switch (args.length) {\n            case 0: throw { type: 'Argument', message: 'one or more arguments required' };\n        }\n        var i; // key is the unit.toString() for unified Dimension values,\n        var j;\n        var current;\n        var currentUnified;\n        var referenceUnified;\n        var unit;\n        var unitStatic;\n        var unitClone;\n        var // elems only contains original argument values.\n        order = [];\n        var values = {};\n        // value is the index into the order array.\n        for (i = 0; i < args.length; i++) {\n            current = args[i];\n            if (!(current instanceof Dimension)) {\n                if (Array.isArray(args[i].value)) {\n                    Array.prototype.push.apply(args, Array.prototype.slice.call(args[i].value));\n                }\n                continue;\n            }\n            currentUnified = current.unit.toString() === '' && unitClone !== undefined ? new Dimension(current.value, unitClone).unify() : current.unify();\n            unit = currentUnified.unit.toString() === '' && unitStatic !== undefined ? unitStatic : currentUnified.unit.toString();\n            unitStatic = unit !== '' && unitStatic === undefined || unit !== '' && order[0].unify().unit.toString() === '' ? unit : unitStatic;\n            unitClone = unit !== '' && unitClone === undefined ? current.unit.toString() : unitClone;\n            j = values[''] !== undefined && unit !== '' && unit === unitStatic ? values[''] : values[unit];\n            if (j === undefined) {\n                if (unitStatic !== undefined && unit !== unitStatic) {\n                    throw { type: 'Argument', message: 'incompatible types' };\n                }\n                values[unit] = order.length;\n                order.push(current);\n                continue;\n            }\n            referenceUnified = order[j].unit.toString() === '' && unitClone !== undefined ? new Dimension(order[j].value, unitClone).unify() : order[j].unify();\n            if (isMin && currentUnified.value < referenceUnified.value ||\n                !isMin && currentUnified.value > referenceUnified.value) {\n                order[j] = current;\n            }\n        }\n        if (order.length == 1) {\n            return order[0];\n        }\n        args = order.map(function (a) { return a.toCSS(this.context); }).join(this.context.compress ? ',' : ', ');\n        return new Anonymous((isMin ? 'min' : 'max') + \"(\" + args + \")\");\n    };\n    var number = {\n        min: function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            try {\n                return minMax(true, args);\n            }\n            catch (e) { }\n        },\n        max: function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            try {\n                return minMax(false, args);\n            }\n            catch (e) { }\n        },\n        convert: function (val, unit) {\n            return val.convertTo(unit.value);\n        },\n        pi: function () {\n            return new Dimension(Math.PI);\n        },\n        mod: function (a, b) {\n            return new Dimension(a.value % b.value, a.unit);\n        },\n        pow: function (x, y) {\n            if (typeof x === 'number' && typeof y === 'number') {\n                x = new Dimension(x);\n                y = new Dimension(y);\n            }\n            else if (!(x instanceof Dimension) || !(y instanceof Dimension)) {\n                throw { type: 'Argument', message: 'arguments must be numbers' };\n            }\n            return new Dimension(Math.pow(x.value, y.value), x.unit);\n        },\n        percentage: function (n) {\n            var result = MathHelper(function (num) { return num * 100; }, '%', n);\n            return result;\n        }\n    };\n\n    var string = {\n        e: function (str) {\n            return new Quoted('\"', str instanceof JavaScript ? str.evaluated : str.value, true);\n        },\n        escape: function (str) {\n            return new Anonymous(encodeURI(str.value).replace(/=/g, '%3D').replace(/:/g, '%3A').replace(/#/g, '%23').replace(/;/g, '%3B')\n                .replace(/\\(/g, '%28').replace(/\\)/g, '%29'));\n        },\n        replace: function (string, pattern, replacement, flags) {\n            var result = string.value;\n            replacement = (replacement.type === 'Quoted') ?\n                replacement.value : replacement.toCSS();\n            result = result.replace(new RegExp(pattern.value, flags ? flags.value : ''), replacement);\n            return new Quoted(string.quote || '', result, string.escaped);\n        },\n        '%': function (string /* arg, arg, ... */) {\n            var args = Array.prototype.slice.call(arguments, 1);\n            var result = string.value;\n            var _loop_1 = function (i) {\n                /* jshint loopfunc:true */\n                result = result.replace(/%[sda]/i, function (token) {\n                    var value = ((args[i].type === 'Quoted') &&\n                        token.match(/s/i)) ? args[i].value : args[i].toCSS();\n                    return token.match(/[A-Z]$/) ? encodeURIComponent(value) : value;\n                });\n            };\n            for (var i = 0; i < args.length; i++) {\n                _loop_1(i);\n            }\n            result = result.replace(/%%/g, '%');\n            return new Quoted(string.quote || '', result, string.escaped);\n        }\n    };\n\n    var svg = (function (environment) {\n        return { 'svg-gradient': function (direction) {\n                var stops;\n                var gradientDirectionSvg;\n                var gradientType = 'linear';\n                var rectangleDimension = 'x=\"0\" y=\"0\" width=\"1\" height=\"1\"';\n                var renderEnv = { compress: false };\n                var returner;\n                var directionValue = direction.toCSS(renderEnv);\n                var i;\n                var color;\n                var position;\n                var positionValue;\n                var alpha;\n                function throwArgumentDescriptor() {\n                    throw { type: 'Argument',\n                        message: 'svg-gradient expects direction, start_color [start_position], [color position,]...,' +\n                            ' end_color [end_position] or direction, color list' };\n                }\n                if (arguments.length == 2) {\n                    if (arguments[1].value.length < 2) {\n                        throwArgumentDescriptor();\n                    }\n                    stops = arguments[1].value;\n                }\n                else if (arguments.length < 3) {\n                    throwArgumentDescriptor();\n                }\n                else {\n                    stops = Array.prototype.slice.call(arguments, 1);\n                }\n                switch (directionValue) {\n                    case 'to bottom':\n                        gradientDirectionSvg = 'x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\"';\n                        break;\n                    case 'to right':\n                        gradientDirectionSvg = 'x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\"';\n                        break;\n                    case 'to bottom right':\n                        gradientDirectionSvg = 'x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\"';\n                        break;\n                    case 'to top right':\n                        gradientDirectionSvg = 'x1=\"0%\" y1=\"100%\" x2=\"100%\" y2=\"0%\"';\n                        break;\n                    case 'ellipse':\n                    case 'ellipse at center':\n                        gradientType = 'radial';\n                        gradientDirectionSvg = 'cx=\"50%\" cy=\"50%\" r=\"75%\"';\n                        rectangleDimension = 'x=\"-50\" y=\"-50\" width=\"101\" height=\"101\"';\n                        break;\n                    default:\n                        throw { type: 'Argument', message: 'svg-gradient direction must be \\'to bottom\\', \\'to right\\',' +\n                                ' \\'to bottom right\\', \\'to top right\\' or \\'ellipse at center\\'' };\n                }\n                returner = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 1 1\\\"><\" + gradientType + \"Gradient id=\\\"g\\\" \" + gradientDirectionSvg + \">\";\n                for (i = 0; i < stops.length; i += 1) {\n                    if (stops[i] instanceof Expression) {\n                        color = stops[i].value[0];\n                        position = stops[i].value[1];\n                    }\n                    else {\n                        color = stops[i];\n                        position = undefined;\n                    }\n                    if (!(color instanceof Color) || (!((i === 0 || i + 1 === stops.length) && position === undefined) && !(position instanceof Dimension))) {\n                        throwArgumentDescriptor();\n                    }\n                    positionValue = position ? position.toCSS(renderEnv) : i === 0 ? '0%' : '100%';\n                    alpha = color.alpha;\n                    returner += \"<stop offset=\\\"\" + positionValue + \"\\\" stop-color=\\\"\" + color.toRGB() + \"\\\"\" + (alpha < 1 ? \" stop-opacity=\\\"\" + alpha + \"\\\"\" : '') + \"/>\";\n                }\n                returner += \"</\" + gradientType + \"Gradient><rect \" + rectangleDimension + \" fill=\\\"url(#g)\\\" /></svg>\";\n                returner = encodeURIComponent(returner);\n                returner = \"data:image/svg+xml,\" + returner;\n                return new URL(new Quoted(\"'\" + returner + \"'\", returner, false, this.index, this.currentFileInfo), this.index, this.currentFileInfo);\n            } };\n    });\n\n    var isa = function (n, Type) { return (n instanceof Type) ? Keyword.True : Keyword.False; };\n    var isunit = function (n, unit) {\n        if (unit === undefined) {\n            throw { type: 'Argument', message: 'missing the required second argument to isunit.' };\n        }\n        unit = typeof unit.value === 'string' ? unit.value : unit;\n        if (typeof unit !== 'string') {\n            throw { type: 'Argument', message: 'Second argument to isunit should be a unit or a string.' };\n        }\n        return (n instanceof Dimension) && n.unit.is(unit) ? Keyword.True : Keyword.False;\n    };\n    var types = {\n        isruleset: function (n) {\n            return isa(n, DetachedRuleset);\n        },\n        iscolor: function (n) {\n            return isa(n, Color);\n        },\n        isnumber: function (n) {\n            return isa(n, Dimension);\n        },\n        isstring: function (n) {\n            return isa(n, Quoted);\n        },\n        iskeyword: function (n) {\n            return isa(n, Keyword);\n        },\n        isurl: function (n) {\n            return isa(n, URL);\n        },\n        ispixel: function (n) {\n            return isunit(n, 'px');\n        },\n        ispercentage: function (n) {\n            return isunit(n, '%');\n        },\n        isem: function (n) {\n            return isunit(n, 'em');\n        },\n        isunit: isunit,\n        unit: function (val, unit) {\n            if (!(val instanceof Dimension)) {\n                throw { type: 'Argument',\n                    message: \"the first argument to unit must be a number\" + (val instanceof Operation ? '. Have you forgotten parenthesis?' : '') };\n            }\n            if (unit) {\n                if (unit instanceof Keyword) {\n                    unit = unit.value;\n                }\n                else {\n                    unit = unit.toCSS();\n                }\n            }\n            else {\n                unit = '';\n            }\n            return new Dimension(val.value, unit);\n        },\n        'get-unit': function (n) {\n            return new Anonymous(n.unit);\n        }\n    };\n\n    var functions = (function (environment) {\n        var functions = { functionRegistry: functionRegistry, functionCaller: functionCaller };\n        // register functions\n        functionRegistry.addMultiple(boolean$1);\n        functionRegistry.add('default', defaultFunc.eval.bind(defaultFunc));\n        functionRegistry.addMultiple(color);\n        functionRegistry.addMultiple(colorBlend);\n        functionRegistry.addMultiple(dataUri(environment));\n        functionRegistry.addMultiple(list);\n        functionRegistry.addMultiple(mathFunctions);\n        functionRegistry.addMultiple(number);\n        functionRegistry.addMultiple(string);\n        functionRegistry.addMultiple(svg());\n        functionRegistry.addMultiple(types);\n        return functions;\n    });\n\n    function transformTree (root, options) {\n        options = options || {};\n        var evaldRoot;\n        var variables = options.variables;\n        var evalEnv = new contexts.Eval(options);\n        //\n        // Allows setting variables with a hash, so:\n        //\n        //   `{ color: new tree.Color('#f01') }` will become:\n        //\n        //   new tree.Declaration('@color',\n        //     new tree.Value([\n        //       new tree.Expression([\n        //         new tree.Color('#f01')\n        //       ])\n        //     ])\n        //   )\n        //\n        if (typeof variables === 'object' && !Array.isArray(variables)) {\n            variables = Object.keys(variables).map(function (k) {\n                var value = variables[k];\n                if (!(value instanceof tree.Value)) {\n                    if (!(value instanceof tree.Expression)) {\n                        value = new tree.Expression([value]);\n                    }\n                    value = new tree.Value([value]);\n                }\n                return new tree.Declaration(\"@\" + k, value, false, null, 0);\n            });\n            evalEnv.frames = [new tree.Ruleset(null, variables)];\n        }\n        var visitors$1 = [\n            new visitors.JoinSelectorVisitor(),\n            new visitors.MarkVisibleSelectorsVisitor(true),\n            new visitors.ExtendVisitor(),\n            new visitors.ToCSSVisitor({ compress: Boolean(options.compress) })\n        ];\n        var preEvalVisitors = [];\n        var v;\n        var visitorIterator;\n        /**\n         * first() / get() allows visitors to be added while visiting\n         *\n         * @todo Add scoping for visitors just like functions for @plugin; right now they're global\n         */\n        if (options.pluginManager) {\n            visitorIterator = options.pluginManager.visitor();\n            for (var i = 0; i < 2; i++) {\n                visitorIterator.first();\n                while ((v = visitorIterator.get())) {\n                    if (v.isPreEvalVisitor) {\n                        if (i === 0 || preEvalVisitors.indexOf(v) === -1) {\n                            preEvalVisitors.push(v);\n                            v.run(root);\n                        }\n                    }\n                    else {\n                        if (i === 0 || visitors$1.indexOf(v) === -1) {\n                            if (v.isPreVisitor) {\n                                visitors$1.unshift(v);\n                            }\n                            else {\n                                visitors$1.push(v);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        evaldRoot = root.eval(evalEnv);\n        for (var i = 0; i < visitors$1.length; i++) {\n            visitors$1[i].run(evaldRoot);\n        }\n        // Run any remaining visitors added after eval pass\n        if (options.pluginManager) {\n            visitorIterator.first();\n            while ((v = visitorIterator.get())) {\n                if (visitors$1.indexOf(v) === -1 && preEvalVisitors.indexOf(v) === -1) {\n                    v.run(evaldRoot);\n                }\n            }\n        }\n        return evaldRoot;\n    }\n\n    /**\n     * Plugin Manager\n     */\n    var PluginManager = /** @class */ (function () {\n        function PluginManager(less) {\n            this.less = less;\n            this.visitors = [];\n            this.preProcessors = [];\n            this.postProcessors = [];\n            this.installedPlugins = [];\n            this.fileManagers = [];\n            this.iterator = -1;\n            this.pluginCache = {};\n            this.Loader = new less.PluginLoader(less);\n        }\n        /**\n         * Adds all the plugins in the array\n         * @param {Array} plugins\n         */\n        PluginManager.prototype.addPlugins = function (plugins) {\n            if (plugins) {\n                for (var i = 0; i < plugins.length; i++) {\n                    this.addPlugin(plugins[i]);\n                }\n            }\n        };\n        /**\n         *\n         * @param plugin\n         * @param {String} filename\n         */\n        PluginManager.prototype.addPlugin = function (plugin, filename, functionRegistry) {\n            this.installedPlugins.push(plugin);\n            if (filename) {\n                this.pluginCache[filename] = plugin;\n            }\n            if (plugin.install) {\n                plugin.install(this.less, this, functionRegistry || this.less.functions.functionRegistry);\n            }\n        };\n        /**\n         *\n         * @param filename\n         */\n        PluginManager.prototype.get = function (filename) {\n            return this.pluginCache[filename];\n        };\n        /**\n         * Adds a visitor. The visitor object has options on itself to determine\n         * when it should run.\n         * @param visitor\n         */\n        PluginManager.prototype.addVisitor = function (visitor) {\n            this.visitors.push(visitor);\n        };\n        /**\n         * Adds a pre processor object\n         * @param {object} preProcessor\n         * @param {number} priority - guidelines 1 = before import, 1000 = import, 2000 = after import\n         */\n        PluginManager.prototype.addPreProcessor = function (preProcessor, priority) {\n            var indexToInsertAt;\n            for (indexToInsertAt = 0; indexToInsertAt < this.preProcessors.length; indexToInsertAt++) {\n                if (this.preProcessors[indexToInsertAt].priority >= priority) {\n                    break;\n                }\n            }\n            this.preProcessors.splice(indexToInsertAt, 0, { preProcessor: preProcessor, priority: priority });\n        };\n        /**\n         * Adds a post processor object\n         * @param {object} postProcessor\n         * @param {number} priority - guidelines 1 = before compression, 1000 = compression, 2000 = after compression\n         */\n        PluginManager.prototype.addPostProcessor = function (postProcessor, priority) {\n            var indexToInsertAt;\n            for (indexToInsertAt = 0; indexToInsertAt < this.postProcessors.length; indexToInsertAt++) {\n                if (this.postProcessors[indexToInsertAt].priority >= priority) {\n                    break;\n                }\n            }\n            this.postProcessors.splice(indexToInsertAt, 0, { postProcessor: postProcessor, priority: priority });\n        };\n        /**\n         *\n         * @param manager\n         */\n        PluginManager.prototype.addFileManager = function (manager) {\n            this.fileManagers.push(manager);\n        };\n        /**\n         *\n         * @returns {Array}\n         * @private\n         */\n        PluginManager.prototype.getPreProcessors = function () {\n            var preProcessors = [];\n            for (var i = 0; i < this.preProcessors.length; i++) {\n                preProcessors.push(this.preProcessors[i].preProcessor);\n            }\n            return preProcessors;\n        };\n        /**\n         *\n         * @returns {Array}\n         * @private\n         */\n        PluginManager.prototype.getPostProcessors = function () {\n            var postProcessors = [];\n            for (var i = 0; i < this.postProcessors.length; i++) {\n                postProcessors.push(this.postProcessors[i].postProcessor);\n            }\n            return postProcessors;\n        };\n        /**\n         *\n         * @returns {Array}\n         * @private\n         */\n        PluginManager.prototype.getVisitors = function () {\n            return this.visitors;\n        };\n        PluginManager.prototype.visitor = function () {\n            var self = this;\n            return {\n                first: function () {\n                    self.iterator = -1;\n                    return self.visitors[self.iterator];\n                },\n                get: function () {\n                    self.iterator += 1;\n                    return self.visitors[self.iterator];\n                }\n            };\n        };\n        /**\n         *\n         * @returns {Array}\n         * @private\n         */\n        PluginManager.prototype.getFileManagers = function () {\n            return this.fileManagers;\n        };\n        return PluginManager;\n    }());\n    var pm;\n    var PluginManagerFactory = function (less, newFactory) {\n        if (newFactory || !pm) {\n            pm = new PluginManager(less);\n        }\n        return pm;\n    };\n\n    function SourceMapOutput (environment) {\n        var SourceMapOutput = /** @class */ (function () {\n            function SourceMapOutput(options) {\n                this._css = [];\n                this._rootNode = options.rootNode;\n                this._contentsMap = options.contentsMap;\n                this._contentsIgnoredCharsMap = options.contentsIgnoredCharsMap;\n                if (options.sourceMapFilename) {\n                    this._sourceMapFilename = options.sourceMapFilename.replace(/\\\\/g, '/');\n                }\n                this._outputFilename = options.outputFilename;\n                this.sourceMapURL = options.sourceMapURL;\n                if (options.sourceMapBasepath) {\n                    this._sourceMapBasepath = options.sourceMapBasepath.replace(/\\\\/g, '/');\n                }\n                if (options.sourceMapRootpath) {\n                    this._sourceMapRootpath = options.sourceMapRootpath.replace(/\\\\/g, '/');\n                    if (this._sourceMapRootpath.charAt(this._sourceMapRootpath.length - 1) !== '/') {\n                        this._sourceMapRootpath += '/';\n                    }\n                }\n                else {\n                    this._sourceMapRootpath = '';\n                }\n                this._outputSourceFiles = options.outputSourceFiles;\n                this._sourceMapGeneratorConstructor = environment.getSourceMapGenerator();\n                this._lineNumber = 0;\n                this._column = 0;\n            }\n            SourceMapOutput.prototype.removeBasepath = function (path) {\n                if (this._sourceMapBasepath && path.indexOf(this._sourceMapBasepath) === 0) {\n                    path = path.substring(this._sourceMapBasepath.length);\n                    if (path.charAt(0) === '\\\\' || path.charAt(0) === '/') {\n                        path = path.substring(1);\n                    }\n                }\n                return path;\n            };\n            SourceMapOutput.prototype.normalizeFilename = function (filename) {\n                filename = filename.replace(/\\\\/g, '/');\n                filename = this.removeBasepath(filename);\n                return (this._sourceMapRootpath || '') + filename;\n            };\n            SourceMapOutput.prototype.add = function (chunk, fileInfo, index, mapLines) {\n                // ignore adding empty strings\n                if (!chunk) {\n                    return;\n                }\n                var lines, sourceLines, columns, sourceColumns, i;\n                if (fileInfo && fileInfo.filename) {\n                    var inputSource = this._contentsMap[fileInfo.filename];\n                    // remove vars/banner added to the top of the file\n                    if (this._contentsIgnoredCharsMap[fileInfo.filename]) {\n                        // adjust the index\n                        index -= this._contentsIgnoredCharsMap[fileInfo.filename];\n                        if (index < 0) {\n                            index = 0;\n                        }\n                        // adjust the source\n                        inputSource = inputSource.slice(this._contentsIgnoredCharsMap[fileInfo.filename]);\n                    }\n                    /**\n                     * ignore empty content, or failsafe\n                     * if contents map is incorrect\n                     */\n                    if (inputSource === undefined) {\n                        this._css.push(chunk);\n                        return;\n                    }\n                    inputSource = inputSource.substring(0, index);\n                    sourceLines = inputSource.split('\\n');\n                    sourceColumns = sourceLines[sourceLines.length - 1];\n                }\n                lines = chunk.split('\\n');\n                columns = lines[lines.length - 1];\n                if (fileInfo && fileInfo.filename) {\n                    if (!mapLines) {\n                        this._sourceMapGenerator.addMapping({ generated: { line: this._lineNumber + 1, column: this._column },\n                            original: { line: sourceLines.length, column: sourceColumns.length },\n                            source: this.normalizeFilename(fileInfo.filename) });\n                    }\n                    else {\n                        for (i = 0; i < lines.length; i++) {\n                            this._sourceMapGenerator.addMapping({ generated: { line: this._lineNumber + i + 1, column: i === 0 ? this._column : 0 },\n                                original: { line: sourceLines.length + i, column: i === 0 ? sourceColumns.length : 0 },\n                                source: this.normalizeFilename(fileInfo.filename) });\n                        }\n                    }\n                }\n                if (lines.length === 1) {\n                    this._column += columns.length;\n                }\n                else {\n                    this._lineNumber += lines.length - 1;\n                    this._column = columns.length;\n                }\n                this._css.push(chunk);\n            };\n            SourceMapOutput.prototype.isEmpty = function () {\n                return this._css.length === 0;\n            };\n            SourceMapOutput.prototype.toCSS = function (context) {\n                this._sourceMapGenerator = new this._sourceMapGeneratorConstructor({ file: this._outputFilename, sourceRoot: null });\n                if (this._outputSourceFiles) {\n                    for (var filename in this._contentsMap) {\n                        if (this._contentsMap.hasOwnProperty(filename)) {\n                            var source = this._contentsMap[filename];\n                            if (this._contentsIgnoredCharsMap[filename]) {\n                                source = source.slice(this._contentsIgnoredCharsMap[filename]);\n                            }\n                            this._sourceMapGenerator.setSourceContent(this.normalizeFilename(filename), source);\n                        }\n                    }\n                }\n                this._rootNode.genCSS(context, this);\n                if (this._css.length > 0) {\n                    var sourceMapURL = void 0;\n                    var sourceMapContent = JSON.stringify(this._sourceMapGenerator.toJSON());\n                    if (this.sourceMapURL) {\n                        sourceMapURL = this.sourceMapURL;\n                    }\n                    else if (this._sourceMapFilename) {\n                        sourceMapURL = this._sourceMapFilename;\n                    }\n                    this.sourceMapURL = sourceMapURL;\n                    this.sourceMap = sourceMapContent;\n                }\n                return this._css.join('');\n            };\n            return SourceMapOutput;\n        }());\n        return SourceMapOutput;\n    }\n\n    function SourceMapBuilder (SourceMapOutput, environment) {\n        var SourceMapBuilder = /** @class */ (function () {\n            function SourceMapBuilder(options) {\n                this.options = options;\n            }\n            SourceMapBuilder.prototype.toCSS = function (rootNode, options, imports) {\n                var sourceMapOutput = new SourceMapOutput({\n                    contentsIgnoredCharsMap: imports.contentsIgnoredChars,\n                    rootNode: rootNode,\n                    contentsMap: imports.contents,\n                    sourceMapFilename: this.options.sourceMapFilename,\n                    sourceMapURL: this.options.sourceMapURL,\n                    outputFilename: this.options.sourceMapOutputFilename,\n                    sourceMapBasepath: this.options.sourceMapBasepath,\n                    sourceMapRootpath: this.options.sourceMapRootpath,\n                    outputSourceFiles: this.options.outputSourceFiles,\n                    sourceMapGenerator: this.options.sourceMapGenerator,\n                    sourceMapFileInline: this.options.sourceMapFileInline,\n                    disableSourcemapAnnotation: this.options.disableSourcemapAnnotation\n                });\n                var css = sourceMapOutput.toCSS(options);\n                this.sourceMap = sourceMapOutput.sourceMap;\n                this.sourceMapURL = sourceMapOutput.sourceMapURL;\n                if (this.options.sourceMapInputFilename) {\n                    this.sourceMapInputFilename = sourceMapOutput.normalizeFilename(this.options.sourceMapInputFilename);\n                }\n                if (this.options.sourceMapBasepath !== undefined && this.sourceMapURL !== undefined) {\n                    this.sourceMapURL = sourceMapOutput.removeBasepath(this.sourceMapURL);\n                }\n                return css + this.getCSSAppendage();\n            };\n            SourceMapBuilder.prototype.getCSSAppendage = function () {\n                var sourceMapURL = this.sourceMapURL;\n                if (this.options.sourceMapFileInline) {\n                    if (this.sourceMap === undefined) {\n                        return '';\n                    }\n                    sourceMapURL = \"data:application/json;base64,\" + environment.encodeBase64(this.sourceMap);\n                }\n                if (this.options.disableSourcemapAnnotation) {\n                    return '';\n                }\n                if (sourceMapURL) {\n                    return \"/*# sourceMappingURL=\" + sourceMapURL + \" */\";\n                }\n                return '';\n            };\n            SourceMapBuilder.prototype.getExternalSourceMap = function () {\n                return this.sourceMap;\n            };\n            SourceMapBuilder.prototype.setExternalSourceMap = function (sourceMap) {\n                this.sourceMap = sourceMap;\n            };\n            SourceMapBuilder.prototype.isInline = function () {\n                return this.options.sourceMapFileInline;\n            };\n            SourceMapBuilder.prototype.getSourceMapURL = function () {\n                return this.sourceMapURL;\n            };\n            SourceMapBuilder.prototype.getOutputFilename = function () {\n                return this.options.sourceMapOutputFilename;\n            };\n            SourceMapBuilder.prototype.getInputFilename = function () {\n                return this.sourceMapInputFilename;\n            };\n            return SourceMapBuilder;\n        }());\n        return SourceMapBuilder;\n    }\n\n    function ParseTree (SourceMapBuilder) {\n        var ParseTree = /** @class */ (function () {\n            function ParseTree(root, imports) {\n                this.root = root;\n                this.imports = imports;\n            }\n            ParseTree.prototype.toCSS = function (options) {\n                var evaldRoot;\n                var result = {};\n                var sourceMapBuilder;\n                try {\n                    evaldRoot = transformTree(this.root, options);\n                }\n                catch (e) {\n                    throw new LessError(e, this.imports);\n                }\n                try {\n                    var compress = Boolean(options.compress);\n                    if (compress) {\n                        logger$1.warn('The compress option has been deprecated. ' +\n                            'We recommend you use a dedicated css minifier, for instance see less-plugin-clean-css.');\n                    }\n                    var toCSSOptions = {\n                        compress: compress,\n                        dumpLineNumbers: options.dumpLineNumbers,\n                        strictUnits: Boolean(options.strictUnits),\n                        numPrecision: 8\n                    };\n                    if (options.sourceMap) {\n                        sourceMapBuilder = new SourceMapBuilder(options.sourceMap);\n                        result.css = sourceMapBuilder.toCSS(evaldRoot, toCSSOptions, this.imports);\n                    }\n                    else {\n                        result.css = evaldRoot.toCSS(toCSSOptions);\n                    }\n                }\n                catch (e) {\n                    throw new LessError(e, this.imports);\n                }\n                if (options.pluginManager) {\n                    var postProcessors = options.pluginManager.getPostProcessors();\n                    for (var i = 0; i < postProcessors.length; i++) {\n                        result.css = postProcessors[i].process(result.css, { sourceMap: sourceMapBuilder, options: options, imports: this.imports });\n                    }\n                }\n                if (options.sourceMap) {\n                    result.map = sourceMapBuilder.getExternalSourceMap();\n                }\n                result.imports = [];\n                for (var file in this.imports.files) {\n                    if (this.imports.files.hasOwnProperty(file) && file !== this.imports.rootFilename) {\n                        result.imports.push(file);\n                    }\n                }\n                return result;\n            };\n            return ParseTree;\n        }());\n        return ParseTree;\n    }\n\n    function ImportManager (environment) {\n        // FileInfo = {\n        //  'rewriteUrls' - option - whether to adjust URL's to be relative\n        //  'filename' - full resolved filename of current file\n        //  'rootpath' - path to append to normal URLs for this node\n        //  'currentDirectory' - path to the current file, absolute\n        //  'rootFilename' - filename of the base file\n        //  'entryPath' - absolute path to the entry file\n        //  'reference' - whether the file should not be output and only output parts that are referenced\n        var ImportManager = /** @class */ (function () {\n            function ImportManager(less, context, rootFileInfo) {\n                this.less = less;\n                this.rootFilename = rootFileInfo.filename;\n                this.paths = context.paths || []; // Search paths, when importing\n                this.contents = {}; // map - filename to contents of all the files\n                this.contentsIgnoredChars = {}; // map - filename to lines at the beginning of each file to ignore\n                this.mime = context.mime;\n                this.error = null;\n                this.context = context;\n                // Deprecated? Unused outside of here, could be useful.\n                this.queue = []; // Files which haven't been imported yet\n                this.files = {}; // Holds the imported parse trees.\n            }\n            /**\n             * Add an import to be imported\n             * @param path - the raw path\n             * @param tryAppendExtension - whether to try appending a file extension (.less or .js if the path has no extension)\n             * @param currentFileInfo - the current file info (used for instance to work out relative paths)\n             * @param importOptions - import options\n             * @param callback - callback for when it is imported\n             */\n            ImportManager.prototype.push = function (path, tryAppendExtension, currentFileInfo, importOptions, callback) {\n                var importManager = this, pluginLoader = this.context.pluginManager.Loader;\n                this.queue.push(path);\n                var fileParsedFunc = function (e, root, fullPath) {\n                    importManager.queue.splice(importManager.queue.indexOf(path), 1); // Remove the path from the queue\n                    var importedEqualsRoot = fullPath === importManager.rootFilename;\n                    if (importOptions.optional && e) {\n                        callback(null, { rules: [] }, false, null);\n                        logger$1.info(\"The file \" + fullPath + \" was skipped because it was not found and the import was marked optional.\");\n                    }\n                    else {\n                        // Inline imports aren't cached here.\n                        // If we start to cache them, please make sure they won't conflict with non-inline imports of the\n                        // same name as they used to do before this comment and the condition below have been added.\n                        if (!importManager.files[fullPath] && !importOptions.inline) {\n                            importManager.files[fullPath] = { root: root, options: importOptions };\n                        }\n                        if (e && !importManager.error) {\n                            importManager.error = e;\n                        }\n                        callback(e, root, importedEqualsRoot, fullPath);\n                    }\n                };\n                var newFileInfo = {\n                    rewriteUrls: this.context.rewriteUrls,\n                    entryPath: currentFileInfo.entryPath,\n                    rootpath: currentFileInfo.rootpath,\n                    rootFilename: currentFileInfo.rootFilename\n                };\n                var fileManager = environment.getFileManager(path, currentFileInfo.currentDirectory, this.context, environment);\n                if (!fileManager) {\n                    fileParsedFunc({ message: \"Could not find a file-manager for \" + path });\n                    return;\n                }\n                var loadFileCallback = function (loadedFile) {\n                    var plugin;\n                    var resolvedFilename = loadedFile.filename;\n                    var contents = loadedFile.contents.replace(/^\\uFEFF/, '');\n                    // Pass on an updated rootpath if path of imported file is relative and file\n                    // is in a (sub|sup) directory\n                    //\n                    // Examples:\n                    // - If path of imported file is 'module/nav/nav.less' and rootpath is 'less/',\n                    //   then rootpath should become 'less/module/nav/'\n                    // - If path of imported file is '../mixins.less' and rootpath is 'less/',\n                    //   then rootpath should become 'less/../'\n                    newFileInfo.currentDirectory = fileManager.getPath(resolvedFilename);\n                    if (newFileInfo.rewriteUrls) {\n                        newFileInfo.rootpath = fileManager.join((importManager.context.rootpath || ''), fileManager.pathDiff(newFileInfo.currentDirectory, newFileInfo.entryPath));\n                        if (!fileManager.isPathAbsolute(newFileInfo.rootpath) && fileManager.alwaysMakePathsAbsolute()) {\n                            newFileInfo.rootpath = fileManager.join(newFileInfo.entryPath, newFileInfo.rootpath);\n                        }\n                    }\n                    newFileInfo.filename = resolvedFilename;\n                    var newEnv = new contexts.Parse(importManager.context);\n                    newEnv.processImports = false;\n                    importManager.contents[resolvedFilename] = contents;\n                    if (currentFileInfo.reference || importOptions.reference) {\n                        newFileInfo.reference = true;\n                    }\n                    if (importOptions.isPlugin) {\n                        plugin = pluginLoader.evalPlugin(contents, newEnv, importManager, importOptions.pluginArgs, newFileInfo);\n                        if (plugin instanceof LessError) {\n                            fileParsedFunc(plugin, null, resolvedFilename);\n                        }\n                        else {\n                            fileParsedFunc(null, plugin, resolvedFilename);\n                        }\n                    }\n                    else if (importOptions.inline) {\n                        fileParsedFunc(null, contents, resolvedFilename);\n                    }\n                    else {\n                        // import (multiple) parse trees apparently get altered and can't be cached.\n                        // TODO: investigate why this is\n                        if (importManager.files[resolvedFilename]\n                            && !importManager.files[resolvedFilename].options.multiple\n                            && !importOptions.multiple) {\n                            fileParsedFunc(null, importManager.files[resolvedFilename].root, resolvedFilename);\n                        }\n                        else {\n                            new Parser(newEnv, importManager, newFileInfo).parse(contents, function (e, root) {\n                                fileParsedFunc(e, root, resolvedFilename);\n                            });\n                        }\n                    }\n                };\n                var loadedFile;\n                var promise;\n                var context = clone(this.context);\n                if (tryAppendExtension) {\n                    context.ext = importOptions.isPlugin ? '.js' : '.less';\n                }\n                if (importOptions.isPlugin) {\n                    context.mime = 'application/javascript';\n                    if (context.syncImport) {\n                        loadedFile = pluginLoader.loadPluginSync(path, currentFileInfo.currentDirectory, context, environment, fileManager);\n                    }\n                    else {\n                        promise = pluginLoader.loadPlugin(path, currentFileInfo.currentDirectory, context, environment, fileManager);\n                    }\n                }\n                else {\n                    if (context.syncImport) {\n                        loadedFile = fileManager.loadFileSync(path, currentFileInfo.currentDirectory, context, environment);\n                    }\n                    else {\n                        promise = fileManager.loadFile(path, currentFileInfo.currentDirectory, context, environment, function (err, loadedFile) {\n                            if (err) {\n                                fileParsedFunc(err);\n                            }\n                            else {\n                                loadFileCallback(loadedFile);\n                            }\n                        });\n                    }\n                }\n                if (loadedFile) {\n                    if (!loadedFile.filename) {\n                        fileParsedFunc(loadedFile);\n                    }\n                    else {\n                        loadFileCallback(loadedFile);\n                    }\n                }\n                else if (promise) {\n                    promise.then(loadFileCallback, fileParsedFunc);\n                }\n            };\n            return ImportManager;\n        }());\n        return ImportManager;\n    }\n\n    function Parse (environment, ParseTree, ImportManager) {\n        var parse = function (input, options, callback) {\n            if (typeof options === 'function') {\n                callback = options;\n                options = copyOptions(this.options, {});\n            }\n            else {\n                options = copyOptions(this.options, options || {});\n            }\n            if (!callback) {\n                var self_1 = this;\n                return new Promise(function (resolve, reject) {\n                    parse.call(self_1, input, options, function (err, output) {\n                        if (err) {\n                            reject(err);\n                        }\n                        else {\n                            resolve(output);\n                        }\n                    });\n                });\n            }\n            else {\n                var context_1;\n                var rootFileInfo = void 0;\n                var pluginManager_1 = new PluginManagerFactory(this, !options.reUsePluginManager);\n                options.pluginManager = pluginManager_1;\n                context_1 = new contexts.Parse(options);\n                if (options.rootFileInfo) {\n                    rootFileInfo = options.rootFileInfo;\n                }\n                else {\n                    var filename = options.filename || 'input';\n                    var entryPath = filename.replace(/[^\\/\\\\]*$/, '');\n                    rootFileInfo = {\n                        filename: filename,\n                        rewriteUrls: context_1.rewriteUrls,\n                        rootpath: context_1.rootpath || '',\n                        currentDirectory: entryPath,\n                        entryPath: entryPath,\n                        rootFilename: filename\n                    };\n                    // add in a missing trailing slash\n                    if (rootFileInfo.rootpath && rootFileInfo.rootpath.slice(-1) !== '/') {\n                        rootFileInfo.rootpath += '/';\n                    }\n                }\n                var imports_1 = new ImportManager(this, context_1, rootFileInfo);\n                this.importManager = imports_1;\n                // TODO: allow the plugins to be just a list of paths or names\n                // Do an async plugin queue like lessc\n                if (options.plugins) {\n                    options.plugins.forEach(function (plugin) {\n                        var evalResult, contents;\n                        if (plugin.fileContent) {\n                            contents = plugin.fileContent.replace(/^\\uFEFF/, '');\n                            evalResult = pluginManager_1.Loader.evalPlugin(contents, context_1, imports_1, plugin.options, plugin.filename);\n                            if (evalResult instanceof LessError) {\n                                return callback(evalResult);\n                            }\n                        }\n                        else {\n                            pluginManager_1.addPlugin(plugin);\n                        }\n                    });\n                }\n                new Parser(context_1, imports_1, rootFileInfo)\n                    .parse(input, function (e, root) {\n                    if (e) {\n                        return callback(e);\n                    }\n                    callback(null, root, imports_1, options);\n                }, options);\n            }\n        };\n        return parse;\n    }\n\n    function Render (environment, ParseTree, ImportManager) {\n        var render = function (input, options, callback) {\n            if (typeof options === 'function') {\n                callback = options;\n                options = copyOptions(this.options, {});\n            }\n            else {\n                options = copyOptions(this.options, options || {});\n            }\n            if (!callback) {\n                var self_1 = this;\n                return new Promise(function (resolve, reject) {\n                    render.call(self_1, input, options, function (err, output) {\n                        if (err) {\n                            reject(err);\n                        }\n                        else {\n                            resolve(output);\n                        }\n                    });\n                });\n            }\n            else {\n                this.parse(input, options, function (err, root, imports, options) {\n                    if (err) {\n                        return callback(err);\n                    }\n                    var result;\n                    try {\n                        var parseTree = new ParseTree(root, imports);\n                        result = parseTree.toCSS(options);\n                    }\n                    catch (err) {\n                        return callback(err);\n                    }\n                    callback(null, result);\n                });\n            }\n        };\n        return render;\n    }\n\n    var version = \"4.1.2\";\n\n    function parseNodeVersion(version) {\n      var match = version.match(/^v(\\d{1,2})\\.(\\d{1,2})\\.(\\d{1,2})(?:-([0-9A-Za-z-.]+))?(?:\\+([0-9A-Za-z-.]+))?$/); // eslint-disable-line max-len\n      if (!match) {\n        throw new Error('Unable to parse: ' + version);\n      }\n\n      var res = {\n        major: parseInt(match[1], 10),\n        minor: parseInt(match[2], 10),\n        patch: parseInt(match[3], 10),\n        pre: match[4] || '',\n        build: match[5] || '',\n      };\n\n      return res;\n    }\n\n    var parseNodeVersion_1 = parseNodeVersion;\n\n    function lessRoot (environment, fileManagers) {\n        var sourceMapOutput, sourceMapBuilder, parseTree, importManager;\n        environment = new Environment(environment, fileManagers);\n        sourceMapOutput = SourceMapOutput(environment);\n        sourceMapBuilder = SourceMapBuilder(sourceMapOutput, environment);\n        parseTree = ParseTree(sourceMapBuilder);\n        importManager = ImportManager(environment);\n        var render = Render(environment, parseTree);\n        var parse = Parse(environment, parseTree, importManager);\n        var v = parseNodeVersion_1(\"v\" + version);\n        var initial = {\n            version: [v.major, v.minor, v.patch],\n            data: data,\n            tree: tree,\n            Environment: Environment,\n            AbstractFileManager: AbstractFileManager,\n            AbstractPluginLoader: AbstractPluginLoader,\n            environment: environment,\n            visitors: visitors,\n            Parser: Parser,\n            functions: functions(environment),\n            contexts: contexts,\n            SourceMapOutput: sourceMapOutput,\n            SourceMapBuilder: sourceMapBuilder,\n            ParseTree: parseTree,\n            ImportManager: importManager,\n            render: render,\n            parse: parse,\n            LessError: LessError,\n            transformTree: transformTree,\n            utils: utils,\n            PluginManager: PluginManagerFactory,\n            logger: logger$1\n        };\n        // Create a public API\n        var ctor = function (t) {\n            return function () {\n                var obj = Object.create(t.prototype);\n                t.apply(obj, Array.prototype.slice.call(arguments, 0));\n                return obj;\n            };\n        };\n        var t;\n        var api = Object.create(initial);\n        for (var n in initial.tree) {\n            /* eslint guard-for-in: 0 */\n            t = initial.tree[n];\n            if (typeof t === 'function') {\n                api[n.toLowerCase()] = ctor(t);\n            }\n            else {\n                api[n] = Object.create(null);\n                for (var o in t) {\n                    /* eslint guard-for-in: 0 */\n                    api[n][o.toLowerCase()] = ctor(t[o]);\n                }\n            }\n        }\n        /**\n         * Some of the functions assume a `this` context of the API object,\n         * which causes it to fail when wrapped for ES6 imports.\n         *\n         * An assumed `this` should be removed in the future.\n         */\n        initial.parse = initial.parse.bind(api);\n        initial.render = initial.render.bind(api);\n        return api;\n    }\n\n    /* global window, XMLHttpRequest */\n    var options$1;\n    var logger;\n    var fileCache = {};\n    // TODOS - move log somewhere. pathDiff and doing something similar in node. use pathDiff in the other browser file for the initial load\n    var FileManager = function () { };\n    FileManager.prototype = Object.assign(new AbstractFileManager(), {\n        alwaysMakePathsAbsolute: function () {\n            return true;\n        },\n        join: function (basePath, laterPath) {\n            if (!basePath) {\n                return laterPath;\n            }\n            return this.extractUrlParts(laterPath, basePath).path;\n        },\n        doXHR: function (url, type, callback, errback) {\n            var xhr = new XMLHttpRequest();\n            var async = options$1.isFileProtocol ? options$1.fileAsync : true;\n            if (typeof xhr.overrideMimeType === 'function') {\n                xhr.overrideMimeType('text/css');\n            }\n            logger.debug(\"XHR: Getting '\" + url + \"'\");\n            xhr.open('GET', url, async);\n            xhr.setRequestHeader('Accept', type || 'text/x-less, text/css; q=0.9, */*; q=0.5');\n            xhr.send(null);\n            function handleResponse(xhr, callback, errback) {\n                if (xhr.status >= 200 && xhr.status < 300) {\n                    callback(xhr.responseText, xhr.getResponseHeader('Last-Modified'));\n                }\n                else if (typeof errback === 'function') {\n                    errback(xhr.status, url);\n                }\n            }\n            if (options$1.isFileProtocol && !options$1.fileAsync) {\n                if (xhr.status === 0 || (xhr.status >= 200 && xhr.status < 300)) {\n                    callback(xhr.responseText);\n                }\n                else {\n                    errback(xhr.status, url);\n                }\n            }\n            else if (async) {\n                xhr.onreadystatechange = function () {\n                    if (xhr.readyState == 4) {\n                        handleResponse(xhr, callback, errback);\n                    }\n                };\n            }\n            else {\n                handleResponse(xhr, callback, errback);\n            }\n        },\n        supports: function () {\n            return true;\n        },\n        clearFileCache: function () {\n            fileCache = {};\n        },\n        loadFile: function (filename, currentDirectory, options, environment) {\n            // TODO: Add prefix support like less-node?\n            // What about multiple paths?\n            if (currentDirectory && !this.isPathAbsolute(filename)) {\n                filename = currentDirectory + filename;\n            }\n            filename = options.ext ? this.tryAppendExtension(filename, options.ext) : filename;\n            options = options || {};\n            // sheet may be set to the stylesheet for the initial load or a collection of properties including\n            // some context variables for imports\n            var hrefParts = this.extractUrlParts(filename, window.location.href);\n            var href = hrefParts.url;\n            var self = this;\n            return new Promise(function (resolve, reject) {\n                if (options.useFileCache && fileCache[href]) {\n                    try {\n                        var lessText = fileCache[href];\n                        return resolve({ contents: lessText, filename: href, webInfo: { lastModified: new Date() } });\n                    }\n                    catch (e) {\n                        return reject({ filename: href, message: \"Error loading file \" + href + \" error was \" + e.message });\n                    }\n                }\n                self.doXHR(href, options.mime, function doXHRCallback(data, lastModified) {\n                    // per file cache\n                    fileCache[href] = data;\n                    // Use remote copy (re-parse)\n                    resolve({ contents: data, filename: href, webInfo: { lastModified: lastModified } });\n                }, function doXHRError(status, url) {\n                    reject({ type: 'File', message: \"'\" + url + \"' wasn't found (\" + status + \")\", href: href });\n                });\n            });\n        }\n    });\n    var FM = (function (opts, log) {\n        options$1 = opts;\n        logger = log;\n        return FileManager;\n    });\n\n    // TODO: Add tests for browser @plugin\n    /**\n     * Browser Plugin Loader\n     */\n    var PluginLoader = function (less) {\n        this.less = less;\n        // Should we shim this.require for browser? Probably not?\n    };\n    PluginLoader.prototype = Object.assign(new AbstractPluginLoader(), {\n        loadPlugin: function (filename, basePath, context, environment, fileManager) {\n            return new Promise(function (fulfill, reject) {\n                fileManager.loadFile(filename, basePath, context, environment)\n                    .then(fulfill).catch(reject);\n            });\n        }\n    });\n\n    var LogListener = (function (less, options) {\n        var logLevel_debug = 4;\n        var logLevel_info = 3;\n        var logLevel_warn = 2;\n        var logLevel_error = 1;\n        // The amount of logging in the javascript console.\n        // 3 - Debug, information and errors\n        // 2 - Information and errors\n        // 1 - Errors\n        // 0 - None\n        // Defaults to 2\n        options.logLevel = typeof options.logLevel !== 'undefined' ? options.logLevel : (options.env === 'development' ? logLevel_info : logLevel_error);\n        if (!options.loggers) {\n            options.loggers = [{\n                    debug: function (msg) {\n                        if (options.logLevel >= logLevel_debug) {\n                            console.log(msg);\n                        }\n                    },\n                    info: function (msg) {\n                        if (options.logLevel >= logLevel_info) {\n                            console.log(msg);\n                        }\n                    },\n                    warn: function (msg) {\n                        if (options.logLevel >= logLevel_warn) {\n                            console.warn(msg);\n                        }\n                    },\n                    error: function (msg) {\n                        if (options.logLevel >= logLevel_error) {\n                            console.error(msg);\n                        }\n                    }\n                }];\n        }\n        for (var i = 0; i < options.loggers.length; i++) {\n            less.logger.addListener(options.loggers[i]);\n        }\n    });\n\n    var ErrorReporting = (function (window, less, options) {\n        function errorHTML(e, rootHref) {\n            var id = \"less-error-message:\" + extractId(rootHref || '');\n            var template = '<li><label>{line}</label><pre class=\"{class}\">{content}</pre></li>';\n            var elem = window.document.createElement('div');\n            var timer;\n            var content;\n            var errors = [];\n            var filename = e.filename || rootHref;\n            var filenameNoPath = filename.match(/([^\\/]+(\\?.*)?)$/)[1];\n            elem.id = id;\n            elem.className = 'less-error-message';\n            content = \"<h3>\" + (e.type || 'Syntax') + \"Error: \" + (e.message || 'There is an error in your .less file') +\n                (\"</h3><p>in <a href=\\\"\" + filename + \"\\\">\" + filenameNoPath + \"</a> \");\n            var errorline = function (e, i, classname) {\n                if (e.extract[i] !== undefined) {\n                    errors.push(template.replace(/\\{line\\}/, (parseInt(e.line, 10) || 0) + (i - 1))\n                        .replace(/\\{class\\}/, classname)\n                        .replace(/\\{content\\}/, e.extract[i]));\n                }\n            };\n            if (e.line) {\n                errorline(e, 0, '');\n                errorline(e, 1, 'line');\n                errorline(e, 2, '');\n                content += \"on line \" + e.line + \", column \" + (e.column + 1) + \":</p><ul>\" + errors.join('') + \"</ul>\";\n            }\n            if (e.stack && (e.extract || options.logLevel >= 4)) {\n                content += \"<br/>Stack Trace</br />\" + e.stack.split('\\n').slice(1).join('<br/>');\n            }\n            elem.innerHTML = content;\n            // CSS for error messages\n            browser.createCSS(window.document, [\n                '.less-error-message ul, .less-error-message li {',\n                'list-style-type: none;',\n                'margin-right: 15px;',\n                'padding: 4px 0;',\n                'margin: 0;',\n                '}',\n                '.less-error-message label {',\n                'font-size: 12px;',\n                'margin-right: 15px;',\n                'padding: 4px 0;',\n                'color: #cc7777;',\n                '}',\n                '.less-error-message pre {',\n                'color: #dd6666;',\n                'padding: 4px 0;',\n                'margin: 0;',\n                'display: inline-block;',\n                '}',\n                '.less-error-message pre.line {',\n                'color: #ff0000;',\n                '}',\n                '.less-error-message h3 {',\n                'font-size: 20px;',\n                'font-weight: bold;',\n                'padding: 15px 0 5px 0;',\n                'margin: 0;',\n                '}',\n                '.less-error-message a {',\n                'color: #10a',\n                '}',\n                '.less-error-message .error {',\n                'color: red;',\n                'font-weight: bold;',\n                'padding-bottom: 2px;',\n                'border-bottom: 1px dashed red;',\n                '}'\n            ].join('\\n'), { title: 'error-message' });\n            elem.style.cssText = [\n                'font-family: Arial, sans-serif',\n                'border: 1px solid #e00',\n                'background-color: #eee',\n                'border-radius: 5px',\n                '-webkit-border-radius: 5px',\n                '-moz-border-radius: 5px',\n                'color: #e00',\n                'padding: 15px',\n                'margin-bottom: 15px'\n            ].join(';');\n            if (options.env === 'development') {\n                timer = setInterval(function () {\n                    var document = window.document;\n                    var body = document.body;\n                    if (body) {\n                        if (document.getElementById(id)) {\n                            body.replaceChild(elem, document.getElementById(id));\n                        }\n                        else {\n                            body.insertBefore(elem, body.firstChild);\n                        }\n                        clearInterval(timer);\n                    }\n                }, 10);\n            }\n        }\n        function removeErrorHTML(path) {\n            var node = window.document.getElementById(\"less-error-message:\" + extractId(path));\n            if (node) {\n                node.parentNode.removeChild(node);\n            }\n        }\n        function removeError(path) {\n            if (!options.errorReporting || options.errorReporting === 'html') {\n                removeErrorHTML(path);\n            }\n            else if (options.errorReporting === 'console') ;\n            else if (typeof options.errorReporting === 'function') {\n                options.errorReporting('remove', path);\n            }\n        }\n        function errorConsole(e, rootHref) {\n            var template = '{line} {content}';\n            var filename = e.filename || rootHref;\n            var errors = [];\n            var content = (e.type || 'Syntax') + \"Error: \" + (e.message || 'There is an error in your .less file') + \" in \" + filename;\n            var errorline = function (e, i, classname) {\n                if (e.extract[i] !== undefined) {\n                    errors.push(template.replace(/\\{line\\}/, (parseInt(e.line, 10) || 0) + (i - 1))\n                        .replace(/\\{class\\}/, classname)\n                        .replace(/\\{content\\}/, e.extract[i]));\n                }\n            };\n            if (e.line) {\n                errorline(e, 0, '');\n                errorline(e, 1, 'line');\n                errorline(e, 2, '');\n                content += \" on line \" + e.line + \", column \" + (e.column + 1) + \":\\n\" + errors.join('\\n');\n            }\n            if (e.stack && (e.extract || options.logLevel >= 4)) {\n                content += \"\\nStack Trace\\n\" + e.stack;\n            }\n            less.logger.error(content);\n        }\n        function error(e, rootHref) {\n            if (!options.errorReporting || options.errorReporting === 'html') {\n                errorHTML(e, rootHref);\n            }\n            else if (options.errorReporting === 'console') {\n                errorConsole(e, rootHref);\n            }\n            else if (typeof options.errorReporting === 'function') {\n                options.errorReporting('add', e, rootHref);\n            }\n        }\n        return {\n            add: error,\n            remove: removeError\n        };\n    });\n\n    // Cache system is a bit outdated and could do with work\n    var Cache = (function (window, options, logger) {\n        var cache = null;\n        if (options.env !== 'development') {\n            try {\n                cache = (typeof window.localStorage === 'undefined') ? null : window.localStorage;\n            }\n            catch (_) { }\n        }\n        return {\n            setCSS: function (path, lastModified, modifyVars, styles) {\n                if (cache) {\n                    logger.info(\"saving \" + path + \" to cache.\");\n                    try {\n                        cache.setItem(path, styles);\n                        cache.setItem(path + \":timestamp\", lastModified);\n                        if (modifyVars) {\n                            cache.setItem(path + \":vars\", JSON.stringify(modifyVars));\n                        }\n                    }\n                    catch (e) {\n                        // TODO - could do with adding more robust error handling\n                        logger.error(\"failed to save \\\"\" + path + \"\\\" to local storage for caching.\");\n                    }\n                }\n            },\n            getCSS: function (path, webInfo, modifyVars) {\n                var css = cache && cache.getItem(path);\n                var timestamp = cache && cache.getItem(path + \":timestamp\");\n                var vars = cache && cache.getItem(path + \":vars\");\n                modifyVars = modifyVars || {};\n                vars = vars || \"{}\"; // if not set, treat as the JSON representation of an empty object\n                if (timestamp && webInfo.lastModified &&\n                    (new Date(webInfo.lastModified).valueOf() ===\n                        new Date(timestamp).valueOf()) &&\n                    JSON.stringify(modifyVars) === vars) {\n                    // Use local copy\n                    return css;\n                }\n            }\n        };\n    });\n\n    var ImageSize = (function () {\n        function imageSize() {\n            throw {\n                type: 'Runtime',\n                message: 'Image size functions are not supported in browser version of less'\n            };\n        }\n        var imageFunctions = {\n            'image-size': function (filePathNode) {\n                imageSize();\n                return -1;\n            },\n            'image-width': function (filePathNode) {\n                imageSize();\n                return -1;\n            },\n            'image-height': function (filePathNode) {\n                imageSize();\n                return -1;\n            }\n        };\n        functionRegistry.addMultiple(imageFunctions);\n    });\n\n    //\n    var root = (function (window, options) {\n        var document = window.document;\n        var less = lessRoot();\n        less.options = options;\n        var environment = less.environment;\n        var FileManager = FM(options, less.logger);\n        var fileManager = new FileManager();\n        environment.addFileManager(fileManager);\n        less.FileManager = FileManager;\n        less.PluginLoader = PluginLoader;\n        LogListener(less, options);\n        var errors = ErrorReporting(window, less, options);\n        var cache = less.cache = options.cache || Cache(window, options, less.logger);\n        ImageSize(less.environment);\n        // Setup user functions - Deprecate?\n        if (options.functions) {\n            less.functions.functionRegistry.addMultiple(options.functions);\n        }\n        var typePattern = /^text\\/(x-)?less$/;\n        function clone(obj) {\n            var cloned = {};\n            for (var prop in obj) {\n                if (obj.hasOwnProperty(prop)) {\n                    cloned[prop] = obj[prop];\n                }\n            }\n            return cloned;\n        }\n        // only really needed for phantom\n        function bind(func, thisArg) {\n            var curryArgs = Array.prototype.slice.call(arguments, 2);\n            return function () {\n                var args = curryArgs.concat(Array.prototype.slice.call(arguments, 0));\n                return func.apply(thisArg, args);\n            };\n        }\n        function loadStyles(modifyVars) {\n            var styles = document.getElementsByTagName('style');\n            var style;\n            for (var i = 0; i < styles.length; i++) {\n                style = styles[i];\n                if (style.type.match(typePattern)) {\n                    var instanceOptions = clone(options);\n                    instanceOptions.modifyVars = modifyVars;\n                    var lessText = style.innerHTML || '';\n                    instanceOptions.filename = document.location.href.replace(/#.*$/, '');\n                    /* jshint loopfunc:true */\n                    // use closure to store current style\n                    less.render(lessText, instanceOptions, bind(function (style, e, result) {\n                        if (e) {\n                            errors.add(e, 'inline');\n                        }\n                        else {\n                            style.type = 'text/css';\n                            if (style.styleSheet) {\n                                style.styleSheet.cssText = result.css;\n                            }\n                            else {\n                                style.innerHTML = result.css;\n                            }\n                        }\n                    }, null, style));\n                }\n            }\n        }\n        function loadStyleSheet(sheet, callback, reload, remaining, modifyVars) {\n            var instanceOptions = clone(options);\n            addDataAttr(instanceOptions, sheet);\n            instanceOptions.mime = sheet.type;\n            if (modifyVars) {\n                instanceOptions.modifyVars = modifyVars;\n            }\n            function loadInitialFileCallback(loadedFile) {\n                var data = loadedFile.contents;\n                var path = loadedFile.filename;\n                var webInfo = loadedFile.webInfo;\n                var newFileInfo = {\n                    currentDirectory: fileManager.getPath(path),\n                    filename: path,\n                    rootFilename: path,\n                    rewriteUrls: instanceOptions.rewriteUrls\n                };\n                newFileInfo.entryPath = newFileInfo.currentDirectory;\n                newFileInfo.rootpath = instanceOptions.rootpath || newFileInfo.currentDirectory;\n                if (webInfo) {\n                    webInfo.remaining = remaining;\n                    var css = cache.getCSS(path, webInfo, instanceOptions.modifyVars);\n                    if (!reload && css) {\n                        webInfo.local = true;\n                        callback(null, css, data, sheet, webInfo, path);\n                        return;\n                    }\n                }\n                // TODO add tests around how this behaves when reloading\n                errors.remove(path);\n                instanceOptions.rootFileInfo = newFileInfo;\n                less.render(data, instanceOptions, function (e, result) {\n                    if (e) {\n                        e.href = path;\n                        callback(e);\n                    }\n                    else {\n                        cache.setCSS(sheet.href, webInfo.lastModified, instanceOptions.modifyVars, result.css);\n                        callback(null, result.css, data, sheet, webInfo, path);\n                    }\n                });\n            }\n            fileManager.loadFile(sheet.href, null, instanceOptions, environment)\n                .then(function (loadedFile) {\n                loadInitialFileCallback(loadedFile);\n            }).catch(function (err) {\n                console.log(err);\n                callback(err);\n            });\n        }\n        function loadStyleSheets(callback, reload, modifyVars) {\n            for (var i = 0; i < less.sheets.length; i++) {\n                loadStyleSheet(less.sheets[i], callback, reload, less.sheets.length - (i + 1), modifyVars);\n            }\n        }\n        function initRunningMode() {\n            if (less.env === 'development') {\n                less.watchTimer = setInterval(function () {\n                    if (less.watchMode) {\n                        fileManager.clearFileCache();\n                        loadStyleSheets(function (e, css, _, sheet, webInfo) {\n                            if (e) {\n                                errors.add(e, e.href || sheet.href);\n                            }\n                            else if (css) {\n                                browser.createCSS(window.document, css, sheet);\n                            }\n                        });\n                    }\n                }, options.poll);\n            }\n        }\n        //\n        // Watch mode\n        //\n        less.watch = function () {\n            if (!less.watchMode) {\n                less.env = 'development';\n                initRunningMode();\n            }\n            this.watchMode = true;\n            return true;\n        };\n        less.unwatch = function () { clearInterval(less.watchTimer); this.watchMode = false; return false; };\n        //\n        // Synchronously get all <link> tags with the 'rel' attribute set to\n        // \"stylesheet/less\".\n        //\n        less.registerStylesheetsImmediately = function () {\n            var links = document.getElementsByTagName('link');\n            less.sheets = [];\n            for (var i = 0; i < links.length; i++) {\n                if (links[i].rel === 'stylesheet/less' || (links[i].rel.match(/stylesheet/) &&\n                    (links[i].type.match(typePattern)))) {\n                    less.sheets.push(links[i]);\n                }\n            }\n        };\n        //\n        // Asynchronously get all <link> tags with the 'rel' attribute set to\n        // \"stylesheet/less\", returning a Promise.\n        //\n        less.registerStylesheets = function () { return new Promise(function (resolve, reject) {\n            less.registerStylesheetsImmediately();\n            resolve();\n        }); };\n        //\n        // With this function, it's possible to alter variables and re-render\n        // CSS without reloading less-files\n        //\n        less.modifyVars = function (record) { return less.refresh(true, record, false); };\n        less.refresh = function (reload, modifyVars, clearFileCache) {\n            if ((reload || clearFileCache) && clearFileCache !== false) {\n                fileManager.clearFileCache();\n            }\n            return new Promise(function (resolve, reject) {\n                var startTime;\n                var endTime;\n                var totalMilliseconds;\n                var remainingSheets;\n                startTime = endTime = new Date();\n                // Set counter for remaining unprocessed sheets\n                remainingSheets = less.sheets.length;\n                if (remainingSheets === 0) {\n                    endTime = new Date();\n                    totalMilliseconds = endTime - startTime;\n                    less.logger.info('Less has finished and no sheets were loaded.');\n                    resolve({\n                        startTime: startTime,\n                        endTime: endTime,\n                        totalMilliseconds: totalMilliseconds,\n                        sheets: less.sheets.length\n                    });\n                }\n                else {\n                    // Relies on less.sheets array, callback seems to be guaranteed to be called for every element of the array\n                    loadStyleSheets(function (e, css, _, sheet, webInfo) {\n                        if (e) {\n                            errors.add(e, e.href || sheet.href);\n                            reject(e);\n                            return;\n                        }\n                        if (webInfo.local) {\n                            less.logger.info(\"Loading \" + sheet.href + \" from cache.\");\n                        }\n                        else {\n                            less.logger.info(\"Rendered \" + sheet.href + \" successfully.\");\n                        }\n                        browser.createCSS(window.document, css, sheet);\n                        less.logger.info(\"CSS for \" + sheet.href + \" generated in \" + (new Date() - endTime) + \"ms\");\n                        // Count completed sheet\n                        remainingSheets--;\n                        // Check if the last remaining sheet was processed and then call the promise\n                        if (remainingSheets === 0) {\n                            totalMilliseconds = new Date() - startTime;\n                            less.logger.info(\"Less has finished. CSS generated in \" + totalMilliseconds + \"ms\");\n                            resolve({\n                                startTime: startTime,\n                                endTime: endTime,\n                                totalMilliseconds: totalMilliseconds,\n                                sheets: less.sheets.length\n                            });\n                        }\n                        endTime = new Date();\n                    }, reload, modifyVars);\n                }\n                loadStyles(modifyVars);\n            });\n        };\n        less.refreshStyles = loadStyles;\n        return less;\n    });\n\n    /**\n     * Kicks off less and compiles any stylesheets\n     * used in the browser distributed version of less\n     * to kick-start less using the browser api\n     */\n    var options = defaultOptions();\n    if (window.less) {\n        for (var key in window.less) {\n            if (window.less.hasOwnProperty(key)) {\n                options[key] = window.less[key];\n            }\n        }\n    }\n    addDefaultOptions(window, options);\n    options.plugins = options.plugins || [];\n    if (window.LESS_PLUGINS) {\n        options.plugins = options.plugins.concat(window.LESS_PLUGINS);\n    }\n    var less = root(window, options);\n    window.less = less;\n    var css;\n    var head;\n    var style;\n    // Always restore page visibility\n    function resolveOrReject(data) {\n        if (data.filename) {\n            console.warn(data);\n        }\n        if (!options.async) {\n            head.removeChild(style);\n        }\n    }\n    if (options.onReady) {\n        if (/!watch/.test(window.location.hash)) {\n            less.watch();\n        }\n        // Simulate synchronous stylesheet loading by hiding page rendering\n        if (!options.async) {\n            css = 'body { display: none !important }';\n            head = document.head || document.getElementsByTagName('head')[0];\n            style = document.createElement('style');\n            style.type = 'text/css';\n            if (style.styleSheet) {\n                style.styleSheet.cssText = css;\n            }\n            else {\n                style.appendChild(document.createTextNode(css));\n            }\n            head.appendChild(style);\n        }\n        less.registerStylesheetsImmediately();\n        less.pageLoadFinished = less.refresh(less.env === 'development').then(resolveOrReject, resolveOrReject);\n    }\n\n    return less;\n\n})));\n"],"names":[],"version":3,"file":"index.e44cb34f.js.map","sourceRoot":"/__parcel_source_root/"}